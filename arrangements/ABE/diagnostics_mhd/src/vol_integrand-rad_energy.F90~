!-----------------------------------------------------------------------------
! Integrand of total radiation energy Erad
!-----------------------------------------------------------------------------
#include "cctk.h"
#include "cctk_Arguments.h"
#include "cctk_Functions.h"
#include "cctk_Parameters.h"

subroutine radiation_energy_integrand(CCTK_ARGUMENTS)
  implicit none

  !~~~~~> Input parameters:
  DECLARE_CCTK_ARGUMENTS
  DECLARE_CCTK_PARAMETERS
  DECLARE_CCTK_FUNCTIONS

  !~~~~~> Other variables:
  real*8                             :: dX, dY, dZ
  real*8                             :: dV,R_axi,cs,sn,pi,FOUR,ONE
  integer                            :: i,j,k
  integer                            :: AXISYM
  parameter(AXISYM = 4)
  parameter(ONE = 1.D0, FOUR = 4.D0)
  pi = acos( - one )

  WhichIntegral = 130
!  write(*,*) "vol_integrand-rad_energy.F90"
  
  if(MOD(cctk_iteration,Compute_VolIntegrands_Every)==0) then
     !-----------------------------------------------------------------------------
     ! Compute integrand
     !-----------------------------------------------------------------------------
     !Reset VolIntegrand quickly, using OpenMP
     !$omp parallel do
     do k=1,cctk_lsh(3)
        do j=1,cctk_lsh(2)
           do i=1,cctk_lsh(1)
              VolIntegrand(i,j,k) = 0.D0

!if (i==1.and.j==1.and.k==1) then
!    write(*,*) " Inside diagnostics_mhd vol_integrand-rad enegy  u0(i,j,k) is ", u0(i,j,k)
!    write(*,*) "E_rad and F_radx are", E_rad(i,j,k), F_radx(i,j,k)
!end if

           end do
        end do
     end do
     !$omp end parallel do
     ! Remove OpenMP support until we remove the temporary variables
     !!!$omp parallel do
     do k = cctk_nghostzones(3)+1,cctk_lsh(3)-cctk_nghostzones(3)
        do j = cctk_nghostzones(2)+1,cctk_lsh(2)-cctk_nghostzones(2)
           do i = cctk_nghostzones(1)+1,cctk_lsh(1)-cctk_nghostzones(1)
                 VolIntegrand(i,j,k) = E_rad(i,j,k)
           end do ! i-loop
        end do ! j-loop
     end do ! k-loop
     !!!$omp end parallel do
  end if

end subroutine radiation_energy_integrand
