!----------------------------
! Set up rest mass integrand
!----------------------------
#include "cctk.h"
#include "cctk_Arguments.h"
#include "cctk_Functions.h"
#include "cctk_Parameters.h"

subroutine  meq34_integrand(CCTK_ARGUMENTS)
  implicit none

  !~~~~~> Input parameters:
  DECLARE_CCTK_ARGUMENTS
  DECLARE_CCTK_PARAMETERS
  DECLARE_CCTK_FUNCTIONS

  !~~~~~> Other variables:
  real*8                             :: dX, dY, dZ, phiangle,xco,yco
  integer                            :: i,j,k
  integer                            :: AXISYM
  parameter(AXISYM = 4)

  WhichIntegral = 125

  if(MOD(cctk_iteration,Compute_VolIntegrands_Every)==0) then
     !-----------------------------------------------------------------------------
     ! Compute integrand
     !-----------------------------------------------------------------------------
  write(*,*) "x,y center of mass:",CoMx_VolInt/CoM_VolInt_denominator,CoMy_VolInt/CoM_VolInt_denominator
     !Reset VolIntegrand quickly, using OpenMP
     !$omp parallel do
     do k=1,cctk_lsh(3)
        do j=1,cctk_lsh(2)
           do i=1,cctk_lsh(1)
              VolIntegrand(i,j,k) = 0.D0
              VolIntegrand2(i,j,k) = 0.D0
              VolIntegrand3(i,j,k) = 0.D0
              VolIntegrand4(i,j,k) = 0.D0
           end do
        end do
     end do
     !$omp end parallel do


     !$omp parallel do private(phiangle,xco,yco)
     do k = cctk_nghostzones(3)+1,cctk_lsh(3)-cctk_nghostzones(3)
        do j = cctk_nghostzones(2)+1,cctk_lsh(2)-cctk_nghostzones(2)
           do i = cctk_nghostzones(1)+1,cctk_lsh(1)-cctk_nghostzones(1)
!              if (rho_b(i,j,k).gt.rhob_cutoff) then
              if (rho_b(i,j,k)/rho_b_max.gt.rhob_cutoff) then
                 xco=X(i,j,k)-CoMx_VolInt/CoM_VolInt_denominator
                 yco=Y(i,j,k)-CoMy_VolInt/CoM_VolInt_denominator
                 phiangle=0.d0
                 if (xco.ne.0.d0.or.yco.ne.0.d0) then
                    phiangle = atan2(yco,xco);
                 end if
                 VolIntegrand(i,j,k) = rho_star(i,j,k)*cos(3.d0*phiangle)
                 VolIntegrand2(i,j,k) = rho_star(i,j,k)*sin(3.d0*phiangle)
                 VolIntegrand3(i,j,k) = rho_star(i,j,k)*cos(4.d0*phiangle)
                 VolIntegrand4(i,j,k) = rho_star(i,j,k)*sin(4.d0*phiangle)
              end if
           end do ! i-loop
        end do ! j-loop
     end do ! k-loop
     !$omp end parallel do
     if (Symmetry == AXISYM) then
        print *, "Warning:Azimuthal density decomposition is not supported in axisymmetry!!!"
     end if
  end if
end subroutine meq34_integrand
