# Parameter definitions for thorn OS

shares: grid
USES KEYWORD type

shares: mhd_evolve
USES KEYWORD constrained_transport_scheme
USES KEYWORD rho_b_atm
USES KEYWORD pfloor
USES KEYWORD P_fact
USES KEYWORD neos
USES KEYWORD gamma_th
USES KEYWORD eps_flag
USES KEYWORD Sym_Bz
USES KEYWORD rho_fact

shares: diagnostics
USES KEYWORD out_surf_int_sum
USES KEYWORD F_M0
USES KEYWORD F_E_fluid
USES KEYWORD F_E_em
USES KEYWORD F_J_fluid
USES KEYWORD F_J_em
USES KEYWORD E_GW_LOSS
USES KEYWORD surf_radius

restricted:
 
# NOT USED (maybe in a future version):
KEYWORD bound "Type of boundary condition to use"
{
  "none"      :: "Apply no boundary condition"
  "flat"      :: "Flat (von Neumann, n grad phi = 0) boundary condition"
  "static"    :: "Static (Dirichlet, dphi/dt=0) boundary condition"
  "radiation" :: "Radiation boundary condition"
  "robin"     :: "Robin (phi(r) = C/r) boundary condition"
  "zero"      :: "Zero (Dirichlet, phi=0) boundary condition"
} "none"

# NOT USED (maybe in a future version):
KEYWORD initial_data "Type of initial data"
{
  "plane"      :: "Plane wave"
  "gaussian"   :: "Gaussian wave"
  "box"        :: "Box wave"
  "none"       :: "No initial data, zero phi"
} "gaussian"

shares: grid

USES KEYWORD domain
USES KEYWORD quadrant_direction
USES KEYWORD bitant_plane


private:

REAL corrector_iteration "num of iterations in corrector loop"
{
  *:* :: "No restriction"
} 1.0

## Parameters for initial wavepulses

REAL width "The width of the wave"
{
 0:* :: "Positive"
} 1.0

REAL amplitude "The amplitude of the waves"
{
  *:* :: "No restriction"
} 0.001

restricted:

REAL K_poly "initial polytropic constant"
{
 0:* :: "Positive"
} 1.0

#REAL rho_b_atm "Dont bother setting this parameter in your .par file: density atmosphere parameter (set to correct value inside code)"
#{
# 0:* :: "Positive"
#} 100.000


REAL P_deplete "Pressure depletion paramter (1.0 -> no pressure depletion)"
{
 0:* :: "Positive"
} 1.0

REAL betam1 "P_B / P_gas"
{
 0:* :: "Positive"
} 1e-4

REAL p_c ""
{
 *:* :: "Any Real"
} 0.0



REAL Omega_Frame "angular velocity of reference frame"
{
 *:* :: "Any Real"
} 0.0

INT em_field_type "poloidal (0) or toroidal (1) fields?"
{
 *:* :: "Any Integer"
} 0

INT binfile_restart "Restart from binfile?"
{
 0:1 :: "0 (no) or 1 (yes)"
} 0

STRING mag_interp_operator "Name of interpolation operator to use" STEERABLE = ALWAYS
{
  ".+" :: "A valid name for a registered interpolation operator"
} "uniform cartesian"


