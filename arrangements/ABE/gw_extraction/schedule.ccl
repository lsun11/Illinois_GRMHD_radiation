# Schedule definitions for thorn gw_extraction

STORAGE: BSSN::BSSN_vars[3],BSSN::BSSN_gupij,BSSN::BSSN_matter,BSSN::BSSN_AH,BSSN::BSSN_aux_restrict2,BSSN::phi_derivs,BSSN::BSSN_diag_restrict
STORAGE: gw_extraction::Psi4_gw[3]

schedule setup_gw_extraction at CCTK_BASEGRID as setup_gw_extract after one_surface after setup_global_coords after Setup_Fisheye_Coords
{
  STORAGE:       fisheye::fisheye_vars
  LANG:          FORTRAN
} "Set up variables for gw extraction routine (e.g., GW_radius_phys)"

schedule PsiKadelia_InitSym at CCTK_WRAGH
{
   LANG: Fortran
   OPTIONS: global
} "Set symmetries"

# From the Schnetter (discussion with Ian Hinder, Sep '06):
#If you want to calculate norms or interpolate or look at reasonable I/O
# of quantities, it is almost always necessary to calculate them in  
# the evol bin, and to allocate three time levels for them.  Only then  
# can you prolongate the mesh refinement boundaries, which requires  
# interpolation in time.

# Zach says: 
#  When you use PsiKadelia, you need to make sure that the refinement
#  levels crossed by a given extraction radius are ALL updated at the
#  timestep immediately preceeding Psi4 calculation.  I.e., if you 
#  are extracting waves on the N-1th & Nth refinement levels (where 
#  level N=0 is the finest level), you will need to extract waves 
#  every 2^N timesteps, N>=5 AND NO MORE FREQUENTLY THAN THAT.  
#
#  We need 3 timelevels for our gridfunctions, since we need to do 
#  interpolation on those gridfunctions over the extraction radius
#  sphere.  Carpet interpolation does not handle single timelevel
#  gridfunctions properly near refinement boundaries!  You can check
#  this by performing interpolation over a 1 timelevel gridfunction,
#  over a surface that crosses refinement boundaries, and then compare
#  the result to that where the finer refinement level is removed.  If
#  the gridfunction contains derivatives, the former result will not 
#  converge, but the latter one will.
#
if(cowling_enable==0 && num_extraction_radii>0) {
schedule PsiKadelia_postregrid in CCTK_POSTREGRID as PsiKad after bssn_postregrid
{
   LANG: FORTRAN
   OPTIONS: level,loop-local
   SYNC: gw_extraction::Psi4_gw[3]
} "PsiKadelia scalars and invariants"

schedule PsiKadelia_driver in CCTK_ANALYSIS as PsiKad after MoL_Evolution
{
   LANG: FORTRAN
   OPTIONS: level,loop-local
   SYNC: gw_extraction::Psi4_gw[3]
} "PsiKadelia scalars and invariants"

schedule psikad_diagnostics at CCTK_ANALYSIS after PsiKadcheck
{
   LANG: FORTRAN
   SYNC: gw_extraction::Psi4_gw[3]
   OPTIONS: global
} "Compute l,m modes of Psi4, output to file"
}