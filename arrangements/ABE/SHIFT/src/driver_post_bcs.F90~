!--------------------------------
! Post-bc routines for the shift
!--------------------------------

#include "cctk.h"
#include "cctk_Arguments.h"
#include "cctk_Functions.h"
#include "cctk_Parameters.h"

subroutine shift_postbc(CCTK_ARGUMENTS)
  
  implicit none
  
  DECLARE_CCTK_ARGUMENTS
  DECLARE_CCTK_PARAMETERS
  DECLARE_CCTK_FUNCTIONS

  integer                                       :: dummy
  integer, dimension(3)                         :: ext
  real*8                                        :: dX,dY,dZ, i,j,k
!
  dX=CCTK_DELTA_SPACE(1)
  dY=CCTK_DELTA_SPACE(2)
  dZ=CCTK_DELTA_SPACE(3)

!write(*,*) "Start shift_postbc!!!!!!"

  ext = cctk_lsh
  if(cctk_iteration.gt.0) then
     call fill_shift_symmetry_gz(ext,X,Y,Z,Symmetry,shiftx,shifty,shiftz,shiftxt,shiftyt,shiftzt)
  end if



  do k=1, cctk_lsh(3)
     do j=1, cctk_lsh(2)
          do i=1, cctk_lsh(1)
if (i==50.and.j==2.and.k==2) then
    write(*,*) " Inshift_post_bc checkpoint <<1>>  tau(i,j,k) is ", tau(i,j,k)
    write(*,*) " Inshift_post_bc checkpoint <<1>>  tau_rhs(i,j,k) is ", tau_rhs(i,j,k)
    write(*,*) " Inshift_post_bc checkpoint <<1>>  tau_rad(i,j,k) is ", tau_rad(i,j,k)
    write(*,*) " Inshift_post_bc checkpoint <<1>>  tau_rad_rhs(i,j,k) is ", tau_rad_rhs(i,j,k)
end if
        end do
    end do
  end do








end subroutine shift_postbc
