/*@@
   @header  MoL_arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn MoL
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_MOL_PRIVATE_FARGUMENTS \
INTEGER ErrorEstimate_length&&\
INTEGER SandRScratchSpace_length&&\
INTEGER ScratchSpace_length&&\
INTEGER X0ErrorEstimate&&\
INTEGER X0RKAlphaCoefficients&&\
INTEGER X0RKBetaCoefficients&&\
INTEGER X0SandRScratchSpace&&\
INTEGER X0ScratchSpace&&\
INTEGER X1ErrorEstimate&&\
INTEGER X1RKAlphaCoefficients&&\
INTEGER X1SandRScratchSpace&&\
INTEGER X1ScratchSpace&&\
INTEGER X2ErrorEstimate&&\
INTEGER X2SandRScratchSpace&&\
INTEGER X2ScratchSpace&&\
CCTK_REAL Count&&\
CCTK_REAL Error&&\
CCTK_REAL ErrorEstimate(X0ErrorEstimate,X1ErrorEstimate,X2ErrorEstimate,ErrorEstimate_length)&&\
CCTK_REAL EstimatedDt&&\
CCTK_INT MoL_Intermediate_Step&&\
CCTK_INT MoL_Stepsize_Bad&&\
CCTK_REAL Original_Delta_Time&&\
CCTK_REAL Original_Time&&\
CCTK_REAL RKAlphaCoefficients(X0RKAlphaCoefficients,X1RKAlphaCoefficients)&&\
CCTK_REAL RKBetaCoefficients(X0RKBetaCoefficients)&&\
CCTK_REAL SandRScratchSpace(X0SandRScratchSpace,X1SandRScratchSpace,X2SandRScratchSpace,SandRScratchSpace_length)&&\
CCTK_REAL ScratchSpace(X0ScratchSpace,X1ScratchSpace,X2ScratchSpace,ScratchSpace_length)&&\


#define MOL_PRIVATE_FARGUMENTS \
ErrorEstimate_length,SandRScratchSpace_length,ScratchSpace_length,X0ErrorEstimate,X0RKAlphaCoefficients,X0RKBetaCoefficients,X0SandRScratchSpace,X0ScratchSpace,X1ErrorEstimate,X1RKAlphaCoefficients,X1SandRScratchSpace,X1ScratchSpace,X2ErrorEstimate,X2SandRScratchSpace,X2ScratchSpace,Count,Error,ErrorEstimate,EstimatedDt,MoL_Intermediate_Step,MoL_Stepsize_Bad,Original_Delta_Time,Original_Time,RKAlphaCoefficients,RKBetaCoefficients,SandRScratchSpace,ScratchSpace

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_MOL_PRIVATE_CARGUMENTS \
CCTK_REAL * CCTK_RESTRICT Count = (cctki_dummy_int = &Count - &Count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "Count")); \
CCTK_REAL * CCTK_RESTRICT Error = (cctki_dummy_int = &Error - &Error, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "Error")); \
CCTK_REAL * CCTK_RESTRICT ErrorEstimate = (cctki_dummy_int = &ErrorEstimate - &ErrorEstimate, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "ErrorEstimate[0]")); \
CCTK_REAL * CCTK_RESTRICT EstimatedDt = (cctki_dummy_int = &EstimatedDt - &EstimatedDt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "EstimatedDt")); \
CCTK_INT * CCTK_RESTRICT MoL_Intermediate_Step = (cctki_dummy_int = &MoL_Intermediate_Step - &MoL_Intermediate_Step, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "MoL_Intermediate_Step")); \
CCTK_INT * CCTK_RESTRICT MoL_Stepsize_Bad = (cctki_dummy_int = &MoL_Stepsize_Bad - &MoL_Stepsize_Bad, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "MoL_Stepsize_Bad")); \
CCTK_REAL * CCTK_RESTRICT Original_Delta_Time = (cctki_dummy_int = &Original_Delta_Time - &Original_Delta_Time, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "Original_Delta_Time")); \
CCTK_REAL * CCTK_RESTRICT Original_Time = (cctki_dummy_int = &Original_Time - &Original_Time, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "Original_Time")); \
CCTK_REAL * CCTK_RESTRICT RKAlphaCoefficients = (cctki_dummy_int = &RKAlphaCoefficients - &RKAlphaCoefficients, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "RKAlphaCoefficients")); \
CCTK_REAL * CCTK_RESTRICT RKBetaCoefficients = (cctki_dummy_int = &RKBetaCoefficients - &RKBetaCoefficients, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "RKBetaCoefficients")); \
CCTK_REAL * CCTK_RESTRICT SandRScratchSpace = (cctki_dummy_int = &SandRScratchSpace - &SandRScratchSpace, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "SandRScratchSpace[0]")); \
CCTK_REAL * CCTK_RESTRICT ScratchSpace = (cctki_dummy_int = &ScratchSpace - &ScratchSpace, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOL", "ScratchSpace[0]"));

#define DECLARE_MOL_PRIVATE_C2F \
static int CCTKARGNUM_Count = -1; \
static int CCTKGROUPNUM_ErrorScalars = -1; \
static int CCTKARGNUM_Error = -1; \
static int CCTKARGNUM_ErrorEstimate = -1; \
static int CCTKGROUPNUM_ErrorEstimate = -1; \
static int CCTKARGNUM_EstimatedDt = -1; \
static int CCTKARGNUM_MoL_Intermediate_Step = -1; \
static int CCTKGROUPNUM_MoL_Counters = -1; \
static int CCTKARGNUM_MoL_Stepsize_Bad = -1; \
static int CCTKARGNUM_Original_Delta_Time = -1; \
static int CCTKGROUPNUM_MoL_Original_Time = -1; \
static int CCTKARGNUM_Original_Time = -1; \
static int CCTKARGNUM_RKAlphaCoefficients = -1; \
static int CCTKGROUPNUM_RKAlphaCoefficients = -1; \
static int CCTKARGNUM_RKBetaCoefficients = -1; \
static int CCTKGROUPNUM_RKBetaCoefficients = -1; \
static int CCTKARGNUM_SandRScratchSpace = -1; \
static int CCTKGROUPNUM_SandRScratchSpace = -1; \
static int CCTKARGNUM_ScratchSpace = -1; \
static int CCTKGROUPNUM_ScratchSpace = -1;

#define INITIALISE_MOL_PRIVATE_C2F \
if(CCTKARGNUM_Count == -1) CCTKARGNUM_Count = CCTK_VarIndex("MoL::Count"); \
if(CCTKGROUPNUM_ErrorScalars == -1) CCTKGROUPNUM_ErrorScalars = CCTK_GroupIndex("MoL::ErrorScalars"); \
if(CCTKARGNUM_Error == -1) CCTKARGNUM_Error = CCTK_VarIndex("MoL::Error"); \
if(CCTKARGNUM_ErrorEstimate == -1) CCTKARGNUM_ErrorEstimate = CCTK_VarIndex("MoL::ErrorEstimate[0]"); \
if(CCTKGROUPNUM_ErrorEstimate == -1) CCTKGROUPNUM_ErrorEstimate = CCTK_GroupIndex("MoL::ErrorEstimate"); \
if(CCTKARGNUM_EstimatedDt == -1) CCTKARGNUM_EstimatedDt = CCTK_VarIndex("MoL::EstimatedDt"); \
if(CCTKARGNUM_MoL_Intermediate_Step == -1) CCTKARGNUM_MoL_Intermediate_Step = CCTK_VarIndex("MoL::MoL_Intermediate_Step"); \
if(CCTKGROUPNUM_MoL_Counters == -1) CCTKGROUPNUM_MoL_Counters = CCTK_GroupIndex("MoL::MoL_Counters"); \
if(CCTKARGNUM_MoL_Stepsize_Bad == -1) CCTKARGNUM_MoL_Stepsize_Bad = CCTK_VarIndex("MoL::MoL_Stepsize_Bad"); \
if(CCTKARGNUM_Original_Delta_Time == -1) CCTKARGNUM_Original_Delta_Time = CCTK_VarIndex("MoL::Original_Delta_Time"); \
if(CCTKGROUPNUM_MoL_Original_Time == -1) CCTKGROUPNUM_MoL_Original_Time = CCTK_GroupIndex("MoL::MoL_Original_Time"); \
if(CCTKARGNUM_Original_Time == -1) CCTKARGNUM_Original_Time = CCTK_VarIndex("MoL::Original_Time"); \
if(CCTKARGNUM_RKAlphaCoefficients == -1) CCTKARGNUM_RKAlphaCoefficients = CCTK_VarIndex("MoL::RKAlphaCoefficients"); \
if(CCTKGROUPNUM_RKAlphaCoefficients == -1) CCTKGROUPNUM_RKAlphaCoefficients = CCTK_GroupIndex("MoL::RKAlphaCoefficients"); \
if(CCTKARGNUM_RKBetaCoefficients == -1) CCTKARGNUM_RKBetaCoefficients = CCTK_VarIndex("MoL::RKBetaCoefficients"); \
if(CCTKGROUPNUM_RKBetaCoefficients == -1) CCTKGROUPNUM_RKBetaCoefficients = CCTK_GroupIndex("MoL::RKBetaCoefficients"); \
if(CCTKARGNUM_SandRScratchSpace == -1) CCTKARGNUM_SandRScratchSpace = CCTK_VarIndex("MoL::SandRScratchSpace[0]"); \
if(CCTKGROUPNUM_SandRScratchSpace == -1) CCTKGROUPNUM_SandRScratchSpace = CCTK_GroupIndex("MoL::SandRScratchSpace"); \
if(CCTKARGNUM_ScratchSpace == -1) CCTKARGNUM_ScratchSpace = CCTK_VarIndex("MoL::ScratchSpace[0]"); \
if(CCTKGROUPNUM_ScratchSpace == -1) CCTKGROUPNUM_ScratchSpace = CCTK_GroupIndex("MoL::ScratchSpace");

#define MOL_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_MOL_PRIVATE_C2F(GH) \
PASS_GROUPLEN(MoL, ErrorEstimate),\
PASS_GROUPLEN(MoL, SandRScratchSpace),\
PASS_GROUPLEN(MoL, ScratchSpace),\
PASS_GROUPSIZE(ErrorEstimate, 0),\
PASS_GROUPSIZE(RKAlphaCoefficients, 0),\
PASS_GROUPSIZE(RKBetaCoefficients, 0),\
PASS_GROUPSIZE(SandRScratchSpace, 0),\
PASS_GROUPSIZE(ScratchSpace, 0),\
PASS_GROUPSIZE(ErrorEstimate, 1),\
PASS_GROUPSIZE(RKAlphaCoefficients, 1),\
PASS_GROUPSIZE(SandRScratchSpace, 1),\
PASS_GROUPSIZE(ScratchSpace, 1),\
PASS_GROUPSIZE(ErrorEstimate, 2),\
PASS_GROUPSIZE(SandRScratchSpace, 2),\
PASS_GROUPSIZE(ScratchSpace, 2),\
(CCTK_REAL *)(PASS_REFERENCE(Count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Error, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ErrorEstimate, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(EstimatedDt, 0)),\
(CCTK_INT *)(PASS_REFERENCE(MoL_Intermediate_Step, 0)),\
(CCTK_INT *)(PASS_REFERENCE(MoL_Stepsize_Bad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Original_Delta_Time, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Original_Time, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RKAlphaCoefficients, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RKBetaCoefficients, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SandRScratchSpace, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ScratchSpace, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_MOL_PROTECTED_FARGUMENTS \


#define MOL_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_MOL_PROTECTED_CARGUMENTS \


#define DECLARE_MOL_PROTECTED_C2F \


#define INITIALISE_MOL_PROTECTED_C2F \


#define MOL_PROTECTED_C2F_PROTO \


#define PASS_MOL_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_MOL_PUBLIC_FARGUMENTS \


#define MOL_PUBLIC_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_MOL_PUBLIC_CARGUMENTS \


#define DECLARE_MOL_PUBLIC_C2F \


#define INITIALISE_MOL_PUBLIC_C2F \


#define MOL_PUBLIC_C2F_PROTO \


#define PASS_MOL_PUBLIC_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define MOL_FARGUMENTS _CCTK_FARGUMENTS, MOL_PRIVATE_FARGUMENTS

#define DECLARE_MOL_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_MOL_PRIVATE_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_MOL_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_MOL_PRIVATE_CARGUMENTS

#define MOL_C2F_PROTO _CCTK_C2F_PROTO, MOL_PRIVATE_C2F_PROTO

#define PASS_MOL_C2F(GH) _PASS_CCTK_C2F(GH), PASS_MOL_PRIVATE_C2F(GH)

#define DECLARE_MOL_C2F _DECLARE_CCTK_C2F DECLARE_MOL_PRIVATE_C2F

#define INITIALISE_MOL_C2F _INITIALISE_CCTK_C2F INITIALISE_MOL_PRIVATE_C2F

#define MOL_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
