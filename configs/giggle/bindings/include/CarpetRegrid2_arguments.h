/*@@
   @header  CarpetRegrid2_arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn CarpetRegrid2
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_CARPETREGRID2_PRIVATE_FARGUMENTS \
INTEGER X0old_radii&&\
INTEGER old_active_length&&\
INTEGER old_num_levels_length&&\
INTEGER old_positions_length&&\
INTEGER old_radii_length&&\
CCTK_INT last_iteration&&\
CCTK_INT last_map&&\
CCTK_INT old_active(old_active_length)&&\
CCTK_INT old_num_levels(old_num_levels_length)&&\
CCTK_REAL old_position_x(old_positions_length)&&\
CCTK_REAL old_position_y(old_positions_length)&&\
CCTK_REAL old_position_z(old_positions_length)&&\
CCTK_REAL old_radius(X0old_radii,old_radii_length)&&\


#define CARPETREGRID2_PRIVATE_FARGUMENTS \
X0old_radii,old_active_length,old_num_levels_length,old_positions_length,old_radii_length,last_iteration,last_map,old_active,old_num_levels,old_position_x,old_position_y,old_position_z,old_radius

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CARPETREGRID2_PRIVATE_CARGUMENTS \
CCTK_INT * CCTK_RESTRICT last_iteration = (cctki_dummy_int = &last_iteration - &last_iteration, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "last_iteration")); \
CCTK_INT * CCTK_RESTRICT last_map = (cctki_dummy_int = &last_map - &last_map, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "last_map")); \
CCTK_INT * CCTK_RESTRICT old_active = (cctki_dummy_int = &old_active - &old_active, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "old_active[0]")); \
CCTK_INT * CCTK_RESTRICT old_num_levels = (cctki_dummy_int = &old_num_levels - &old_num_levels, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "old_num_levels[0]")); \
CCTK_REAL * CCTK_RESTRICT old_position_x = (cctki_dummy_int = &old_position_x - &old_position_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "old_position_x[0]")); \
CCTK_REAL * CCTK_RESTRICT old_position_y = (cctki_dummy_int = &old_position_y - &old_position_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "old_position_y[0]")); \
CCTK_REAL * CCTK_RESTRICT old_position_z = (cctki_dummy_int = &old_position_z - &old_position_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "old_position_z[0]")); \
CCTK_REAL * CCTK_RESTRICT old_radius = (cctki_dummy_int = &old_radius - &old_radius, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "old_radius[0]"));

#define DECLARE_CARPETREGRID2_PRIVATE_C2F \
static int CCTKARGNUM_last_iteration = -1; \
static int CCTKGROUPNUM_last_iteration = -1; \
static int CCTKARGNUM_last_map = -1; \
static int CCTKGROUPNUM_last_map = -1; \
static int CCTKARGNUM_old_active = -1; \
static int CCTKGROUPNUM_old_active = -1; \
static int CCTKARGNUM_old_num_levels = -1; \
static int CCTKGROUPNUM_old_num_levels = -1; \
static int CCTKARGNUM_old_position_x = -1; \
static int CCTKGROUPNUM_old_positions = -1; \
static int CCTKARGNUM_old_position_y = -1; \
static int CCTKARGNUM_old_position_z = -1; \
static int CCTKARGNUM_old_radius = -1; \
static int CCTKGROUPNUM_old_radii = -1;

#define INITIALISE_CARPETREGRID2_PRIVATE_C2F \
if(CCTKARGNUM_last_iteration == -1) CCTKARGNUM_last_iteration = CCTK_VarIndex("CarpetRegrid2::last_iteration"); \
if(CCTKGROUPNUM_last_iteration == -1) CCTKGROUPNUM_last_iteration = CCTK_GroupIndex("CarpetRegrid2::last_iteration"); \
if(CCTKARGNUM_last_map == -1) CCTKARGNUM_last_map = CCTK_VarIndex("CarpetRegrid2::last_map"); \
if(CCTKGROUPNUM_last_map == -1) CCTKGROUPNUM_last_map = CCTK_GroupIndex("CarpetRegrid2::last_map"); \
if(CCTKARGNUM_old_active == -1) CCTKARGNUM_old_active = CCTK_VarIndex("CarpetRegrid2::old_active[0]"); \
if(CCTKGROUPNUM_old_active == -1) CCTKGROUPNUM_old_active = CCTK_GroupIndex("CarpetRegrid2::old_active"); \
if(CCTKARGNUM_old_num_levels == -1) CCTKARGNUM_old_num_levels = CCTK_VarIndex("CarpetRegrid2::old_num_levels[0]"); \
if(CCTKGROUPNUM_old_num_levels == -1) CCTKGROUPNUM_old_num_levels = CCTK_GroupIndex("CarpetRegrid2::old_num_levels"); \
if(CCTKARGNUM_old_position_x == -1) CCTKARGNUM_old_position_x = CCTK_VarIndex("CarpetRegrid2::old_position_x[0]"); \
if(CCTKGROUPNUM_old_positions == -1) CCTKGROUPNUM_old_positions = CCTK_GroupIndex("CarpetRegrid2::old_positions"); \
if(CCTKARGNUM_old_position_y == -1) CCTKARGNUM_old_position_y = CCTK_VarIndex("CarpetRegrid2::old_position_y[0]"); \
if(CCTKARGNUM_old_position_z == -1) CCTKARGNUM_old_position_z = CCTK_VarIndex("CarpetRegrid2::old_position_z[0]"); \
if(CCTKARGNUM_old_radius == -1) CCTKARGNUM_old_radius = CCTK_VarIndex("CarpetRegrid2::old_radius[0]"); \
if(CCTKGROUPNUM_old_radii == -1) CCTKGROUPNUM_old_radii = CCTK_GroupIndex("CarpetRegrid2::old_radii");

#define CARPETREGRID2_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_CARPETREGRID2_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(old_radii, 0),\
PASS_GROUPLEN(CarpetRegrid2, old_active),\
PASS_GROUPLEN(CarpetRegrid2, old_num_levels),\
PASS_GROUPLEN(CarpetRegrid2, old_positions),\
PASS_GROUPLEN(CarpetRegrid2, old_radii),\
(CCTK_INT *)(PASS_REFERENCE(last_iteration, 0)),\
(CCTK_INT *)(PASS_REFERENCE(last_map, 0)),\
(CCTK_INT *)(PASS_REFERENCE(old_active, 0)),\
(CCTK_INT *)(PASS_REFERENCE(old_num_levels, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(old_position_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(old_position_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(old_position_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(old_radius, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_CARPETREGRID2_PROTECTED_FARGUMENTS \


#define CARPETREGRID2_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CARPETREGRID2_PROTECTED_CARGUMENTS \


#define DECLARE_CARPETREGRID2_PROTECTED_C2F \


#define INITIALISE_CARPETREGRID2_PROTECTED_C2F \


#define CARPETREGRID2_PROTECTED_C2F_PROTO \


#define PASS_CARPETREGRID2_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_CARPETREGRID2_PUBLIC_FARGUMENTS \
INTEGER X0radii&&\
INTEGER active_length&&\
INTEGER num_levels_length&&\
INTEGER positions_length&&\
INTEGER radii_length&&\
CCTK_INT active(active_length)&&\
CCTK_INT num_levels(num_levels_length)&&\
CCTK_REAL position_x(positions_length)&&\
CCTK_REAL position_y(positions_length)&&\
CCTK_REAL position_z(positions_length)&&\
CCTK_REAL radius(X0radii,radii_length)&&\


#define CARPETREGRID2_PUBLIC_FARGUMENTS \
X0radii,active_length,num_levels_length,positions_length,radii_length,active,num_levels,position_x,position_y,position_z,radius

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CARPETREGRID2_PUBLIC_CARGUMENTS \
CCTK_INT * CCTK_RESTRICT active = (cctki_dummy_int = &active - &active, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "active[0]")); \
CCTK_INT * CCTK_RESTRICT num_levels = (cctki_dummy_int = &num_levels - &num_levels, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "num_levels[0]")); \
CCTK_REAL * CCTK_RESTRICT position_x = (cctki_dummy_int = &position_x - &position_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "position_x[0]")); \
CCTK_REAL * CCTK_RESTRICT position_y = (cctki_dummy_int = &position_y - &position_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "position_y[0]")); \
CCTK_REAL * CCTK_RESTRICT position_z = (cctki_dummy_int = &position_z - &position_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "position_z[0]")); \
CCTK_REAL * CCTK_RESTRICT radius = (cctki_dummy_int = &radius - &radius, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPETREGRID2", "radius[0]"));

#define DECLARE_CARPETREGRID2_PUBLIC_C2F \
static int CCTKARGNUM_active = -1; \
static int CCTKGROUPNUM_active = -1; \
static int CCTKARGNUM_num_levels = -1; \
static int CCTKGROUPNUM_num_levels = -1; \
static int CCTKARGNUM_position_x = -1; \
static int CCTKGROUPNUM_positions = -1; \
static int CCTKARGNUM_position_y = -1; \
static int CCTKARGNUM_position_z = -1; \
static int CCTKARGNUM_radius = -1; \
static int CCTKGROUPNUM_radii = -1;

#define INITIALISE_CARPETREGRID2_PUBLIC_C2F \
if(CCTKARGNUM_active == -1) CCTKARGNUM_active = CCTK_VarIndex("CarpetRegrid2::active[0]"); \
if(CCTKGROUPNUM_active == -1) CCTKGROUPNUM_active = CCTK_GroupIndex("CarpetRegrid2::active"); \
if(CCTKARGNUM_num_levels == -1) CCTKARGNUM_num_levels = CCTK_VarIndex("CarpetRegrid2::num_levels[0]"); \
if(CCTKGROUPNUM_num_levels == -1) CCTKGROUPNUM_num_levels = CCTK_GroupIndex("CarpetRegrid2::num_levels"); \
if(CCTKARGNUM_position_x == -1) CCTKARGNUM_position_x = CCTK_VarIndex("CarpetRegrid2::position_x[0]"); \
if(CCTKGROUPNUM_positions == -1) CCTKGROUPNUM_positions = CCTK_GroupIndex("CarpetRegrid2::positions"); \
if(CCTKARGNUM_position_y == -1) CCTKARGNUM_position_y = CCTK_VarIndex("CarpetRegrid2::position_y[0]"); \
if(CCTKARGNUM_position_z == -1) CCTKARGNUM_position_z = CCTK_VarIndex("CarpetRegrid2::position_z[0]"); \
if(CCTKARGNUM_radius == -1) CCTKARGNUM_radius = CCTK_VarIndex("CarpetRegrid2::radius[0]"); \
if(CCTKGROUPNUM_radii == -1) CCTKGROUPNUM_radii = CCTK_GroupIndex("CarpetRegrid2::radii");

#define CARPETREGRID2_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_CARPETREGRID2_PUBLIC_C2F(GH) \
PASS_GROUPSIZE(radii, 0),\
PASS_GROUPLEN(CarpetRegrid2, active),\
PASS_GROUPLEN(CarpetRegrid2, num_levels),\
PASS_GROUPLEN(CarpetRegrid2, positions),\
PASS_GROUPLEN(CarpetRegrid2, radii),\
(CCTK_INT *)(PASS_REFERENCE(active, 0)),\
(CCTK_INT *)(PASS_REFERENCE(num_levels, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(position_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(position_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(position_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(radius, 0))

#endif /* CCODE */

#ifdef FCODE
#define CARPETREGRID2_FARGUMENTS _CCTK_FARGUMENTS, CARPETREGRID2_PRIVATE_FARGUMENTS, CARPETREGRID2_PUBLIC_FARGUMENTS

#define DECLARE_CARPETREGRID2_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_CARPETREGRID2_PRIVATE_FARGUMENTS DECLARE_CARPETREGRID2_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CARPETREGRID2_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_CARPETREGRID2_PRIVATE_CARGUMENTS DECLARE_CARPETREGRID2_PUBLIC_CARGUMENTS

#define CARPETREGRID2_C2F_PROTO _CCTK_C2F_PROTO, CARPETREGRID2_PRIVATE_C2F_PROTO, CARPETREGRID2_PUBLIC_C2F_PROTO

#define PASS_CARPETREGRID2_C2F(GH) _PASS_CCTK_C2F(GH), PASS_CARPETREGRID2_PRIVATE_C2F(GH), PASS_CARPETREGRID2_PUBLIC_C2F(GH)

#define DECLARE_CARPETREGRID2_C2F _DECLARE_CCTK_C2F DECLARE_CARPETREGRID2_PRIVATE_C2F DECLARE_CARPETREGRID2_PUBLIC_C2F

#define INITIALISE_CARPETREGRID2_C2F _INITIALISE_CCTK_C2F INITIALISE_CARPETREGRID2_PRIVATE_C2F INITIALISE_CARPETREGRID2_PUBLIC_C2F

#define CARPETREGRID2_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
