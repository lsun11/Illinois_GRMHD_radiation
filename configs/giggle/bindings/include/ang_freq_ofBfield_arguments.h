/*@@
   @header  ang_freq_ofBfield_arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn ang_freq_ofBfield
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_ANG_FREQ_OFBFIELD_PRIVATE_FARGUMENTS \


#define ANG_FREQ_OFBFIELD_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ANG_FREQ_OFBFIELD_PRIVATE_CARGUMENTS \


#define DECLARE_ANG_FREQ_OFBFIELD_PRIVATE_C2F \


#define INITIALISE_ANG_FREQ_OFBFIELD_PRIVATE_C2F \


#define ANG_FREQ_OFBFIELD_PRIVATE_C2F_PROTO \


#define PASS_ANG_FREQ_OFBFIELD_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_ANG_FREQ_OFBFIELD_PROTECTED_FARGUMENTS \
INTEGER X0BSSN_AH&&\
INTEGER X0BSSN_aux_private&&\
INTEGER X0BSSN_aux_restrict2&&\
INTEGER X0BSSN_diag_restrict&&\
INTEGER X0BSSN_gupij&&\
INTEGER X0BSSN_matter&&\
INTEGER X0BSSN_refbd&&\
INTEGER X0BSSN_rhs&&\
INTEGER X0BSSN_vars&&\
INTEGER X0NPphi2_em&&\
INTEGER X0OmegF&&\
INTEGER X0Psi4_gw&&\
INTEGER X0Stagger_Bs&&\
INTEGER X0ah_radius&&\
INTEGER X0bh_posns&&\
INTEGER X0diag_vacuum_gf&&\
INTEGER X0disk_atmosphere&&\
INTEGER X0em_Ax&&\
INTEGER X0em_Ay&&\
INTEGER X0em_Az&&\
INTEGER X0em_Blagrangemultiplier&&\
INTEGER X0em_Blagrangemultiplier_rhs&&\
INTEGER X0em_Phi&&\
INTEGER X0em_Phi_rhs&&\
INTEGER X0em_conservativex&&\
INTEGER X0em_conservativey&&\
INTEGER X0em_conservativez&&\
INTEGER X0em_rhsx&&\
INTEGER X0em_rhsy&&\
INTEGER X0em_rhsz&&\
INTEGER X0eos_params1&&\
INTEGER X0eos_params2&&\
INTEGER X0excision_int_gfs&&\
INTEGER X0field_line_variables&&\
INTEGER X0field_line_variables_rhs&&\
INTEGER X0fisheye_vars&&\
INTEGER X0gw_moment_arrays&&\
INTEGER X0have_global_bdry&&\
INTEGER X0lapse_derivatives&&\
INTEGER X0lapse_rhs&&\
INTEGER X0lapse_vars&&\
INTEGER X0lapse_vars_aux&&\
INTEGER X0metric_spher_pol_1&&\
INTEGER X0metric_spher_pol_2&&\
INTEGER X0metric_spher_pol_3&&\
INTEGER X0mhd_conservatives&&\
INTEGER X0mhd_nosync&&\
INTEGER X0mhd_primitives&&\
INTEGER X0mhd_rhs&&\
INTEGER X0mhd_sync_lr_B_quantities&&\
INTEGER X0mhd_sync_lr_hydro_quantities&&\
INTEGER X0mhd_sync_metric_facevals&&\
INTEGER X0mhd_sync_nablas&&\
INTEGER X0mhd_sync_nablas_diag&&\
INTEGER X0mhd_sync_rho_br_rho_bl&&\
INTEGER X0mhd_temps&&\
INTEGER X0mhd_vs&&\
INTEGER X0micphys_conservatives&&\
INTEGER X0micphys_conservatives_rhs&&\
INTEGER X0micphys_sync_lr_hydro_quantities&&\
INTEGER X0micphys_sync_nablas&&\
INTEGER X0microphys_primitives&&\
INTEGER X0phi_derivs&&\
INTEGER X0rad_conservatives&&\
INTEGER X0rad_conservatives_rhs&&\
INTEGER X0rad_pressure&&\
INTEGER X0rad_primitives&&\
INTEGER X0rad_sync_lr&&\
INTEGER X0rhovecs&&\
INTEGER X0shift_rhs&&\
INTEGER X0shift_vars&&\
INTEGER X0shift_vars_temp&&\
INTEGER X0surf_params&&\
INTEGER X1BSSN_AH&&\
INTEGER X1BSSN_aux_private&&\
INTEGER X1BSSN_aux_restrict2&&\
INTEGER X1BSSN_diag_restrict&&\
INTEGER X1BSSN_gupij&&\
INTEGER X1BSSN_matter&&\
INTEGER X1BSSN_refbd&&\
INTEGER X1BSSN_rhs&&\
INTEGER X1BSSN_vars&&\
INTEGER X1NPphi2_em&&\
INTEGER X1OmegF&&\
INTEGER X1Psi4_gw&&\
INTEGER X1Stagger_Bs&&\
INTEGER X1ah_radius&&\
INTEGER X1diag_vacuum_gf&&\
INTEGER X1disk_atmosphere&&\
INTEGER X1em_Ax&&\
INTEGER X1em_Ay&&\
INTEGER X1em_Az&&\
INTEGER X1em_Blagrangemultiplier&&\
INTEGER X1em_Blagrangemultiplier_rhs&&\
INTEGER X1em_Phi&&\
INTEGER X1em_Phi_rhs&&\
INTEGER X1em_conservativex&&\
INTEGER X1em_conservativey&&\
INTEGER X1em_conservativez&&\
INTEGER X1em_rhsx&&\
INTEGER X1em_rhsy&&\
INTEGER X1em_rhsz&&\
INTEGER X1excision_int_gfs&&\
INTEGER X1field_line_variables&&\
INTEGER X1field_line_variables_rhs&&\
INTEGER X1fisheye_vars&&\
INTEGER X1have_global_bdry&&\
INTEGER X1lapse_derivatives&&\
INTEGER X1lapse_rhs&&\
INTEGER X1lapse_vars&&\
INTEGER X1lapse_vars_aux&&\
INTEGER X1mhd_conservatives&&\
INTEGER X1mhd_nosync&&\
INTEGER X1mhd_primitives&&\
INTEGER X1mhd_rhs&&\
INTEGER X1mhd_sync_lr_B_quantities&&\
INTEGER X1mhd_sync_lr_hydro_quantities&&\
INTEGER X1mhd_sync_metric_facevals&&\
INTEGER X1mhd_sync_nablas&&\
INTEGER X1mhd_sync_nablas_diag&&\
INTEGER X1mhd_sync_rho_br_rho_bl&&\
INTEGER X1mhd_temps&&\
INTEGER X1mhd_vs&&\
INTEGER X1micphys_conservatives&&\
INTEGER X1micphys_conservatives_rhs&&\
INTEGER X1micphys_sync_lr_hydro_quantities&&\
INTEGER X1micphys_sync_nablas&&\
INTEGER X1microphys_primitives&&\
INTEGER X1phi_derivs&&\
INTEGER X1rad_conservatives&&\
INTEGER X1rad_conservatives_rhs&&\
INTEGER X1rad_pressure&&\
INTEGER X1rad_primitives&&\
INTEGER X1rad_sync_lr&&\
INTEGER X1shift_rhs&&\
INTEGER X1shift_vars&&\
INTEGER X1shift_vars_temp&&\
INTEGER X2BSSN_AH&&\
INTEGER X2BSSN_aux_private&&\
INTEGER X2BSSN_aux_restrict2&&\
INTEGER X2BSSN_diag_restrict&&\
INTEGER X2BSSN_gupij&&\
INTEGER X2BSSN_matter&&\
INTEGER X2BSSN_refbd&&\
INTEGER X2BSSN_rhs&&\
INTEGER X2BSSN_vars&&\
INTEGER X2NPphi2_em&&\
INTEGER X2OmegF&&\
INTEGER X2Psi4_gw&&\
INTEGER X2Stagger_Bs&&\
INTEGER X2ah_radius&&\
INTEGER X2diag_vacuum_gf&&\
INTEGER X2disk_atmosphere&&\
INTEGER X2em_Ax&&\
INTEGER X2em_Ay&&\
INTEGER X2em_Az&&\
INTEGER X2em_Blagrangemultiplier&&\
INTEGER X2em_Blagrangemultiplier_rhs&&\
INTEGER X2em_Phi&&\
INTEGER X2em_Phi_rhs&&\
INTEGER X2em_conservativex&&\
INTEGER X2em_conservativey&&\
INTEGER X2em_conservativez&&\
INTEGER X2em_rhsx&&\
INTEGER X2em_rhsy&&\
INTEGER X2em_rhsz&&\
INTEGER X2excision_int_gfs&&\
INTEGER X2field_line_variables&&\
INTEGER X2field_line_variables_rhs&&\
INTEGER X2fisheye_vars&&\
INTEGER X2lapse_derivatives&&\
INTEGER X2lapse_rhs&&\
INTEGER X2lapse_vars&&\
INTEGER X2lapse_vars_aux&&\
INTEGER X2mhd_conservatives&&\
INTEGER X2mhd_nosync&&\
INTEGER X2mhd_primitives&&\
INTEGER X2mhd_rhs&&\
INTEGER X2mhd_sync_lr_B_quantities&&\
INTEGER X2mhd_sync_lr_hydro_quantities&&\
INTEGER X2mhd_sync_metric_facevals&&\
INTEGER X2mhd_sync_nablas&&\
INTEGER X2mhd_sync_nablas_diag&&\
INTEGER X2mhd_sync_rho_br_rho_bl&&\
INTEGER X2mhd_temps&&\
INTEGER X2mhd_vs&&\
INTEGER X2micphys_conservatives&&\
INTEGER X2micphys_conservatives_rhs&&\
INTEGER X2micphys_sync_lr_hydro_quantities&&\
INTEGER X2micphys_sync_nablas&&\
INTEGER X2microphys_primitives&&\
INTEGER X2phi_derivs&&\
INTEGER X2rad_conservatives&&\
INTEGER X2rad_conservatives_rhs&&\
INTEGER X2rad_pressure&&\
INTEGER X2rad_primitives&&\
INTEGER X2rad_sync_lr&&\
INTEGER X2shift_rhs&&\
INTEGER X2shift_vars&&\
INTEGER X2shift_vars_temp&&\
INTEGER ah_centroid_length&&\
INTEGER ah_flags_length&&\
INTEGER ah_origin_length&&\
INTEGER ah_radius_length&&\
CCTK_REAL Aupxx(X0BSSN_aux_private,X1BSSN_aux_private,X2BSSN_aux_private)&&\
CCTK_REAL Aupxy(X0BSSN_aux_private,X1BSSN_aux_private,X2BSSN_aux_private)&&\
CCTK_REAL Aupxz(X0BSSN_aux_private,X1BSSN_aux_private,X2BSSN_aux_private)&&\
CCTK_REAL Aupyy(X0BSSN_aux_private,X1BSSN_aux_private,X2BSSN_aux_private)&&\
CCTK_REAL Aupyz(X0BSSN_aux_private,X1BSSN_aux_private,X2BSSN_aux_private)&&\
CCTK_REAL Aupzz(X0BSSN_aux_private,X1BSSN_aux_private,X2BSSN_aux_private)&&\
CCTK_REAL Ax(X0em_Ax,X1em_Ax,X2em_Ax)&&\
CCTK_REAL Ax_p(X0em_Ax,X1em_Ax,X2em_Ax)&&\
CCTK_REAL Ax_p_p(X0em_Ax,X1em_Ax,X2em_Ax)&&\
CCTK_REAL Axx(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axx_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axx_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axx_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Axy(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axy_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axy_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axy_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Axz(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axz_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axz_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Axz_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Ay(X0em_Ay,X1em_Ay,X2em_Ay)&&\
CCTK_REAL Ay_p(X0em_Ay,X1em_Ay,X2em_Ay)&&\
CCTK_REAL Ay_p_p(X0em_Ay,X1em_Ay,X2em_Ay)&&\
CCTK_REAL Ayy(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Ayy_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Ayy_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Ayy_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Ayz(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Ayz_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Ayz_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Ayz_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Az(X0em_Az,X1em_Az,X2em_Az)&&\
CCTK_REAL Az_p(X0em_Az,X1em_Az,X2em_Az)&&\
CCTK_REAL Az_p_p(X0em_Az,X1em_Az,X2em_Az)&&\
CCTK_REAL Azz(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Azz_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Azz_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Azz_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Bfreq1(X0OmegF,X1OmegF,X2OmegF)&&\
CCTK_REAL Bfreq1_p(X0OmegF,X1OmegF,X2OmegF)&&\
CCTK_REAL Bfreq1_p_p(X0OmegF,X1OmegF,X2OmegF)&&\
CCTK_REAL Bfreq2(X0OmegF,X1OmegF,X2OmegF)&&\
CCTK_REAL Bfreq2_p(X0OmegF,X1OmegF,X2OmegF)&&\
CCTK_REAL Bfreq2_p_p(X0OmegF,X1OmegF,X2OmegF)&&\
CCTK_REAL Blagrangemultiplier(X0em_Blagrangemultiplier,X1em_Blagrangemultiplier,X2em_Blagrangemultiplier)&&\
CCTK_REAL Blagrangemultiplier_p(X0em_Blagrangemultiplier,X1em_Blagrangemultiplier,X2em_Blagrangemultiplier)&&\
CCTK_REAL Blagrangemultiplier_p_p(X0em_Blagrangemultiplier,X1em_Blagrangemultiplier,X2em_Blagrangemultiplier)&&\
CCTK_REAL Blagrangemultiplier_rhs(X0em_Blagrangemultiplier_rhs,X1em_Blagrangemultiplier_rhs,X2em_Blagrangemultiplier_rhs)&&\
CCTK_REAL Box1X_VolInt&&\
CCTK_REAL Box1X_VolInt1&&\
CCTK_REAL Box1X_VolInt2&&\
CCTK_REAL Box1Y_VolInt&&\
CCTK_REAL Box1Y_VolInt1&&\
CCTK_REAL Box1Y_VolInt2&&\
CCTK_REAL Box1Z_VolInt&&\
CCTK_REAL Box1Z_VolInt1&&\
CCTK_REAL Box1Z_VolInt2&&\
CCTK_REAL Box1denom_VolInt&&\
CCTK_REAL Box1denom_VolInt1&&\
CCTK_REAL Box1denom_VolInt2&&\
CCTK_REAL Bx(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL Bx_stagger(X0Stagger_Bs,X1Stagger_Bs,X2Stagger_Bs)&&\
CCTK_REAL Bxl(X0mhd_sync_lr_B_quantities,X1mhd_sync_lr_B_quantities,X2mhd_sync_lr_B_quantities)&&\
CCTK_REAL Bxr(X0mhd_sync_lr_B_quantities,X1mhd_sync_lr_B_quantities,X2mhd_sync_lr_B_quantities)&&\
CCTK_REAL Bxtilde(X0em_conservativex,X1em_conservativex,X2em_conservativex)&&\
CCTK_REAL Bxtilde_p(X0em_conservativex,X1em_conservativex,X2em_conservativex)&&\
CCTK_REAL Bxtilde_p_p(X0em_conservativex,X1em_conservativex,X2em_conservativex)&&\
CCTK_REAL Bxtilde_or_Ax_rhs(X0em_rhsx,X1em_rhsx,X2em_rhsx)&&\
CCTK_REAL By(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL By_stagger(X0Stagger_Bs,X1Stagger_Bs,X2Stagger_Bs)&&\
CCTK_REAL Byl(X0mhd_sync_lr_B_quantities,X1mhd_sync_lr_B_quantities,X2mhd_sync_lr_B_quantities)&&\
CCTK_REAL Byr(X0mhd_sync_lr_B_quantities,X1mhd_sync_lr_B_quantities,X2mhd_sync_lr_B_quantities)&&\
CCTK_REAL Bytilde(X0em_conservativey,X1em_conservativey,X2em_conservativey)&&\
CCTK_REAL Bytilde_p(X0em_conservativey,X1em_conservativey,X2em_conservativey)&&\
CCTK_REAL Bytilde_p_p(X0em_conservativey,X1em_conservativey,X2em_conservativey)&&\
CCTK_REAL Bytilde_or_Ay_rhs(X0em_rhsy,X1em_rhsy,X2em_rhsy)&&\
CCTK_REAL Bz(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL Bz_stagger(X0Stagger_Bs,X1Stagger_Bs,X2Stagger_Bs)&&\
CCTK_REAL Bzl(X0mhd_sync_lr_B_quantities,X1mhd_sync_lr_B_quantities,X2mhd_sync_lr_B_quantities)&&\
CCTK_REAL Bzr(X0mhd_sync_lr_B_quantities,X1mhd_sync_lr_B_quantities,X2mhd_sync_lr_B_quantities)&&\
CCTK_REAL Bztilde(X0em_conservativez,X1em_conservativez,X2em_conservativez)&&\
CCTK_REAL Bztilde_p(X0em_conservativez,X1em_conservativez,X2em_conservativez)&&\
CCTK_REAL Bztilde_p_p(X0em_conservativez,X1em_conservativez,X2em_conservativez)&&\
CCTK_REAL Bztilde_or_Az_rhs(X0em_rhsz,X1em_rhsz,X2em_rhsz)&&\
CCTK_REAL CoM_VolInt_denominator&&\
CCTK_REAL CoMx_VolInt&&\
CCTK_REAL CoMy_VolInt&&\
CCTK_REAL CoMz_VolInt&&\
CCTK_REAL E_rad(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL E_rad_nue(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL E_rad_nuel(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL E_rad_nuer(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL E_rad_nux(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL E_rad_nuxl(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL E_rad_nuxr(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL E_radl(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL E_radr(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL Ex(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL Ey(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL Ez(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL F_rad0(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL F_rad0_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL F_rad0_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL F_rad_scalar(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL F_rad_scalar_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL F_rad_scalar_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL F_radx(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_radx_nue(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_radx_nuele(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radx_nuer(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radx_nux(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_radx_nuxle(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radx_nuxr(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radxle(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radxr(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_rady(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_rady_nue(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_rady_nuele(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_rady_nuer(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_rady_nux(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_rady_nuxle(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_rady_nuxr(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radyle(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radyr(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radz(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_radz_nue(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_radz_nuele(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radz_nuer(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radz_nux(X0rad_primitives,X1rad_primitives,X2rad_primitives)&&\
CCTK_REAL F_radz_nuxle(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radz_nuxr(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radzle(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL F_radzr(X0rad_sync_lr,X1rad_sync_lr,X2rad_sync_lr)&&\
CCTK_REAL FaFal(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL FaFal_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL FaFal_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL FaFar(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL FaFar_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL FaFar_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL Fontfix_tracker_gf(X0disk_atmosphere,X1disk_atmosphere,X2disk_atmosphere)&&\
CCTK_REAL Gammax(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammax_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammax_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammax_drive(X0shift_vars_temp,X1shift_vars_temp,X2shift_vars_temp)&&\
CCTK_REAL Gammax_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Gammaxxx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammaxxy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammaxxz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammaxyy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammaxyz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammaxzz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammay(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammay_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammay_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammay_drive(X0shift_vars_temp,X1shift_vars_temp,X2shift_vars_temp)&&\
CCTK_REAL Gammay_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Gammayxx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammayxy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammayxz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammayyy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammayyz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammayzz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammaz(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammaz_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammaz_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL Gammaz_drive(X0shift_vars_temp,X1shift_vars_temp,X2shift_vars_temp)&&\
CCTK_REAL Gammaz_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL Gammazxx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammazxy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammazxz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammazyy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammazyz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gammazzz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL Gamx_const_VolInt&&\
CCTK_REAL Gamy_const_VolInt&&\
CCTK_REAL Gamz_const_VolInt&&\
CCTK_REAL Ham_const_VolIntD&&\
CCTK_REAL Ham_const_VolIntN&&\
CCTK_REAL Ham_const_excised_VolIntD&&\
CCTK_REAL Ham_const_excised_VolIntN&&\
CCTK_REAL Ham_const_excised_innerregion_VolIntD&&\
CCTK_REAL Ham_const_excised_innerregion_VolIntN&&\
CCTK_REAL J_ADM_VolInt&&\
CCTK_REAL J_ADM_VolInt_inner&&\
CCTK_REAL J_ADM_VolInt_inner2&&\
CCTK_REAL Jz_constraint&&\
CCTK_REAL Jz_constraint_inner&&\
CCTK_REAL KK(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL K_pp_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL K_pp_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL K_pp_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL K_rp_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL K_rp_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL K_rp_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL K_rr_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL K_rr_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL K_rr_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL K_rth_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL K_rth_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL K_rth_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL K_thp_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL K_thp_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL K_thp_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL K_thth_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL K_thth_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL K_thth_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL M0_AH_VolInt&&\
CCTK_REAL M0_VolInt&&\
CCTK_REAL M0_escape100M&&\
CCTK_REAL M0_escape30M&&\
CCTK_REAL M0_escape50M&&\
CCTK_REAL M0_escape70M&&\
CCTK_REAL M0_horiz_VolInt&&\
CCTK_REAL M0_r1_VolInt&&\
CCTK_REAL M0_r2_VolInt&&\
CCTK_REAL M0_r3_VolInt&&\
CCTK_REAL MNorm(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL MONOPOLE(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL MRsx(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL MRsy(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL MRsz(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL M_ADM_VolInt&&\
CCTK_REAL M_constraint&&\
CCTK_REAL M_constraint_inner&&\
CCTK_REAL Minternal_VolInt&&\
CCTK_REAL Minternal_cold_VolInt&&\
CCTK_REAL NPphi0im(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi0im_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi0im_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi0re(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi0re_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi0re_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi2im(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi2im_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi2im_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi2re(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi2re_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL NPphi2re_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL OS_surf_rad&&\
CCTK_REAL P(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL P_cld(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL P_constraint&&\
CCTK_REAL P_constraint_inner&&\
CCTK_REAL P_floor(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL P_radxx(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radxx_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radxx_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radxy(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radxy_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radxy_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radxz(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radxz_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radxz_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radyy(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radyy_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radyy_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radyz(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radyz_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radyz_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radzz(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radzz_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_radzz_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL P_tab(X0eos_params1)&&\
CCTK_REAL P_thermal(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL PhysicalRadius(X0fisheye_vars,X1fisheye_vars,X2fisheye_vars)&&\
CCTK_REAL Pl(X0mhd_sync_lr_hydro_quantities,X1mhd_sync_lr_hydro_quantities,X2mhd_sync_lr_hydro_quantities)&&\
CCTK_REAL Pr(X0mhd_sync_lr_hydro_quantities,X1mhd_sync_lr_hydro_quantities,X2mhd_sync_lr_hydro_quantities)&&\
CCTK_REAL PsiNorm(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL PsiRes(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL PsiTau(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL Pvec(X0rhovecs)&&\
CCTK_REAL RadiusDerivative(X0fisheye_vars,X1fisheye_vars,X2fisheye_vars)&&\
CCTK_REAL RadiusDerivative2(X0fisheye_vars,X1fisheye_vars,X2fisheye_vars)&&\
CCTK_REAL Rxx(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL Rxy(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL Rxz(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL Ryy(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL Ryz(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL Rzz(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL S(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL SPx(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL SPx_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL SPx_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL SPy(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL SPy_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL SPy_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL SPz(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL SPz_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL SPz_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL S_rad_x(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_nue(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_nue_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_nue_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_nue_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL S_rad_x_nux(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_nux_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_nux_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_x_nux_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL S_rad_x_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL S_rad_y(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_nue(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_nue_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_nue_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_nue_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL S_rad_y_nux(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_nux_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_nux_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_y_nux_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL S_rad_y_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL S_rad_z(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_nue(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_nue_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_nue_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_nue_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL S_rad_z_nux(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_nux_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_nux_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL S_rad_z_nux_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL S_rad_z_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL Sx(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL Sxx(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL Sxy(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL Sxz(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL Sy(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL Syy(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL Syz(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL Sz(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL Szz(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL T_0x(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_0x_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_0x_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_0y(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_0y_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_0y_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_0z(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_0z_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_0z_p_p(X0NPphi2_em,X1NPphi2_em,X2NPphi2_em)&&\
CCTK_REAL T_VolInt&&\
CCTK_REAL T_fluid(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL T_fluidle(X0micphys_sync_lr_hydro_quantities,X1micphys_sync_lr_hydro_quantities,X2micphys_sync_lr_hydro_quantities)&&\
CCTK_REAL T_fluidr(X0micphys_sync_lr_hydro_quantities,X1micphys_sync_lr_hydro_quantities,X2micphys_sync_lr_hydro_quantities)&&\
CCTK_REAL Tem0_0_VolInt&&\
CCTK_REAL Tem0_0_outsideBH_VolInt&&\
CCTK_REAL Tfluid0_0_VolInt&&\
CCTK_REAL Tfluid0_0_outsideBH_VolInt&&\
CCTK_REAL VolIntegrand(X0diag_vacuum_gf,X1diag_vacuum_gf,X2diag_vacuum_gf)&&\
CCTK_REAL VolIntegrand2(X0diag_vacuum_gf,X1diag_vacuum_gf,X2diag_vacuum_gf)&&\
CCTK_REAL VolIntegrand3(X0diag_vacuum_gf,X1diag_vacuum_gf,X2diag_vacuum_gf)&&\
CCTK_REAL VolIntegrand4(X0diag_vacuum_gf,X1diag_vacuum_gf,X2diag_vacuum_gf)&&\
CCTK_REAL Y_e(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL Y_el(X0micphys_sync_lr_hydro_quantities,X1micphys_sync_lr_hydro_quantities,X2micphys_sync_lr_hydro_quantities)&&\
CCTK_REAL Y_er(X0micphys_sync_lr_hydro_quantities,X1micphys_sync_lr_hydro_quantities,X2micphys_sync_lr_hydro_quantities)&&\
CCTK_INT ah_centroid_iteration(ah_flags_length)&&\
CCTK_INT ah_centroid_iteration_p(ah_flags_length)&&\
CCTK_REAL ah_centroid_t(ah_centroid_length)&&\
CCTK_REAL ah_centroid_t_p(ah_centroid_length)&&\
CCTK_INT ah_centroid_valid(ah_flags_length)&&\
CCTK_INT ah_centroid_valid_p(ah_flags_length)&&\
CCTK_REAL ah_centroid_x(ah_centroid_length)&&\
CCTK_REAL ah_centroid_x_p(ah_centroid_length)&&\
CCTK_REAL ah_centroid_y(ah_centroid_length)&&\
CCTK_REAL ah_centroid_y_p(ah_centroid_length)&&\
CCTK_REAL ah_centroid_z(ah_centroid_length)&&\
CCTK_REAL ah_centroid_z_p(ah_centroid_length)&&\
CCTK_INT ah_found_flag(ah_flags_length)&&\
CCTK_INT ah_initial_find_flag(ah_flags_length)&&\
CCTK_REAL ah_origin_x(ah_origin_length)&&\
CCTK_REAL ah_origin_y(ah_origin_length)&&\
CCTK_REAL ah_origin_z(ah_origin_length)&&\
CCTK_REAL ah_radius(X0ah_radius,X1ah_radius,X2ah_radius,ah_radius_length)&&\
CCTK_INT ah_really_initial_find_flag(ah_flags_length)&&\
CCTK_INT ah_search_flag(ah_flags_length)&&\
CCTK_REAL b_phi_VolInt&&\
CCTK_REAL bh_posn_x(X0bh_posns)&&\
CCTK_REAL bh_posn_y(X0bh_posns)&&\
CCTK_REAL bh_posn_z(X0bh_posns)&&\
CCTK_REAL bh_radius_z(X0bh_posns)&&\
CCTK_REAL brem_qee_VolInt&&\
CCTK_REAL brem_qei_VolInt&&\
CCTK_REAL chi(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL chi_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL chi_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL chi_rad(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL chi_rad_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL chi_rad_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL chi_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL cmax(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL cmax_rad(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL cmax_rad_nue(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL cmax_rad_nux(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL cmin(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL cmin_rad(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL cmin_rad_nue(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL cmin_rad_nux(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL dBx_m(X0mhd_sync_nablas,X1mhd_sync_nablas,X2mhd_sync_nablas)&&\
CCTK_REAL dBy_m(X0mhd_sync_nablas,X1mhd_sync_nablas,X2mhd_sync_nablas)&&\
CCTK_REAL dBz_m(X0mhd_sync_nablas,X1mhd_sync_nablas,X2mhd_sync_nablas)&&\
CCTK_REAL dP_m(X0mhd_sync_nablas,X1mhd_sync_nablas,X2mhd_sync_nablas)&&\
CCTK_REAL dT_fluid_m(X0micphys_sync_nablas,X1micphys_sync_nablas,X2micphys_sync_nablas)&&\
CCTK_REAL ddrbrvec(X0surf_params)&&\
CCTK_REAL density_modes_i1&&\
CCTK_REAL density_modes_i2&&\
CCTK_REAL density_modes_i3&&\
CCTK_REAL density_modes_i4&&\
CCTK_REAL density_modes_i5&&\
CCTK_REAL density_modes_i6&&\
CCTK_REAL density_modes_r0&&\
CCTK_REAL density_modes_r1&&\
CCTK_REAL density_modes_r2&&\
CCTK_REAL density_modes_r3&&\
CCTK_REAL density_modes_r4&&\
CCTK_REAL density_modes_r5&&\
CCTK_REAL density_modes_r6&&\
CCTK_REAL div_beta(X0BSSN_aux_private,X1BSSN_aux_private,X2BSSN_aux_private)&&\
CCTK_REAL drbrvec(X0surf_params)&&\
CCTK_REAL drhoYe_m(X0micphys_sync_nablas,X1micphys_sync_nablas,X2micphys_sync_nablas)&&\
CCTK_REAL drhoYe_m_x(X0mhd_sync_nablas_diag,X1mhd_sync_nablas_diag,X2mhd_sync_nablas_diag)&&\
CCTK_REAL drhoYe_m_xp1(X0mhd_sync_nablas_diag,X1mhd_sync_nablas_diag,X2mhd_sync_nablas_diag)&&\
CCTK_REAL drho_b_m(X0mhd_sync_nablas,X1mhd_sync_nablas,X2mhd_sync_nablas)&&\
CCTK_REAL drho_b_m_x(X0mhd_sync_nablas_diag,X1mhd_sync_nablas_diag,X2mhd_sync_nablas_diag)&&\
CCTK_REAL drho_b_m_xp1(X0mhd_sync_nablas_diag,X1mhd_sync_nablas_diag,X2mhd_sync_nablas_diag)&&\
CCTK_REAL dvx_m(X0mhd_sync_nablas,X1mhd_sync_nablas,X2mhd_sync_nablas)&&\
CCTK_REAL dvx_m_x(X0mhd_sync_nablas_diag,X1mhd_sync_nablas_diag,X2mhd_sync_nablas_diag)&&\
CCTK_REAL dvx_m_xp1(X0mhd_sync_nablas_diag,X1mhd_sync_nablas_diag,X2mhd_sync_nablas_diag)&&\
CCTK_REAL dvy_m(X0mhd_sync_nablas,X1mhd_sync_nablas,X2mhd_sync_nablas)&&\
CCTK_REAL dvz_m(X0mhd_sync_nablas,X1mhd_sync_nablas,X2mhd_sync_nablas)&&\
CCTK_REAL em_J_between_VolInt&&\
CCTK_REAL em_energy2_VolInt&&\
CCTK_REAL em_energy_VolInt&&\
CCTK_REAL em_energy_between_VolInt&&\
CCTK_REAL em_energy_outsideBH_VolInt&&\
CCTK_REAL em_energy_outsideradius1_VolInt&&\
CCTK_REAL em_energy_outsideradius2_VolInt&&\
CCTK_REAL emission_gf(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL emission_gf_nue(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL emission_gf_nux(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL eps_cld(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL eps_tab(X0eos_params1)&&\
CCTK_REAL eps_thermal(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL eps_tot(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL eta_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_INT excision_zone_gf(X0excision_int_gfs,X1excision_int_gfs,X2excision_int_gfs)&&\
CCTK_REAL fluid_J_horiz_VolInt&&\
CCTK_REAL fluid_J_r1_VolInt&&\
CCTK_REAL fluid_J_r2_VolInt&&\
CCTK_REAL fluid_J_r3_VolInt&&\
CCTK_REAL fluid_energy_horiz_VolInt&&\
CCTK_REAL fluid_energy_r1_VolInt&&\
CCTK_REAL fluid_energy_r2_VolInt&&\
CCTK_REAL fluid_energy_r3_VolInt&&\
CCTK_REAL gamma_tab(X0eos_params2)&&\
CCTK_REAL gconx(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL gcony(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL gconz(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL gupxx(X0BSSN_gupij,X1BSSN_gupij,X2BSSN_gupij)&&\
CCTK_REAL gupxx_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gupxy(X0BSSN_gupij,X1BSSN_gupij,X2BSSN_gupij)&&\
CCTK_REAL gupxy_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gupxz(X0BSSN_gupij,X1BSSN_gupij,X2BSSN_gupij)&&\
CCTK_REAL gupxz_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gupyy(X0BSSN_gupij,X1BSSN_gupij,X2BSSN_gupij)&&\
CCTK_REAL gupyy_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gupyz(X0BSSN_gupij,X1BSSN_gupij,X2BSSN_gupij)&&\
CCTK_REAL gupyz_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gupzz(X0BSSN_gupij,X1BSSN_gupij,X2BSSN_gupij)&&\
CCTK_REAL gupzz_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gxx(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxx_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxx_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxx_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gxx_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL gxxx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gxxy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gxxz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gxy(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxy_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxy_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxy_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gxy_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL gxyx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gxyy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gxyz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gxz(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxz_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxz_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gxz_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gxz_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL gxzx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gxzy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gxzz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gyy(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gyy_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gyy_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gyy_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gyy_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL gyyx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gyyy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gyyz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gyz(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gyz_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gyz_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gyz_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gyz_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL gyzx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gyzy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gyzz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gzz(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gzz_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gzz_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL gzz_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL gzz_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL gzzx(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gzzy(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL gzzz(X0BSSN_aux_restrict2,X1BSSN_aux_restrict2,X2BSSN_aux_restrict2)&&\
CCTK_REAL h(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL h_p(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL half_b2_u0_VolInt&&\
CCTK_REAL half_b2_u0_outsideBH_VolInt&&\
CCTK_INT have_global_bdry_max(X0have_global_bdry,X1have_global_bdry)&&\
CCTK_INT have_global_bdry_min(X0have_global_bdry,X1have_global_bdry)&&\
CCTK_REAL int_momentsi(X0gw_moment_arrays)&&\
CCTK_REAL int_momentsr(X0gw_moment_arrays)&&\
CCTK_REAL k_tab(X0eos_params2)&&\
CCTK_REAL ka_gf(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL ka_gf_nue(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL ka_gf_nux(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL ks_gf(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL ks_gf_nue(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL ks_gf_nux(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL kxx(X0BSSN_AH,X1BSSN_AH,X2BSSN_AH)&&\
CCTK_REAL kxy(X0BSSN_AH,X1BSSN_AH,X2BSSN_AH)&&\
CCTK_REAL kxz(X0BSSN_AH,X1BSSN_AH,X2BSSN_AH)&&\
CCTK_REAL kyy(X0BSSN_AH,X1BSSN_AH,X2BSSN_AH)&&\
CCTK_REAL kyz(X0BSSN_AH,X1BSSN_AH,X2BSSN_AH)&&\
CCTK_REAL kzz(X0BSSN_AH,X1BSSN_AH,X2BSSN_AH)&&\
CCTK_REAL lapm1(X0lapse_vars,X1lapse_vars,X2lapse_vars)&&\
CCTK_REAL lapm1_p(X0lapse_vars,X1lapse_vars,X2lapse_vars)&&\
CCTK_REAL lapm1_p_p(X0lapse_vars,X1lapse_vars,X2lapse_vars)&&\
CCTK_REAL lapm1_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL lapm1_rhs(X0lapse_rhs,X1lapse_rhs,X2lapse_rhs)&&\
CCTK_REAL lapm1_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL lapm1_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL lapm1_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL lapset(X0lapse_vars,X1lapse_vars,X2lapse_vars)&&\
CCTK_REAL lapset_p(X0lapse_vars,X1lapse_vars,X2lapse_vars)&&\
CCTK_REAL lapset_p_p(X0lapse_vars,X1lapse_vars,X2lapse_vars)&&\
CCTK_REAL lapset_rhs(X0lapse_rhs,X1lapse_rhs,X2lapse_rhs)&&\
CCTK_REAL lapset_timederiv(X0lapse_vars_aux,X1lapse_vars_aux,X2lapse_vars_aux)&&\
CCTK_REAL lapsex(X0lapse_derivatives,X1lapse_derivatives,X2lapse_derivatives)&&\
CCTK_REAL lapsey(X0lapse_derivatives,X1lapse_derivatives,X2lapse_derivatives)&&\
CCTK_REAL lapsez(X0lapse_derivatives,X1lapse_derivatives,X2lapse_derivatives)&&\
CCTK_REAL mass_star1&&\
CCTK_REAL mass_star2&&\
CCTK_REAL mhd_chi_line(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_chi_line_p(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_chi_line_p_p(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_chi_line_rhs(X0field_line_variables_rhs,X1field_line_variables_rhs,X2field_line_variables_rhs)&&\
CCTK_REAL mhd_psi_line(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_psi_line_p(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_psi_line_p_p(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_psi_line_rhs(X0field_line_variables_rhs,X1field_line_variables_rhs,X2field_line_variables_rhs)&&\
CCTK_REAL mhd_st_x(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_x_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_x_p_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_x_rhs(X0mhd_rhs,X1mhd_rhs,X2mhd_rhs)&&\
CCTK_REAL mhd_st_y(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_y_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_y_p_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_y_rhs(X0mhd_rhs,X1mhd_rhs,X2mhd_rhs)&&\
CCTK_REAL mhd_st_z(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_z_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_z_p_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL mhd_st_z_rhs(X0mhd_rhs,X1mhd_rhs,X2mhd_rhs)&&\
CCTK_REAL mhd_u_chi(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_u_chi_p(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_u_chi_p_p(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_u_chi_rhs(X0field_line_variables_rhs,X1field_line_variables_rhs,X2field_line_variables_rhs)&&\
CCTK_REAL mhd_u_psi(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_u_psi_p(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_u_psi_p_p(X0field_line_variables,X1field_line_variables,X2field_line_variables)&&\
CCTK_REAL mhd_u_psi_rhs(X0field_line_variables_rhs,X1field_line_variables_rhs,X2field_line_variables_rhs)&&\
CCTK_REAL minternal_cold_horiz_VolInt&&\
CCTK_REAL minternal_cold_r1_VolInt&&\
CCTK_REAL minternal_cold_r2_VolInt&&\
CCTK_REAL minternal_cold_r3_VolInt&&\
CCTK_REAL minternal_horiz_VolInt&&\
CCTK_REAL minternal_r1_VolInt&&\
CCTK_REAL minternal_r2_VolInt&&\
CCTK_REAL minternal_r3_VolInt&&\
CCTK_REAL mom_const_VolIntD&&\
CCTK_REAL mom_const_excised_VolIntD&&\
CCTK_REAL momentsi(X0gw_moment_arrays)&&\
CCTK_REAL momentsi_old(X0gw_moment_arrays)&&\
CCTK_REAL momentsr(X0gw_moment_arrays)&&\
CCTK_REAL momentsr_old(X0gw_moment_arrays)&&\
CCTK_REAL momx_const_VolIntN&&\
CCTK_REAL momx_const_excised_VolIntN&&\
CCTK_REAL momy_const_VolIntN&&\
CCTK_REAL momy_const_excised_VolIntN&&\
CCTK_REAL momz_const_VolIntN&&\
CCTK_REAL momz_const_excised_VolIntN&&\
CCTK_REAL monopole_VolInt&&\
CCTK_REAL monopole_outsideBH_VolInt&&\
CCTK_REAL mu_nu(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL n_poly&&\
CCTK_REAL odd_momentsi(X0gw_moment_arrays)&&\
CCTK_REAL odd_momentsi_old(X0gw_moment_arrays)&&\
CCTK_REAL odd_momentsr(X0gw_moment_arrays)&&\
CCTK_REAL odd_momentsr_old(X0gw_moment_arrays)&&\
CCTK_REAL optd(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL optd_x(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL optd_y(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL optd_z(X0microphys_primitives,X1microphys_primitives,X2microphys_primitives)&&\
CCTK_REAL pfloor_gf(X0disk_atmosphere,X1disk_atmosphere,X2disk_atmosphere)&&\
CCTK_REAL phi(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL phi_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL phi_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL phi_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL phi_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL phi_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL phi_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL phi_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL phix(X0phi_derivs,X1phi_derivs,X2phi_derivs)&&\
CCTK_REAL phiy(X0phi_derivs,X1phi_derivs,X2phi_derivs)&&\
CCTK_REAL phiz(X0phi_derivs,X1phi_derivs,X2phi_derivs)&&\
CCTK_REAL psi(X0BSSN_AH,X1BSSN_AH,X2BSSN_AH)&&\
CCTK_REAL psi0im(X0Psi4_gw,X1Psi4_gw,X2Psi4_gw)&&\
CCTK_REAL psi0im_p(X0Psi4_gw,X1Psi4_gw,X2Psi4_gw)&&\
CCTK_REAL psi0im_p_p(X0Psi4_gw,X1Psi4_gw,X2Psi4_gw)&&\
CCTK_REAL psi0re(X0Psi4_gw,X1Psi4_gw,X2Psi4_gw)&&\
CCTK_REAL psi0re_p(X0Psi4_gw,X1Psi4_gw,X2Psi4_gw)&&\
CCTK_REAL psi0re_p_p(X0Psi4_gw,X1Psi4_gw,X2Psi4_gw)&&\
CCTK_REAL psi6phi(X0em_Phi,X1em_Phi,X2em_Phi)&&\
CCTK_REAL psi6phi_p(X0em_Phi,X1em_Phi,X2em_Phi)&&\
CCTK_REAL psi6phi_p_p(X0em_Phi,X1em_Phi,X2em_Phi)&&\
CCTK_REAL psi6phi_rhs(X0em_Phi_rhs,X1em_Phi_rhs,X2em_Phi_rhs)&&\
CCTK_REAL rad_const&&\
CCTK_REAL rad_energy_VolInt&&\
CCTK_REAL rad_energy_nue_VolInt&&\
CCTK_REAL rad_energy_nux_VolInt&&\
CCTK_REAL rbrvec(X0surf_params)&&\
CCTK_REAL refbd(X0BSSN_refbd,X1BSSN_refbd,X2BSSN_refbd)&&\
CCTK_REAL refbd_p(X0BSSN_refbd,X1BSSN_refbd,X2BSSN_refbd)&&\
CCTK_REAL refbd_p_p(X0BSSN_refbd,X1BSSN_refbd,X2BSSN_refbd)&&\
CCTK_REAL rho(X0BSSN_matter,X1BSSN_matter,X2BSSN_matter)&&\
CCTK_REAL rhoYe(X0micphys_conservatives,X1micphys_conservatives,X2micphys_conservatives)&&\
CCTK_REAL rhoYe_p(X0micphys_conservatives,X1micphys_conservatives,X2micphys_conservatives)&&\
CCTK_REAL rhoYe_p_p(X0micphys_conservatives,X1micphys_conservatives,X2micphys_conservatives)&&\
CCTK_REAL rhoYe_rhs(X0micphys_conservatives_rhs,X1micphys_conservatives_rhs,X2micphys_conservatives_rhs)&&\
CCTK_REAL rho_b(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL rho_b_atm_gf(X0disk_atmosphere,X1disk_atmosphere,X2disk_atmosphere)&&\
CCTK_REAL rho_bl(X0mhd_sync_rho_br_rho_bl,X1mhd_sync_rho_br_rho_bl,X2mhd_sync_rho_br_rho_bl)&&\
CCTK_REAL rho_br(X0mhd_sync_rho_br_rho_bl,X1mhd_sync_rho_br_rho_bl,X2mhd_sync_rho_br_rho_bl)&&\
CCTK_REAL rho_star(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL rho_star_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL rho_star_p_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL rho_star_rhs(X0mhd_rhs,X1mhd_rhs,X2mhd_rhs)&&\
CCTK_REAL rho_tab(X0eos_params1)&&\
CCTK_REAL rhob_floor(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL rhovec(X0rhovecs)&&\
CCTK_REAL sbt(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL sbx(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL sby(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL sbz(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL shiftp_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL shiftp_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL shiftp_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL shiftr_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL shiftr_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL shiftr_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL shiftth_rot1(X0metric_spher_pol_1)&&\
CCTK_REAL shiftth_rot2(X0metric_spher_pol_2)&&\
CCTK_REAL shiftth_rot3(X0metric_spher_pol_3)&&\
CCTK_REAL shiftx(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftx_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftx_p_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftx_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL shiftx_rhs(X0shift_rhs,X1shift_rhs,X2shift_rhs)&&\
CCTK_REAL shiftxt(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftxt_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftxt_p_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftxt_rhs(X0shift_rhs,X1shift_rhs,X2shift_rhs)&&\
CCTK_REAL shiftxt_timederiv(X0shift_vars_temp,X1shift_vars_temp,X2shift_vars_temp)&&\
CCTK_REAL shifty(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shifty_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shifty_p_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shifty_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL shifty_rhs(X0shift_rhs,X1shift_rhs,X2shift_rhs)&&\
CCTK_REAL shiftyt(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftyt_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftyt_p_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftyt_rhs(X0shift_rhs,X1shift_rhs,X2shift_rhs)&&\
CCTK_REAL shiftyt_timederiv(X0shift_vars_temp,X1shift_vars_temp,X2shift_vars_temp)&&\
CCTK_REAL shiftz(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftz_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftz_p_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftz_f(X0mhd_sync_metric_facevals,X1mhd_sync_metric_facevals,X2mhd_sync_metric_facevals)&&\
CCTK_REAL shiftz_rhs(X0shift_rhs,X1shift_rhs,X2shift_rhs)&&\
CCTK_REAL shiftzt(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftzt_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftzt_p_p(X0shift_vars,X1shift_vars,X2shift_vars)&&\
CCTK_REAL shiftzt_rhs(X0shift_rhs,X1shift_rhs,X2shift_rhs)&&\
CCTK_REAL shiftzt_timederiv(X0shift_vars_temp,X1shift_vars_temp,X2shift_vars_temp)&&\
CCTK_REAL smallb2(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL st_x(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL st_y(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL st_z(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL surfvec(X0surf_params)&&\
CCTK_REAL synch_VolInt&&\
CCTK_REAL tau(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL tau_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL tau_p_p(X0mhd_conservatives,X1mhd_conservatives,X2mhd_conservatives)&&\
CCTK_REAL tau_rad(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_nue(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_nue_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_nue_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_nue_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL tau_rad_nux(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_nux_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_nux_p_p(X0rad_conservatives,X1rad_conservatives,X2rad_conservatives)&&\
CCTK_REAL tau_rad_nux_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL tau_rad_rhs(X0rad_conservatives_rhs,X1rad_conservatives_rhs,X2rad_conservatives_rhs)&&\
CCTK_REAL tau_rhs(X0mhd_rhs,X1mhd_rhs,X2mhd_rhs)&&\
CCTK_REAL temp1(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp10(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp11(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp12(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp13(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp14(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp15(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp16(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp17(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp18(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp19(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp2(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp20(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp21(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp22(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp23(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp24(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp25(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp26(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp3(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp4(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp5(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp6(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp7(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp8(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp9(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL temp_g00(X0mhd_temps,X1mhd_temps,X2mhd_temps)&&\
CCTK_REAL trK(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL trK_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL trK_p_p(X0BSSN_vars,X1BSSN_vars,X2BSSN_vars)&&\
CCTK_REAL trK_rhs(X0BSSN_rhs,X1BSSN_rhs,X2BSSN_rhs)&&\
CCTK_REAL trR(X0BSSN_aux_private,X1BSSN_aux_private,X2BSSN_aux_private)&&\
CCTK_REAL trRtilde(X0BSSN_diag_restrict,X1BSSN_diag_restrict,X2BSSN_diag_restrict)&&\
CCTK_REAL u0(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL v02_rad_nuel(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL v02_rad_nuer(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL v02_rad_nuxl(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL v02_rad_nuxr(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL v02_radl(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL v02_radr(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL v02l(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL v02r(X0mhd_nosync,X1mhd_nosync,X2mhd_nosync)&&\
CCTK_REAL vvec(X0rhovecs)&&\
CCTK_REAL vx(X0mhd_vs,X1mhd_vs,X2mhd_vs)&&\
CCTK_REAL vxl(X0mhd_sync_lr_hydro_quantities,X1mhd_sync_lr_hydro_quantities,X2mhd_sync_lr_hydro_quantities)&&\
CCTK_REAL vxr(X0mhd_sync_lr_hydro_quantities,X1mhd_sync_lr_hydro_quantities,X2mhd_sync_lr_hydro_quantities)&&\
CCTK_REAL vy(X0mhd_vs,X1mhd_vs,X2mhd_vs)&&\
CCTK_REAL vyl(X0mhd_sync_lr_hydro_quantities,X1mhd_sync_lr_hydro_quantities,X2mhd_sync_lr_hydro_quantities)&&\
CCTK_REAL vyr(X0mhd_sync_lr_hydro_quantities,X1mhd_sync_lr_hydro_quantities,X2mhd_sync_lr_hydro_quantities)&&\
CCTK_REAL vz(X0mhd_vs,X1mhd_vs,X2mhd_vs)&&\
CCTK_REAL vzl(X0mhd_sync_lr_hydro_quantities,X1mhd_sync_lr_hydro_quantities,X2mhd_sync_lr_hydro_quantities)&&\
CCTK_REAL vzr(X0mhd_sync_lr_hydro_quantities,X1mhd_sync_lr_hydro_quantities,X2mhd_sync_lr_hydro_quantities)&&\
CCTK_REAL w(X0mhd_primitives,X1mhd_primitives,X2mhd_primitives)&&\
CCTK_REAL zeta_rad(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL zeta_rad_nue(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\
CCTK_REAL zeta_rad_nux(X0rad_pressure,X1rad_pressure,X2rad_pressure)&&\


#define ANG_FREQ_OFBFIELD_PROTECTED_FARGUMENTS \
X0BSSN_AH,X0BSSN_aux_private,X0BSSN_aux_restrict2,X0BSSN_diag_restrict,X0BSSN_gupij,X0BSSN_matter,X0BSSN_refbd,X0BSSN_rhs,X0BSSN_vars,X0NPphi2_em,X0OmegF,X0Psi4_gw,X0Stagger_Bs,X0ah_radius,X0bh_posns,X0diag_vacuum_gf,X0disk_atmosphere,X0em_Ax,X0em_Ay,X0em_Az,X0em_Blagrangemultiplier,X0em_Blagrangemultiplier_rhs,X0em_Phi,X0em_Phi_rhs,X0em_conservativex,X0em_conservativey,X0em_conservativez,X0em_rhsx,X0em_rhsy,X0em_rhsz,X0eos_params1,X0eos_params2,X0excision_int_gfs,X0field_line_variables,X0field_line_variables_rhs,X0fisheye_vars,X0gw_moment_arrays,X0have_global_bdry,X0lapse_derivatives,X0lapse_rhs,X0lapse_vars,X0lapse_vars_aux,X0metric_spher_pol_1,X0metric_spher_pol_2,X0metric_spher_pol_3,X0mhd_conservatives,X0mhd_nosync,X0mhd_primitives,X0mhd_rhs,X0mhd_sync_lr_B_quantities,X0mhd_sync_lr_hydro_quantities,X0mhd_sync_metric_facevals,X0mhd_sync_nablas,X0mhd_sync_nablas_diag,X0mhd_sync_rho_br_rho_bl,X0mhd_temps,X0mhd_vs,X0micphys_conservatives,X0micphys_conservatives_rhs,X0micphys_sync_lr_hydro_quantities,X0micphys_sync_nablas,X0microphys_primitives,X0phi_derivs,X0rad_conservatives,X0rad_conservatives_rhs,X0rad_pressure,X0rad_primitives,X0rad_sync_lr,X0rhovecs,X0shift_rhs,X0shift_vars,X0shift_vars_temp,X0surf_params,X1BSSN_AH,X1BSSN_aux_private,X1BSSN_aux_restrict2,X1BSSN_diag_restrict,X1BSSN_gupij,X1BSSN_matter,X1BSSN_refbd,X1BSSN_rhs,X1BSSN_vars,X1NPphi2_em,X1OmegF,X1Psi4_gw,X1Stagger_Bs,X1ah_radius,X1diag_vacuum_gf,X1disk_atmosphere,X1em_Ax,X1em_Ay,X1em_Az,X1em_Blagrangemultiplier,X1em_Blagrangemultiplier_rhs,X1em_Phi,X1em_Phi_rhs,X1em_conservativex,X1em_conservativey,X1em_conservativez,X1em_rhsx,X1em_rhsy,X1em_rhsz,X1excision_int_gfs,X1field_line_variables,X1field_line_variables_rhs,X1fisheye_vars,X1have_global_bdry,X1lapse_derivatives,X1lapse_rhs,X1lapse_vars,X1lapse_vars_aux,X1mhd_conservatives,X1mhd_nosync,X1mhd_primitives,X1mhd_rhs,X1mhd_sync_lr_B_quantities,X1mhd_sync_lr_hydro_quantities,X1mhd_sync_metric_facevals,X1mhd_sync_nablas,X1mhd_sync_nablas_diag,X1mhd_sync_rho_br_rho_bl,X1mhd_temps,X1mhd_vs,X1micphys_conservatives,X1micphys_conservatives_rhs,X1micphys_sync_lr_hydro_quantities,X1micphys_sync_nablas,X1microphys_primitives,X1phi_derivs,X1rad_conservatives,X1rad_conservatives_rhs,X1rad_pressure,X1rad_primitives,X1rad_sync_lr,X1shift_rhs,X1shift_vars,X1shift_vars_temp,X2BSSN_AH,X2BSSN_aux_private,X2BSSN_aux_restrict2,X2BSSN_diag_restrict,X2BSSN_gupij,X2BSSN_matter,X2BSSN_refbd,X2BSSN_rhs,X2BSSN_vars,X2NPphi2_em,X2OmegF,X2Psi4_gw,X2Stagger_Bs,X2ah_radius,X2diag_vacuum_gf,X2disk_atmosphere,X2em_Ax,X2em_Ay,X2em_Az,X2em_Blagrangemultiplier,X2em_Blagrangemultiplier_rhs,X2em_Phi,X2em_Phi_rhs,X2em_conservativex,X2em_conservativey,X2em_conservativez,X2em_rhsx,X2em_rhsy,X2em_rhsz,X2excision_int_gfs,X2field_line_variables,X2field_line_variables_rhs,X2fisheye_vars,X2lapse_derivatives,X2lapse_rhs,X2lapse_vars,X2lapse_vars_aux,X2mhd_conservatives,X2mhd_nosync,X2mhd_primitives,X2mhd_rhs,X2mhd_sync_lr_B_quantities,X2mhd_sync_lr_hydro_quantities,X2mhd_sync_metric_facevals,X2mhd_sync_nablas,X2mhd_sync_nablas_diag,X2mhd_sync_rho_br_rho_bl,X2mhd_temps,X2mhd_vs,X2micphys_conservatives,X2micphys_conservatives_rhs,X2micphys_sync_lr_hydro_quantities,X2micphys_sync_nablas,X2microphys_primitives,X2phi_derivs,X2rad_conservatives,X2rad_conservatives_rhs,X2rad_pressure,X2rad_primitives,X2rad_sync_lr,X2shift_rhs,X2shift_vars,X2shift_vars_temp,ah_centroid_length,ah_flags_length,ah_origin_length,ah_radius_length,Aupxx,Aupxy,Aupxz,Aupyy,Aupyz,Aupzz,Ax,Ax_p,Ax_p_p,Axx,Axx_p,Axx_p_p,Axx_rhs,Axy,Axy_p,Axy_p_p,Axy_rhs,Axz,Axz_p,Axz_p_p,Axz_rhs,Ay,Ay_p,Ay_p_p,Ayy,Ayy_p,Ayy_p_p,Ayy_rhs,Ayz,Ayz_p,Ayz_p_p,Ayz_rhs,Az,Az_p,Az_p_p,Azz,Azz_p,Azz_p_p,Azz_rhs,Bfreq1,Bfreq1_p,Bfreq1_p_p,Bfreq2,Bfreq2_p,Bfreq2_p_p,Blagrangemultiplier,Blagrangemultiplier_p,Blagrangemultiplier_p_p,Blagrangemultiplier_rhs,Box1X_VolInt,Box1X_VolInt1,Box1X_VolInt2,Box1Y_VolInt,Box1Y_VolInt1,Box1Y_VolInt2,Box1Z_VolInt,Box1Z_VolInt1,Box1Z_VolInt2,Box1denom_VolInt,Box1denom_VolInt1,Box1denom_VolInt2,Bx,Bx_stagger,Bxl,Bxr,Bxtilde,Bxtilde_p,Bxtilde_p_p,Bxtilde_or_Ax_rhs,By,By_stagger,Byl,Byr,Bytilde,Bytilde_p,Bytilde_p_p,Bytilde_or_Ay_rhs,Bz,Bz_stagger,Bzl,Bzr,Bztilde,Bztilde_p,Bztilde_p_p,Bztilde_or_Az_rhs,CoM_VolInt_denominator,CoMx_VolInt,CoMy_VolInt,CoMz_VolInt,E_rad,E_rad_nue,E_rad_nuel,E_rad_nuer,E_rad_nux,E_rad_nuxl,E_rad_nuxr,E_radl,E_radr,Ex,Ey,Ez,F_rad0,F_rad0_nue,F_rad0_nux,F_rad_scalar,F_rad_scalar_nue,F_rad_scalar_nux,F_radx,F_radx_nue,F_radx_nuele,F_radx_nuer,F_radx_nux,F_radx_nuxle,F_radx_nuxr,F_radxle,F_radxr,F_rady,F_rady_nue,F_rady_nuele,F_rady_nuer,F_rady_nux,F_rady_nuxle,F_rady_nuxr,F_radyle,F_radyr,F_radz,F_radz_nue,F_radz_nuele,F_radz_nuer,F_radz_nux,F_radz_nuxle,F_radz_nuxr,F_radzle,F_radzr,FaFal,FaFal_nue,FaFal_nux,FaFar,FaFar_nue,FaFar_nux,Fontfix_tracker_gf,Gammax,Gammax_p,Gammax_p_p,Gammax_drive,Gammax_rhs,Gammaxxx,Gammaxxy,Gammaxxz,Gammaxyy,Gammaxyz,Gammaxzz,Gammay,Gammay_p,Gammay_p_p,Gammay_drive,Gammay_rhs,Gammayxx,Gammayxy,Gammayxz,Gammayyy,Gammayyz,Gammayzz,Gammaz,Gammaz_p,Gammaz_p_p,Gammaz_drive,Gammaz_rhs,Gammazxx,Gammazxy,Gammazxz,Gammazyy,Gammazyz,Gammazzz,Gamx_const_VolInt,Gamy_const_VolInt,Gamz_const_VolInt,Ham_const_VolIntD,Ham_const_VolIntN,Ham_const_excised_VolIntD,Ham_const_excised_VolIntN,Ham_const_excised_innerregion_VolIntD,Ham_const_excised_innerregion_VolIntN,J_ADM_VolInt,J_ADM_VolInt_inner,J_ADM_VolInt_inner2,Jz_constraint,Jz_constraint_inner,KK,K_pp_rot1,K_pp_rot2,K_pp_rot3,K_rp_rot1,K_rp_rot2,K_rp_rot3,K_rr_rot1,K_rr_rot2,K_rr_rot3,K_rth_rot1,K_rth_rot2,K_rth_rot3,K_thp_rot1,K_thp_rot2,K_thp_rot3,K_thth_rot1,K_thth_rot2,K_thth_rot3,M0_AH_VolInt,M0_VolInt,M0_escape100M,M0_escape30M,M0_escape50M,M0_escape70M,M0_horiz_VolInt,M0_r1_VolInt,M0_r2_VolInt,M0_r3_VolInt,MNorm,MONOPOLE,MRsx,MRsy,MRsz,M_ADM_VolInt,M_constraint,M_constraint_inner,Minternal_VolInt,Minternal_cold_VolInt,NPphi0im,NPphi0im_p,NPphi0im_p_p,NPphi0re,NPphi0re_p,NPphi0re_p_p,NPphi2im,NPphi2im_p,NPphi2im_p_p,NPphi2re,NPphi2re_p,NPphi2re_p_p,OS_surf_rad,P,P_cld,P_constraint,P_constraint_inner,P_floor,P_radxx,P_radxx_nue,P_radxx_nux,P_radxy,P_radxy_nue,P_radxy_nux,P_radxz,P_radxz_nue,P_radxz_nux,P_radyy,P_radyy_nue,P_radyy_nux,P_radyz,P_radyz_nue,P_radyz_nux,P_radzz,P_radzz_nue,P_radzz_nux,P_tab,P_thermal,PhysicalRadius,Pl,Pr,PsiNorm,PsiRes,PsiTau,Pvec,RadiusDerivative,RadiusDerivative2,Rxx,Rxy,Rxz,Ryy,Ryz,Rzz,S,SPx,SPx_p,SPx_p_p,SPy,SPy_p,SPy_p_p,SPz,SPz_p,SPz_p_p,S_rad_x,S_rad_x_p,S_rad_x_p_p,S_rad_x_nue,S_rad_x_nue_p,S_rad_x_nue_p_p,S_rad_x_nue_rhs,S_rad_x_nux,S_rad_x_nux_p,S_rad_x_nux_p_p,S_rad_x_nux_rhs,S_rad_x_rhs,S_rad_y,S_rad_y_p,S_rad_y_p_p,S_rad_y_nue,S_rad_y_nue_p,S_rad_y_nue_p_p,S_rad_y_nue_rhs,S_rad_y_nux,S_rad_y_nux_p,S_rad_y_nux_p_p,S_rad_y_nux_rhs,S_rad_y_rhs,S_rad_z,S_rad_z_p,S_rad_z_p_p,S_rad_z_nue,S_rad_z_nue_p,S_rad_z_nue_p_p,S_rad_z_nue_rhs,S_rad_z_nux,S_rad_z_nux_p,S_rad_z_nux_p_p,S_rad_z_nux_rhs,S_rad_z_rhs,Sx,Sxx,Sxy,Sxz,Sy,Syy,Syz,Sz,Szz,T_0x,T_0x_p,T_0x_p_p,T_0y,T_0y_p,T_0y_p_p,T_0z,T_0z_p,T_0z_p_p,T_VolInt,T_fluid,T_fluidle,T_fluidr,Tem0_0_VolInt,Tem0_0_outsideBH_VolInt,Tfluid0_0_VolInt,Tfluid0_0_outsideBH_VolInt,VolIntegrand,VolIntegrand2,VolIntegrand3,VolIntegrand4,Y_e,Y_el,Y_er,ah_centroid_iteration,ah_centroid_iteration_p,ah_centroid_t,ah_centroid_t_p,ah_centroid_valid,ah_centroid_valid_p,ah_centroid_x,ah_centroid_x_p,ah_centroid_y,ah_centroid_y_p,ah_centroid_z,ah_centroid_z_p,ah_found_flag,ah_initial_find_flag,ah_origin_x,ah_origin_y,ah_origin_z,ah_radius,ah_really_initial_find_flag,ah_search_flag,b_phi_VolInt,bh_posn_x,bh_posn_y,bh_posn_z,bh_radius_z,brem_qee_VolInt,brem_qei_VolInt,chi,chi_p,chi_p_p,chi_rad,chi_rad_nue,chi_rad_nux,chi_rhs,cmax,cmax_rad,cmax_rad_nue,cmax_rad_nux,cmin,cmin_rad,cmin_rad_nue,cmin_rad_nux,dBx_m,dBy_m,dBz_m,dP_m,dT_fluid_m,ddrbrvec,density_modes_i1,density_modes_i2,density_modes_i3,density_modes_i4,density_modes_i5,density_modes_i6,density_modes_r0,density_modes_r1,density_modes_r2,density_modes_r3,density_modes_r4,density_modes_r5,density_modes_r6,div_beta,drbrvec,drhoYe_m,drhoYe_m_x,drhoYe_m_xp1,drho_b_m,drho_b_m_x,drho_b_m_xp1,dvx_m,dvx_m_x,dvx_m_xp1,dvy_m,dvz_m,em_J_between_VolInt,em_energy2_VolInt,em_energy_VolInt,em_energy_between_VolInt,em_energy_outsideBH_VolInt,em_energy_outsideradius1_VolInt,em_energy_outsideradius2_VolInt,emission_gf,emission_gf_nue,emission_gf_nux,eps_cld,eps_tab,eps_thermal,eps_tot,eta_nue,excision_zone_gf,fluid_J_horiz_VolInt,fluid_J_r1_VolInt,fluid_J_r2_VolInt,fluid_J_r3_VolInt,fluid_energy_horiz_VolInt,fluid_energy_r1_VolInt,fluid_energy_r2_VolInt,fluid_energy_r3_VolInt,gamma_tab,gconx,gcony,gconz,gupxx,gupxx_f,gupxy,gupxy_f,gupxz,gupxz_f,gupyy,gupyy_f,gupyz,gupyz_f,gupzz,gupzz_f,gxx,gxx_p,gxx_p_p,gxx_f,gxx_rhs,gxxx,gxxy,gxxz,gxy,gxy_p,gxy_p_p,gxy_f,gxy_rhs,gxyx,gxyy,gxyz,gxz,gxz_p,gxz_p_p,gxz_f,gxz_rhs,gxzx,gxzy,gxzz,gyy,gyy_p,gyy_p_p,gyy_f,gyy_rhs,gyyx,gyyy,gyyz,gyz,gyz_p,gyz_p_p,gyz_f,gyz_rhs,gyzx,gyzy,gyzz,gzz,gzz_p,gzz_p_p,gzz_f,gzz_rhs,gzzx,gzzy,gzzz,h,h_p,half_b2_u0_VolInt,half_b2_u0_outsideBH_VolInt,have_global_bdry_max,have_global_bdry_min,int_momentsi,int_momentsr,k_tab,ka_gf,ka_gf_nue,ka_gf_nux,ks_gf,ks_gf_nue,ks_gf_nux,kxx,kxy,kxz,kyy,kyz,kzz,lapm1,lapm1_p,lapm1_p_p,lapm1_f,lapm1_rhs,lapm1_rot1,lapm1_rot2,lapm1_rot3,lapset,lapset_p,lapset_p_p,lapset_rhs,lapset_timederiv,lapsex,lapsey,lapsez,mass_star1,mass_star2,mhd_chi_line,mhd_chi_line_p,mhd_chi_line_p_p,mhd_chi_line_rhs,mhd_psi_line,mhd_psi_line_p,mhd_psi_line_p_p,mhd_psi_line_rhs,mhd_st_x,mhd_st_x_p,mhd_st_x_p_p,mhd_st_x_rhs,mhd_st_y,mhd_st_y_p,mhd_st_y_p_p,mhd_st_y_rhs,mhd_st_z,mhd_st_z_p,mhd_st_z_p_p,mhd_st_z_rhs,mhd_u_chi,mhd_u_chi_p,mhd_u_chi_p_p,mhd_u_chi_rhs,mhd_u_psi,mhd_u_psi_p,mhd_u_psi_p_p,mhd_u_psi_rhs,minternal_cold_horiz_VolInt,minternal_cold_r1_VolInt,minternal_cold_r2_VolInt,minternal_cold_r3_VolInt,minternal_horiz_VolInt,minternal_r1_VolInt,minternal_r2_VolInt,minternal_r3_VolInt,mom_const_VolIntD,mom_const_excised_VolIntD,momentsi,momentsi_old,momentsr,momentsr_old,momx_const_VolIntN,momx_const_excised_VolIntN,momy_const_VolIntN,momy_const_excised_VolIntN,momz_const_VolIntN,momz_const_excised_VolIntN,monopole_VolInt,monopole_outsideBH_VolInt,mu_nu,n_poly,odd_momentsi,odd_momentsi_old,odd_momentsr,odd_momentsr_old,optd,optd_x,optd_y,optd_z,pfloor_gf,phi,phi_p,phi_p_p,phi_f,phi_rhs,phi_rot1,phi_rot2,phi_rot3,phix,phiy,phiz,psi,psi0im,psi0im_p,psi0im_p_p,psi0re,psi0re_p,psi0re_p_p,psi6phi,psi6phi_p,psi6phi_p_p,psi6phi_rhs,rad_const,rad_energy_VolInt,rad_energy_nue_VolInt,rad_energy_nux_VolInt,rbrvec,refbd,refbd_p,refbd_p_p,rho,rhoYe,rhoYe_p,rhoYe_p_p,rhoYe_rhs,rho_b,rho_b_atm_gf,rho_bl,rho_br,rho_star,rho_star_p,rho_star_p_p,rho_star_rhs,rho_tab,rhob_floor,rhovec,sbt,sbx,sby,sbz,shiftp_rot1,shiftp_rot2,shiftp_rot3,shiftr_rot1,shiftr_rot2,shiftr_rot3,shiftth_rot1,shiftth_rot2,shiftth_rot3,shiftx,shiftx_p,shiftx_p_p,shiftx_f,shiftx_rhs,shiftxt,shiftxt_p,shiftxt_p_p,shiftxt_rhs,shiftxt_timederiv,shifty,shifty_p,shifty_p_p,shifty_f,shifty_rhs,shiftyt,shiftyt_p,shiftyt_p_p,shiftyt_rhs,shiftyt_timederiv,shiftz,shiftz_p,shiftz_p_p,shiftz_f,shiftz_rhs,shiftzt,shiftzt_p,shiftzt_p_p,shiftzt_rhs,shiftzt_timederiv,smallb2,st_x,st_y,st_z,surfvec,synch_VolInt,tau,tau_p,tau_p_p,tau_rad,tau_rad_p,tau_rad_p_p,tau_rad_nue,tau_rad_nue_p,tau_rad_nue_p_p,tau_rad_nue_rhs,tau_rad_nux,tau_rad_nux_p,tau_rad_nux_p_p,tau_rad_nux_rhs,tau_rad_rhs,tau_rhs,temp1,temp10,temp11,temp12,temp13,temp14,temp15,temp16,temp17,temp18,temp19,temp2,temp20,temp21,temp22,temp23,temp24,temp25,temp26,temp3,temp4,temp5,temp6,temp7,temp8,temp9,temp_g00,trK,trK_p,trK_p_p,trK_rhs,trR,trRtilde,u0,v02_rad_nuel,v02_rad_nuer,v02_rad_nuxl,v02_rad_nuxr,v02_radl,v02_radr,v02l,v02r,vvec,vx,vxl,vxr,vy,vyl,vyr,vz,vzl,vzr,w,zeta_rad,zeta_rad_nue,zeta_rad_nux

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ANG_FREQ_OFBFIELD_PROTECTED_CARGUMENTS \
CCTK_REAL * CCTK_RESTRICT Aupxx = (cctki_dummy_int = &Aupxx - &Aupxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Aupxx")); \
CCTK_REAL * CCTK_RESTRICT Aupxy = (cctki_dummy_int = &Aupxy - &Aupxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Aupxy")); \
CCTK_REAL * CCTK_RESTRICT Aupxz = (cctki_dummy_int = &Aupxz - &Aupxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Aupxz")); \
CCTK_REAL * CCTK_RESTRICT Aupyy = (cctki_dummy_int = &Aupyy - &Aupyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Aupyy")); \
CCTK_REAL * CCTK_RESTRICT Aupyz = (cctki_dummy_int = &Aupyz - &Aupyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Aupyz")); \
CCTK_REAL * CCTK_RESTRICT Aupzz = (cctki_dummy_int = &Aupzz - &Aupzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Aupzz")); \
CCTK_REAL * CCTK_RESTRICT Ax = (cctki_dummy_int = &Ax - &Ax, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Ax")); \
CCTK_REAL * CCTK_RESTRICT Ax_p = (cctki_dummy_int = &Ax_p - &Ax_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "Ax")); \
CCTK_REAL * CCTK_RESTRICT Ax_p_p = (cctki_dummy_int = &Ax_p_p - &Ax_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "Ax")); \
CCTK_REAL * CCTK_RESTRICT Axx = (cctki_dummy_int = &Axx - &Axx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Axx")); \
CCTK_REAL * CCTK_RESTRICT Axx_p = (cctki_dummy_int = &Axx_p - &Axx_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Axx")); \
CCTK_REAL * CCTK_RESTRICT Axx_p_p = (cctki_dummy_int = &Axx_p_p - &Axx_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Axx")); \
CCTK_REAL * CCTK_RESTRICT Axx_rhs = (cctki_dummy_int = &Axx_rhs - &Axx_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Axx_rhs")); \
CCTK_REAL * CCTK_RESTRICT Axy = (cctki_dummy_int = &Axy - &Axy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Axy")); \
CCTK_REAL * CCTK_RESTRICT Axy_p = (cctki_dummy_int = &Axy_p - &Axy_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Axy")); \
CCTK_REAL * CCTK_RESTRICT Axy_p_p = (cctki_dummy_int = &Axy_p_p - &Axy_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Axy")); \
CCTK_REAL * CCTK_RESTRICT Axy_rhs = (cctki_dummy_int = &Axy_rhs - &Axy_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Axy_rhs")); \
CCTK_REAL * CCTK_RESTRICT Axz = (cctki_dummy_int = &Axz - &Axz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Axz")); \
CCTK_REAL * CCTK_RESTRICT Axz_p = (cctki_dummy_int = &Axz_p - &Axz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Axz")); \
CCTK_REAL * CCTK_RESTRICT Axz_p_p = (cctki_dummy_int = &Axz_p_p - &Axz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Axz")); \
CCTK_REAL * CCTK_RESTRICT Axz_rhs = (cctki_dummy_int = &Axz_rhs - &Axz_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Axz_rhs")); \
CCTK_REAL * CCTK_RESTRICT Ay = (cctki_dummy_int = &Ay - &Ay, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Ay")); \
CCTK_REAL * CCTK_RESTRICT Ay_p = (cctki_dummy_int = &Ay_p - &Ay_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "Ay")); \
CCTK_REAL * CCTK_RESTRICT Ay_p_p = (cctki_dummy_int = &Ay_p_p - &Ay_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "Ay")); \
CCTK_REAL * CCTK_RESTRICT Ayy = (cctki_dummy_int = &Ayy - &Ayy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Ayy")); \
CCTK_REAL * CCTK_RESTRICT Ayy_p = (cctki_dummy_int = &Ayy_p - &Ayy_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Ayy")); \
CCTK_REAL * CCTK_RESTRICT Ayy_p_p = (cctki_dummy_int = &Ayy_p_p - &Ayy_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Ayy")); \
CCTK_REAL * CCTK_RESTRICT Ayy_rhs = (cctki_dummy_int = &Ayy_rhs - &Ayy_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Ayy_rhs")); \
CCTK_REAL * CCTK_RESTRICT Ayz = (cctki_dummy_int = &Ayz - &Ayz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Ayz")); \
CCTK_REAL * CCTK_RESTRICT Ayz_p = (cctki_dummy_int = &Ayz_p - &Ayz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Ayz")); \
CCTK_REAL * CCTK_RESTRICT Ayz_p_p = (cctki_dummy_int = &Ayz_p_p - &Ayz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Ayz")); \
CCTK_REAL * CCTK_RESTRICT Ayz_rhs = (cctki_dummy_int = &Ayz_rhs - &Ayz_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Ayz_rhs")); \
CCTK_REAL * CCTK_RESTRICT Az = (cctki_dummy_int = &Az - &Az, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Az")); \
CCTK_REAL * CCTK_RESTRICT Az_p = (cctki_dummy_int = &Az_p - &Az_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "Az")); \
CCTK_REAL * CCTK_RESTRICT Az_p_p = (cctki_dummy_int = &Az_p_p - &Az_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "Az")); \
CCTK_REAL * CCTK_RESTRICT Azz = (cctki_dummy_int = &Azz - &Azz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Azz")); \
CCTK_REAL * CCTK_RESTRICT Azz_p = (cctki_dummy_int = &Azz_p - &Azz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Azz")); \
CCTK_REAL * CCTK_RESTRICT Azz_p_p = (cctki_dummy_int = &Azz_p_p - &Azz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Azz")); \
CCTK_REAL * CCTK_RESTRICT Azz_rhs = (cctki_dummy_int = &Azz_rhs - &Azz_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Azz_rhs")); \
CCTK_REAL * CCTK_RESTRICT Bfreq1 = (cctki_dummy_int = &Bfreq1 - &Bfreq1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "ANG_FREQ_OFBFIELD", "Bfreq1")); \
CCTK_REAL * CCTK_RESTRICT Bfreq1_p = (cctki_dummy_int = &Bfreq1_p - &Bfreq1_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "ANG_FREQ_OFBFIELD", "Bfreq1")); \
CCTK_REAL * CCTK_RESTRICT Bfreq1_p_p = (cctki_dummy_int = &Bfreq1_p_p - &Bfreq1_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "ANG_FREQ_OFBFIELD", "Bfreq1")); \
CCTK_REAL * CCTK_RESTRICT Bfreq2 = (cctki_dummy_int = &Bfreq2 - &Bfreq2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "ANG_FREQ_OFBFIELD", "Bfreq2")); \
CCTK_REAL * CCTK_RESTRICT Bfreq2_p = (cctki_dummy_int = &Bfreq2_p - &Bfreq2_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "ANG_FREQ_OFBFIELD", "Bfreq2")); \
CCTK_REAL * CCTK_RESTRICT Bfreq2_p_p = (cctki_dummy_int = &Bfreq2_p_p - &Bfreq2_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "ANG_FREQ_OFBFIELD", "Bfreq2")); \
CCTK_REAL * CCTK_RESTRICT Blagrangemultiplier = (cctki_dummy_int = &Blagrangemultiplier - &Blagrangemultiplier, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Blagrangemultiplier")); \
CCTK_REAL * CCTK_RESTRICT Blagrangemultiplier_p = (cctki_dummy_int = &Blagrangemultiplier_p - &Blagrangemultiplier_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "Blagrangemultiplier")); \
CCTK_REAL * CCTK_RESTRICT Blagrangemultiplier_p_p = (cctki_dummy_int = &Blagrangemultiplier_p_p - &Blagrangemultiplier_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "Blagrangemultiplier")); \
CCTK_REAL * CCTK_RESTRICT Blagrangemultiplier_rhs = (cctki_dummy_int = &Blagrangemultiplier_rhs - &Blagrangemultiplier_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Blagrangemultiplier_rhs")); \
CCTK_REAL * CCTK_RESTRICT Box1X_VolInt = (cctki_dummy_int = &Box1X_VolInt - &Box1X_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1X_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Box1X_VolInt1 = (cctki_dummy_int = &Box1X_VolInt1 - &Box1X_VolInt1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1X_VolInt1")); \
CCTK_REAL * CCTK_RESTRICT Box1X_VolInt2 = (cctki_dummy_int = &Box1X_VolInt2 - &Box1X_VolInt2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1X_VolInt2")); \
CCTK_REAL * CCTK_RESTRICT Box1Y_VolInt = (cctki_dummy_int = &Box1Y_VolInt - &Box1Y_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1Y_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Box1Y_VolInt1 = (cctki_dummy_int = &Box1Y_VolInt1 - &Box1Y_VolInt1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1Y_VolInt1")); \
CCTK_REAL * CCTK_RESTRICT Box1Y_VolInt2 = (cctki_dummy_int = &Box1Y_VolInt2 - &Box1Y_VolInt2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1Y_VolInt2")); \
CCTK_REAL * CCTK_RESTRICT Box1Z_VolInt = (cctki_dummy_int = &Box1Z_VolInt - &Box1Z_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1Z_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Box1Z_VolInt1 = (cctki_dummy_int = &Box1Z_VolInt1 - &Box1Z_VolInt1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1Z_VolInt1")); \
CCTK_REAL * CCTK_RESTRICT Box1Z_VolInt2 = (cctki_dummy_int = &Box1Z_VolInt2 - &Box1Z_VolInt2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1Z_VolInt2")); \
CCTK_REAL * CCTK_RESTRICT Box1denom_VolInt = (cctki_dummy_int = &Box1denom_VolInt - &Box1denom_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1denom_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Box1denom_VolInt1 = (cctki_dummy_int = &Box1denom_VolInt1 - &Box1denom_VolInt1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1denom_VolInt1")); \
CCTK_REAL * CCTK_RESTRICT Box1denom_VolInt2 = (cctki_dummy_int = &Box1denom_VolInt2 - &Box1denom_VolInt2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "Box1denom_VolInt2")); \
CCTK_REAL * CCTK_RESTRICT Bx = (cctki_dummy_int = &Bx - &Bx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bx")); \
CCTK_REAL * CCTK_RESTRICT Bx_stagger = (cctki_dummy_int = &Bx_stagger - &Bx_stagger, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bx_stagger")); \
CCTK_REAL * CCTK_RESTRICT Bxl = (cctki_dummy_int = &Bxl - &Bxl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bxl")); \
CCTK_REAL * CCTK_RESTRICT Bxr = (cctki_dummy_int = &Bxr - &Bxr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bxr")); \
CCTK_REAL * CCTK_RESTRICT Bxtilde = (cctki_dummy_int = &Bxtilde - &Bxtilde, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bxtilde")); \
CCTK_REAL * CCTK_RESTRICT Bxtilde_p = (cctki_dummy_int = &Bxtilde_p - &Bxtilde_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "Bxtilde")); \
CCTK_REAL * CCTK_RESTRICT Bxtilde_p_p = (cctki_dummy_int = &Bxtilde_p_p - &Bxtilde_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "Bxtilde")); \
CCTK_REAL * CCTK_RESTRICT Bxtilde_or_Ax_rhs = (cctki_dummy_int = &Bxtilde_or_Ax_rhs - &Bxtilde_or_Ax_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bxtilde_or_Ax_rhs")); \
CCTK_REAL * CCTK_RESTRICT By = (cctki_dummy_int = &By - &By, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "By")); \
CCTK_REAL * CCTK_RESTRICT By_stagger = (cctki_dummy_int = &By_stagger - &By_stagger, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "By_stagger")); \
CCTK_REAL * CCTK_RESTRICT Byl = (cctki_dummy_int = &Byl - &Byl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Byl")); \
CCTK_REAL * CCTK_RESTRICT Byr = (cctki_dummy_int = &Byr - &Byr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Byr")); \
CCTK_REAL * CCTK_RESTRICT Bytilde = (cctki_dummy_int = &Bytilde - &Bytilde, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bytilde")); \
CCTK_REAL * CCTK_RESTRICT Bytilde_p = (cctki_dummy_int = &Bytilde_p - &Bytilde_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "Bytilde")); \
CCTK_REAL * CCTK_RESTRICT Bytilde_p_p = (cctki_dummy_int = &Bytilde_p_p - &Bytilde_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "Bytilde")); \
CCTK_REAL * CCTK_RESTRICT Bytilde_or_Ay_rhs = (cctki_dummy_int = &Bytilde_or_Ay_rhs - &Bytilde_or_Ay_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bytilde_or_Ay_rhs")); \
CCTK_REAL * CCTK_RESTRICT Bz = (cctki_dummy_int = &Bz - &Bz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bz")); \
CCTK_REAL * CCTK_RESTRICT Bz_stagger = (cctki_dummy_int = &Bz_stagger - &Bz_stagger, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bz_stagger")); \
CCTK_REAL * CCTK_RESTRICT Bzl = (cctki_dummy_int = &Bzl - &Bzl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bzl")); \
CCTK_REAL * CCTK_RESTRICT Bzr = (cctki_dummy_int = &Bzr - &Bzr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bzr")); \
CCTK_REAL * CCTK_RESTRICT Bztilde = (cctki_dummy_int = &Bztilde - &Bztilde, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bztilde")); \
CCTK_REAL * CCTK_RESTRICT Bztilde_p = (cctki_dummy_int = &Bztilde_p - &Bztilde_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "Bztilde")); \
CCTK_REAL * CCTK_RESTRICT Bztilde_p_p = (cctki_dummy_int = &Bztilde_p_p - &Bztilde_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "Bztilde")); \
CCTK_REAL * CCTK_RESTRICT Bztilde_or_Az_rhs = (cctki_dummy_int = &Bztilde_or_Az_rhs - &Bztilde_or_Az_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Bztilde_or_Az_rhs")); \
CCTK_REAL * CCTK_RESTRICT CoM_VolInt_denominator = (cctki_dummy_int = &CoM_VolInt_denominator - &CoM_VolInt_denominator, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "CoM_VolInt_denominator")); \
CCTK_REAL * CCTK_RESTRICT CoMx_VolInt = (cctki_dummy_int = &CoMx_VolInt - &CoMx_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "CoMx_VolInt")); \
CCTK_REAL * CCTK_RESTRICT CoMy_VolInt = (cctki_dummy_int = &CoMy_VolInt - &CoMy_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "CoMy_VolInt")); \
CCTK_REAL * CCTK_RESTRICT CoMz_VolInt = (cctki_dummy_int = &CoMz_VolInt - &CoMz_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "CoMz_VolInt")); \
CCTK_REAL * CCTK_RESTRICT E_rad = (cctki_dummy_int = &E_rad - &E_rad, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_rad")); \
CCTK_REAL * CCTK_RESTRICT E_rad_nue = (cctki_dummy_int = &E_rad_nue - &E_rad_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_rad_nue")); \
CCTK_REAL * CCTK_RESTRICT E_rad_nuel = (cctki_dummy_int = &E_rad_nuel - &E_rad_nuel, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_rad_nuel")); \
CCTK_REAL * CCTK_RESTRICT E_rad_nuer = (cctki_dummy_int = &E_rad_nuer - &E_rad_nuer, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_rad_nuer")); \
CCTK_REAL * CCTK_RESTRICT E_rad_nux = (cctki_dummy_int = &E_rad_nux - &E_rad_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_rad_nux")); \
CCTK_REAL * CCTK_RESTRICT E_rad_nuxl = (cctki_dummy_int = &E_rad_nuxl - &E_rad_nuxl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_rad_nuxl")); \
CCTK_REAL * CCTK_RESTRICT E_rad_nuxr = (cctki_dummy_int = &E_rad_nuxr - &E_rad_nuxr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_rad_nuxr")); \
CCTK_REAL * CCTK_RESTRICT E_radl = (cctki_dummy_int = &E_radl - &E_radl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_radl")); \
CCTK_REAL * CCTK_RESTRICT E_radr = (cctki_dummy_int = &E_radr - &E_radr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "E_radr")); \
CCTK_REAL * CCTK_RESTRICT Ex = (cctki_dummy_int = &Ex - &Ex, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Ex")); \
CCTK_REAL * CCTK_RESTRICT Ey = (cctki_dummy_int = &Ey - &Ey, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Ey")); \
CCTK_REAL * CCTK_RESTRICT Ez = (cctki_dummy_int = &Ez - &Ez, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Ez")); \
CCTK_REAL * CCTK_RESTRICT F_rad0 = (cctki_dummy_int = &F_rad0 - &F_rad0, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rad0")); \
CCTK_REAL * CCTK_RESTRICT F_rad0_nue = (cctki_dummy_int = &F_rad0_nue - &F_rad0_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rad0_nue")); \
CCTK_REAL * CCTK_RESTRICT F_rad0_nux = (cctki_dummy_int = &F_rad0_nux - &F_rad0_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rad0_nux")); \
CCTK_REAL * CCTK_RESTRICT F_rad_scalar = (cctki_dummy_int = &F_rad_scalar - &F_rad_scalar, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rad_scalar")); \
CCTK_REAL * CCTK_RESTRICT F_rad_scalar_nue = (cctki_dummy_int = &F_rad_scalar_nue - &F_rad_scalar_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rad_scalar_nue")); \
CCTK_REAL * CCTK_RESTRICT F_rad_scalar_nux = (cctki_dummy_int = &F_rad_scalar_nux - &F_rad_scalar_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rad_scalar_nux")); \
CCTK_REAL * CCTK_RESTRICT F_radx = (cctki_dummy_int = &F_radx - &F_radx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radx")); \
CCTK_REAL * CCTK_RESTRICT F_radx_nue = (cctki_dummy_int = &F_radx_nue - &F_radx_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radx_nue")); \
CCTK_REAL * CCTK_RESTRICT F_radx_nuele = (cctki_dummy_int = &F_radx_nuele - &F_radx_nuele, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radx_nuele")); \
CCTK_REAL * CCTK_RESTRICT F_radx_nuer = (cctki_dummy_int = &F_radx_nuer - &F_radx_nuer, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radx_nuer")); \
CCTK_REAL * CCTK_RESTRICT F_radx_nux = (cctki_dummy_int = &F_radx_nux - &F_radx_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radx_nux")); \
CCTK_REAL * CCTK_RESTRICT F_radx_nuxle = (cctki_dummy_int = &F_radx_nuxle - &F_radx_nuxle, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radx_nuxle")); \
CCTK_REAL * CCTK_RESTRICT F_radx_nuxr = (cctki_dummy_int = &F_radx_nuxr - &F_radx_nuxr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radx_nuxr")); \
CCTK_REAL * CCTK_RESTRICT F_radxle = (cctki_dummy_int = &F_radxle - &F_radxle, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radxle")); \
CCTK_REAL * CCTK_RESTRICT F_radxr = (cctki_dummy_int = &F_radxr - &F_radxr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radxr")); \
CCTK_REAL * CCTK_RESTRICT F_rady = (cctki_dummy_int = &F_rady - &F_rady, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rady")); \
CCTK_REAL * CCTK_RESTRICT F_rady_nue = (cctki_dummy_int = &F_rady_nue - &F_rady_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rady_nue")); \
CCTK_REAL * CCTK_RESTRICT F_rady_nuele = (cctki_dummy_int = &F_rady_nuele - &F_rady_nuele, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rady_nuele")); \
CCTK_REAL * CCTK_RESTRICT F_rady_nuer = (cctki_dummy_int = &F_rady_nuer - &F_rady_nuer, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rady_nuer")); \
CCTK_REAL * CCTK_RESTRICT F_rady_nux = (cctki_dummy_int = &F_rady_nux - &F_rady_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rady_nux")); \
CCTK_REAL * CCTK_RESTRICT F_rady_nuxle = (cctki_dummy_int = &F_rady_nuxle - &F_rady_nuxle, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rady_nuxle")); \
CCTK_REAL * CCTK_RESTRICT F_rady_nuxr = (cctki_dummy_int = &F_rady_nuxr - &F_rady_nuxr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_rady_nuxr")); \
CCTK_REAL * CCTK_RESTRICT F_radyle = (cctki_dummy_int = &F_radyle - &F_radyle, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radyle")); \
CCTK_REAL * CCTK_RESTRICT F_radyr = (cctki_dummy_int = &F_radyr - &F_radyr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radyr")); \
CCTK_REAL * CCTK_RESTRICT F_radz = (cctki_dummy_int = &F_radz - &F_radz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radz")); \
CCTK_REAL * CCTK_RESTRICT F_radz_nue = (cctki_dummy_int = &F_radz_nue - &F_radz_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radz_nue")); \
CCTK_REAL * CCTK_RESTRICT F_radz_nuele = (cctki_dummy_int = &F_radz_nuele - &F_radz_nuele, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radz_nuele")); \
CCTK_REAL * CCTK_RESTRICT F_radz_nuer = (cctki_dummy_int = &F_radz_nuer - &F_radz_nuer, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radz_nuer")); \
CCTK_REAL * CCTK_RESTRICT F_radz_nux = (cctki_dummy_int = &F_radz_nux - &F_radz_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radz_nux")); \
CCTK_REAL * CCTK_RESTRICT F_radz_nuxle = (cctki_dummy_int = &F_radz_nuxle - &F_radz_nuxle, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radz_nuxle")); \
CCTK_REAL * CCTK_RESTRICT F_radz_nuxr = (cctki_dummy_int = &F_radz_nuxr - &F_radz_nuxr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radz_nuxr")); \
CCTK_REAL * CCTK_RESTRICT F_radzle = (cctki_dummy_int = &F_radzle - &F_radzle, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radzle")); \
CCTK_REAL * CCTK_RESTRICT F_radzr = (cctki_dummy_int = &F_radzr - &F_radzr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "F_radzr")); \
CCTK_REAL * CCTK_RESTRICT FaFal = (cctki_dummy_int = &FaFal - &FaFal, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "FaFal")); \
CCTK_REAL * CCTK_RESTRICT FaFal_nue = (cctki_dummy_int = &FaFal_nue - &FaFal_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "FaFal_nue")); \
CCTK_REAL * CCTK_RESTRICT FaFal_nux = (cctki_dummy_int = &FaFal_nux - &FaFal_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "FaFal_nux")); \
CCTK_REAL * CCTK_RESTRICT FaFar = (cctki_dummy_int = &FaFar - &FaFar, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "FaFar")); \
CCTK_REAL * CCTK_RESTRICT FaFar_nue = (cctki_dummy_int = &FaFar_nue - &FaFar_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "FaFar_nue")); \
CCTK_REAL * CCTK_RESTRICT FaFar_nux = (cctki_dummy_int = &FaFar_nux - &FaFar_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "FaFar_nux")); \
CCTK_REAL * CCTK_RESTRICT Fontfix_tracker_gf = (cctki_dummy_int = &Fontfix_tracker_gf - &Fontfix_tracker_gf, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Fontfix_tracker_gf")); \
CCTK_REAL * CCTK_RESTRICT Gammax = (cctki_dummy_int = &Gammax - &Gammax, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammax")); \
CCTK_REAL * CCTK_RESTRICT Gammax_p = (cctki_dummy_int = &Gammax_p - &Gammax_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Gammax")); \
CCTK_REAL * CCTK_RESTRICT Gammax_p_p = (cctki_dummy_int = &Gammax_p_p - &Gammax_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Gammax")); \
CCTK_REAL * CCTK_RESTRICT Gammax_drive = (cctki_dummy_int = &Gammax_drive - &Gammax_drive, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "Gammax_drive")); \
CCTK_REAL * CCTK_RESTRICT Gammax_rhs = (cctki_dummy_int = &Gammax_rhs - &Gammax_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammax_rhs")); \
CCTK_REAL * CCTK_RESTRICT Gammaxxx = (cctki_dummy_int = &Gammaxxx - &Gammaxxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammaxxx")); \
CCTK_REAL * CCTK_RESTRICT Gammaxxy = (cctki_dummy_int = &Gammaxxy - &Gammaxxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammaxxy")); \
CCTK_REAL * CCTK_RESTRICT Gammaxxz = (cctki_dummy_int = &Gammaxxz - &Gammaxxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammaxxz")); \
CCTK_REAL * CCTK_RESTRICT Gammaxyy = (cctki_dummy_int = &Gammaxyy - &Gammaxyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammaxyy")); \
CCTK_REAL * CCTK_RESTRICT Gammaxyz = (cctki_dummy_int = &Gammaxyz - &Gammaxyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammaxyz")); \
CCTK_REAL * CCTK_RESTRICT Gammaxzz = (cctki_dummy_int = &Gammaxzz - &Gammaxzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammaxzz")); \
CCTK_REAL * CCTK_RESTRICT Gammay = (cctki_dummy_int = &Gammay - &Gammay, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammay")); \
CCTK_REAL * CCTK_RESTRICT Gammay_p = (cctki_dummy_int = &Gammay_p - &Gammay_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Gammay")); \
CCTK_REAL * CCTK_RESTRICT Gammay_p_p = (cctki_dummy_int = &Gammay_p_p - &Gammay_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Gammay")); \
CCTK_REAL * CCTK_RESTRICT Gammay_drive = (cctki_dummy_int = &Gammay_drive - &Gammay_drive, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "Gammay_drive")); \
CCTK_REAL * CCTK_RESTRICT Gammay_rhs = (cctki_dummy_int = &Gammay_rhs - &Gammay_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammay_rhs")); \
CCTK_REAL * CCTK_RESTRICT Gammayxx = (cctki_dummy_int = &Gammayxx - &Gammayxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammayxx")); \
CCTK_REAL * CCTK_RESTRICT Gammayxy = (cctki_dummy_int = &Gammayxy - &Gammayxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammayxy")); \
CCTK_REAL * CCTK_RESTRICT Gammayxz = (cctki_dummy_int = &Gammayxz - &Gammayxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammayxz")); \
CCTK_REAL * CCTK_RESTRICT Gammayyy = (cctki_dummy_int = &Gammayyy - &Gammayyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammayyy")); \
CCTK_REAL * CCTK_RESTRICT Gammayyz = (cctki_dummy_int = &Gammayyz - &Gammayyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammayyz")); \
CCTK_REAL * CCTK_RESTRICT Gammayzz = (cctki_dummy_int = &Gammayzz - &Gammayzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammayzz")); \
CCTK_REAL * CCTK_RESTRICT Gammaz = (cctki_dummy_int = &Gammaz - &Gammaz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammaz")); \
CCTK_REAL * CCTK_RESTRICT Gammaz_p = (cctki_dummy_int = &Gammaz_p - &Gammaz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "Gammaz")); \
CCTK_REAL * CCTK_RESTRICT Gammaz_p_p = (cctki_dummy_int = &Gammaz_p_p - &Gammaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "Gammaz")); \
CCTK_REAL * CCTK_RESTRICT Gammaz_drive = (cctki_dummy_int = &Gammaz_drive - &Gammaz_drive, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "Gammaz_drive")); \
CCTK_REAL * CCTK_RESTRICT Gammaz_rhs = (cctki_dummy_int = &Gammaz_rhs - &Gammaz_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammaz_rhs")); \
CCTK_REAL * CCTK_RESTRICT Gammazxx = (cctki_dummy_int = &Gammazxx - &Gammazxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammazxx")); \
CCTK_REAL * CCTK_RESTRICT Gammazxy = (cctki_dummy_int = &Gammazxy - &Gammazxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammazxy")); \
CCTK_REAL * CCTK_RESTRICT Gammazxz = (cctki_dummy_int = &Gammazxz - &Gammazxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammazxz")); \
CCTK_REAL * CCTK_RESTRICT Gammazyy = (cctki_dummy_int = &Gammazyy - &Gammazyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammazyy")); \
CCTK_REAL * CCTK_RESTRICT Gammazyz = (cctki_dummy_int = &Gammazyz - &Gammazyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammazyz")); \
CCTK_REAL * CCTK_RESTRICT Gammazzz = (cctki_dummy_int = &Gammazzz - &Gammazzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Gammazzz")); \
CCTK_REAL * CCTK_RESTRICT Gamx_const_VolInt = (cctki_dummy_int = &Gamx_const_VolInt - &Gamx_const_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Gamx_const_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Gamy_const_VolInt = (cctki_dummy_int = &Gamy_const_VolInt - &Gamy_const_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Gamy_const_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Gamz_const_VolInt = (cctki_dummy_int = &Gamz_const_VolInt - &Gamz_const_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Gamz_const_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Ham_const_VolIntD = (cctki_dummy_int = &Ham_const_VolIntD - &Ham_const_VolIntD, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Ham_const_VolIntD")); \
CCTK_REAL * CCTK_RESTRICT Ham_const_VolIntN = (cctki_dummy_int = &Ham_const_VolIntN - &Ham_const_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Ham_const_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT Ham_const_excised_VolIntD = (cctki_dummy_int = &Ham_const_excised_VolIntD - &Ham_const_excised_VolIntD, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Ham_const_excised_VolIntD")); \
CCTK_REAL * CCTK_RESTRICT Ham_const_excised_VolIntN = (cctki_dummy_int = &Ham_const_excised_VolIntN - &Ham_const_excised_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Ham_const_excised_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT Ham_const_excised_innerregion_VolIntD = (cctki_dummy_int = &Ham_const_excised_innerregion_VolIntD - &Ham_const_excised_innerregion_VolIntD, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Ham_const_excised_innerregion_VolIntD")); \
CCTK_REAL * CCTK_RESTRICT Ham_const_excised_innerregion_VolIntN = (cctki_dummy_int = &Ham_const_excised_innerregion_VolIntN - &Ham_const_excised_innerregion_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Ham_const_excised_innerregion_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT J_ADM_VolInt = (cctki_dummy_int = &J_ADM_VolInt - &J_ADM_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "J_ADM_VolInt")); \
CCTK_REAL * CCTK_RESTRICT J_ADM_VolInt_inner = (cctki_dummy_int = &J_ADM_VolInt_inner - &J_ADM_VolInt_inner, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "J_ADM_VolInt_inner")); \
CCTK_REAL * CCTK_RESTRICT J_ADM_VolInt_inner2 = (cctki_dummy_int = &J_ADM_VolInt_inner2 - &J_ADM_VolInt_inner2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "J_ADM_VolInt_inner2")); \
CCTK_REAL * CCTK_RESTRICT Jz_constraint = (cctki_dummy_int = &Jz_constraint - &Jz_constraint, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Jz_constraint")); \
CCTK_REAL * CCTK_RESTRICT Jz_constraint_inner = (cctki_dummy_int = &Jz_constraint_inner - &Jz_constraint_inner, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "Jz_constraint_inner")); \
CCTK_REAL * CCTK_RESTRICT KK = (cctki_dummy_int = &KK - &KK, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "KK")); \
CCTK_REAL * CCTK_RESTRICT K_pp_rot1 = (cctki_dummy_int = &K_pp_rot1 - &K_pp_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_pp_rot1")); \
CCTK_REAL * CCTK_RESTRICT K_pp_rot2 = (cctki_dummy_int = &K_pp_rot2 - &K_pp_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_pp_rot2")); \
CCTK_REAL * CCTK_RESTRICT K_pp_rot3 = (cctki_dummy_int = &K_pp_rot3 - &K_pp_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_pp_rot3")); \
CCTK_REAL * CCTK_RESTRICT K_rp_rot1 = (cctki_dummy_int = &K_rp_rot1 - &K_rp_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rp_rot1")); \
CCTK_REAL * CCTK_RESTRICT K_rp_rot2 = (cctki_dummy_int = &K_rp_rot2 - &K_rp_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rp_rot2")); \
CCTK_REAL * CCTK_RESTRICT K_rp_rot3 = (cctki_dummy_int = &K_rp_rot3 - &K_rp_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rp_rot3")); \
CCTK_REAL * CCTK_RESTRICT K_rr_rot1 = (cctki_dummy_int = &K_rr_rot1 - &K_rr_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rr_rot1")); \
CCTK_REAL * CCTK_RESTRICT K_rr_rot2 = (cctki_dummy_int = &K_rr_rot2 - &K_rr_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rr_rot2")); \
CCTK_REAL * CCTK_RESTRICT K_rr_rot3 = (cctki_dummy_int = &K_rr_rot3 - &K_rr_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rr_rot3")); \
CCTK_REAL * CCTK_RESTRICT K_rth_rot1 = (cctki_dummy_int = &K_rth_rot1 - &K_rth_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rth_rot1")); \
CCTK_REAL * CCTK_RESTRICT K_rth_rot2 = (cctki_dummy_int = &K_rth_rot2 - &K_rth_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rth_rot2")); \
CCTK_REAL * CCTK_RESTRICT K_rth_rot3 = (cctki_dummy_int = &K_rth_rot3 - &K_rth_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_rth_rot3")); \
CCTK_REAL * CCTK_RESTRICT K_thp_rot1 = (cctki_dummy_int = &K_thp_rot1 - &K_thp_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_thp_rot1")); \
CCTK_REAL * CCTK_RESTRICT K_thp_rot2 = (cctki_dummy_int = &K_thp_rot2 - &K_thp_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_thp_rot2")); \
CCTK_REAL * CCTK_RESTRICT K_thp_rot3 = (cctki_dummy_int = &K_thp_rot3 - &K_thp_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_thp_rot3")); \
CCTK_REAL * CCTK_RESTRICT K_thth_rot1 = (cctki_dummy_int = &K_thth_rot1 - &K_thth_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_thth_rot1")); \
CCTK_REAL * CCTK_RESTRICT K_thth_rot2 = (cctki_dummy_int = &K_thth_rot2 - &K_thth_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_thth_rot2")); \
CCTK_REAL * CCTK_RESTRICT K_thth_rot3 = (cctki_dummy_int = &K_thth_rot3 - &K_thth_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "K_thth_rot3")); \
CCTK_REAL * CCTK_RESTRICT M0_AH_VolInt = (cctki_dummy_int = &M0_AH_VolInt - &M0_AH_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_AH_VolInt")); \
CCTK_REAL * CCTK_RESTRICT M0_VolInt = (cctki_dummy_int = &M0_VolInt - &M0_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_VolInt")); \
CCTK_REAL * CCTK_RESTRICT M0_escape100M = (cctki_dummy_int = &M0_escape100M - &M0_escape100M, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_escape100M")); \
CCTK_REAL * CCTK_RESTRICT M0_escape30M = (cctki_dummy_int = &M0_escape30M - &M0_escape30M, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_escape30M")); \
CCTK_REAL * CCTK_RESTRICT M0_escape50M = (cctki_dummy_int = &M0_escape50M - &M0_escape50M, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_escape50M")); \
CCTK_REAL * CCTK_RESTRICT M0_escape70M = (cctki_dummy_int = &M0_escape70M - &M0_escape70M, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_escape70M")); \
CCTK_REAL * CCTK_RESTRICT M0_horiz_VolInt = (cctki_dummy_int = &M0_horiz_VolInt - &M0_horiz_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_horiz_VolInt")); \
CCTK_REAL * CCTK_RESTRICT M0_r1_VolInt = (cctki_dummy_int = &M0_r1_VolInt - &M0_r1_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_r1_VolInt")); \
CCTK_REAL * CCTK_RESTRICT M0_r2_VolInt = (cctki_dummy_int = &M0_r2_VolInt - &M0_r2_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_r2_VolInt")); \
CCTK_REAL * CCTK_RESTRICT M0_r3_VolInt = (cctki_dummy_int = &M0_r3_VolInt - &M0_r3_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "M0_r3_VolInt")); \
CCTK_REAL * CCTK_RESTRICT MNorm = (cctki_dummy_int = &MNorm - &MNorm, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "MNorm")); \
CCTK_REAL * CCTK_RESTRICT MONOPOLE = (cctki_dummy_int = &MONOPOLE - &MONOPOLE, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "MONOPOLE")); \
CCTK_REAL * CCTK_RESTRICT MRsx = (cctki_dummy_int = &MRsx - &MRsx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "MRsx")); \
CCTK_REAL * CCTK_RESTRICT MRsy = (cctki_dummy_int = &MRsy - &MRsy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "MRsy")); \
CCTK_REAL * CCTK_RESTRICT MRsz = (cctki_dummy_int = &MRsz - &MRsz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "MRsz")); \
CCTK_REAL * CCTK_RESTRICT M_ADM_VolInt = (cctki_dummy_int = &M_ADM_VolInt - &M_ADM_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "M_ADM_VolInt")); \
CCTK_REAL * CCTK_RESTRICT M_constraint = (cctki_dummy_int = &M_constraint - &M_constraint, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "M_constraint")); \
CCTK_REAL * CCTK_RESTRICT M_constraint_inner = (cctki_dummy_int = &M_constraint_inner - &M_constraint_inner, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "M_constraint_inner")); \
CCTK_REAL * CCTK_RESTRICT Minternal_VolInt = (cctki_dummy_int = &Minternal_VolInt - &Minternal_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "Minternal_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Minternal_cold_VolInt = (cctki_dummy_int = &Minternal_cold_VolInt - &Minternal_cold_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "Minternal_cold_VolInt")); \
CCTK_REAL * CCTK_RESTRICT NPphi0im = (cctki_dummy_int = &NPphi0im - &NPphi0im, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "NPphi0im")); \
CCTK_REAL * CCTK_RESTRICT NPphi0im_p = (cctki_dummy_int = &NPphi0im_p - &NPphi0im_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "NPphi0im")); \
CCTK_REAL * CCTK_RESTRICT NPphi0im_p_p = (cctki_dummy_int = &NPphi0im_p_p - &NPphi0im_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "NPphi0im")); \
CCTK_REAL * CCTK_RESTRICT NPphi0re = (cctki_dummy_int = &NPphi0re - &NPphi0re, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "NPphi0re")); \
CCTK_REAL * CCTK_RESTRICT NPphi0re_p = (cctki_dummy_int = &NPphi0re_p - &NPphi0re_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "NPphi0re")); \
CCTK_REAL * CCTK_RESTRICT NPphi0re_p_p = (cctki_dummy_int = &NPphi0re_p_p - &NPphi0re_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "NPphi0re")); \
CCTK_REAL * CCTK_RESTRICT NPphi2im = (cctki_dummy_int = &NPphi2im - &NPphi2im, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "NPphi2im")); \
CCTK_REAL * CCTK_RESTRICT NPphi2im_p = (cctki_dummy_int = &NPphi2im_p - &NPphi2im_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "NPphi2im")); \
CCTK_REAL * CCTK_RESTRICT NPphi2im_p_p = (cctki_dummy_int = &NPphi2im_p_p - &NPphi2im_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "NPphi2im")); \
CCTK_REAL * CCTK_RESTRICT NPphi2re = (cctki_dummy_int = &NPphi2re - &NPphi2re, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "NPphi2re")); \
CCTK_REAL * CCTK_RESTRICT NPphi2re_p = (cctki_dummy_int = &NPphi2re_p - &NPphi2re_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "NPphi2re")); \
CCTK_REAL * CCTK_RESTRICT NPphi2re_p_p = (cctki_dummy_int = &NPphi2re_p_p - &NPphi2re_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "NPphi2re")); \
CCTK_REAL * CCTK_RESTRICT OS_surf_rad = (cctki_dummy_int = &OS_surf_rad - &OS_surf_rad, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "OS_surf_rad")); \
CCTK_REAL * CCTK_RESTRICT P = (cctki_dummy_int = &P - &P, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P")); \
CCTK_REAL * CCTK_RESTRICT P_cld = (cctki_dummy_int = &P_cld - &P_cld, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_cld")); \
CCTK_REAL * CCTK_RESTRICT P_constraint = (cctki_dummy_int = &P_constraint - &P_constraint, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "P_constraint")); \
CCTK_REAL * CCTK_RESTRICT P_constraint_inner = (cctki_dummy_int = &P_constraint_inner - &P_constraint_inner, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "P_constraint_inner")); \
CCTK_REAL * CCTK_RESTRICT P_floor = (cctki_dummy_int = &P_floor - &P_floor, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_floor")); \
CCTK_REAL * CCTK_RESTRICT P_radxx = (cctki_dummy_int = &P_radxx - &P_radxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxx")); \
CCTK_REAL * CCTK_RESTRICT P_radxx_nue = (cctki_dummy_int = &P_radxx_nue - &P_radxx_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxx_nue")); \
CCTK_REAL * CCTK_RESTRICT P_radxx_nux = (cctki_dummy_int = &P_radxx_nux - &P_radxx_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxx_nux")); \
CCTK_REAL * CCTK_RESTRICT P_radxy = (cctki_dummy_int = &P_radxy - &P_radxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxy")); \
CCTK_REAL * CCTK_RESTRICT P_radxy_nue = (cctki_dummy_int = &P_radxy_nue - &P_radxy_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxy_nue")); \
CCTK_REAL * CCTK_RESTRICT P_radxy_nux = (cctki_dummy_int = &P_radxy_nux - &P_radxy_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxy_nux")); \
CCTK_REAL * CCTK_RESTRICT P_radxz = (cctki_dummy_int = &P_radxz - &P_radxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxz")); \
CCTK_REAL * CCTK_RESTRICT P_radxz_nue = (cctki_dummy_int = &P_radxz_nue - &P_radxz_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxz_nue")); \
CCTK_REAL * CCTK_RESTRICT P_radxz_nux = (cctki_dummy_int = &P_radxz_nux - &P_radxz_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radxz_nux")); \
CCTK_REAL * CCTK_RESTRICT P_radyy = (cctki_dummy_int = &P_radyy - &P_radyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radyy")); \
CCTK_REAL * CCTK_RESTRICT P_radyy_nue = (cctki_dummy_int = &P_radyy_nue - &P_radyy_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radyy_nue")); \
CCTK_REAL * CCTK_RESTRICT P_radyy_nux = (cctki_dummy_int = &P_radyy_nux - &P_radyy_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radyy_nux")); \
CCTK_REAL * CCTK_RESTRICT P_radyz = (cctki_dummy_int = &P_radyz - &P_radyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radyz")); \
CCTK_REAL * CCTK_RESTRICT P_radyz_nue = (cctki_dummy_int = &P_radyz_nue - &P_radyz_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radyz_nue")); \
CCTK_REAL * CCTK_RESTRICT P_radyz_nux = (cctki_dummy_int = &P_radyz_nux - &P_radyz_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radyz_nux")); \
CCTK_REAL * CCTK_RESTRICT P_radzz = (cctki_dummy_int = &P_radzz - &P_radzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radzz")); \
CCTK_REAL * CCTK_RESTRICT P_radzz_nue = (cctki_dummy_int = &P_radzz_nue - &P_radzz_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radzz_nue")); \
CCTK_REAL * CCTK_RESTRICT P_radzz_nux = (cctki_dummy_int = &P_radzz_nux - &P_radzz_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_radzz_nux")); \
CCTK_REAL * CCTK_RESTRICT P_tab = (cctki_dummy_int = &P_tab - &P_tab, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_tab")); \
CCTK_REAL * CCTK_RESTRICT P_thermal = (cctki_dummy_int = &P_thermal - &P_thermal, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "P_thermal")); \
CCTK_REAL * CCTK_RESTRICT PhysicalRadius = (cctki_dummy_int = &PhysicalRadius - &PhysicalRadius, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "FISHEYE", "PhysicalRadius")); \
CCTK_REAL * CCTK_RESTRICT Pl = (cctki_dummy_int = &Pl - &Pl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Pl")); \
CCTK_REAL * CCTK_RESTRICT Pr = (cctki_dummy_int = &Pr - &Pr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Pr")); \
CCTK_REAL * CCTK_RESTRICT PsiNorm = (cctki_dummy_int = &PsiNorm - &PsiNorm, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "PsiNorm")); \
CCTK_REAL * CCTK_RESTRICT PsiRes = (cctki_dummy_int = &PsiRes - &PsiRes, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "PsiRes")); \
CCTK_REAL * CCTK_RESTRICT PsiTau = (cctki_dummy_int = &PsiTau - &PsiTau, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "PsiTau")); \
CCTK_REAL * CCTK_RESTRICT Pvec = (cctki_dummy_int = &Pvec - &Pvec, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Pvec")); \
CCTK_REAL * CCTK_RESTRICT RadiusDerivative = (cctki_dummy_int = &RadiusDerivative - &RadiusDerivative, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "FISHEYE", "RadiusDerivative")); \
CCTK_REAL * CCTK_RESTRICT RadiusDerivative2 = (cctki_dummy_int = &RadiusDerivative2 - &RadiusDerivative2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "FISHEYE", "RadiusDerivative2")); \
CCTK_REAL * CCTK_RESTRICT Rxx = (cctki_dummy_int = &Rxx - &Rxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Rxx")); \
CCTK_REAL * CCTK_RESTRICT Rxy = (cctki_dummy_int = &Rxy - &Rxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Rxy")); \
CCTK_REAL * CCTK_RESTRICT Rxz = (cctki_dummy_int = &Rxz - &Rxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Rxz")); \
CCTK_REAL * CCTK_RESTRICT Ryy = (cctki_dummy_int = &Ryy - &Ryy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Ryy")); \
CCTK_REAL * CCTK_RESTRICT Ryz = (cctki_dummy_int = &Ryz - &Ryz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Ryz")); \
CCTK_REAL * CCTK_RESTRICT Rzz = (cctki_dummy_int = &Rzz - &Rzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Rzz")); \
CCTK_REAL * CCTK_RESTRICT S = (cctki_dummy_int = &S - &S, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "S")); \
CCTK_REAL * CCTK_RESTRICT SPx = (cctki_dummy_int = &SPx - &SPx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "SPx")); \
CCTK_REAL * CCTK_RESTRICT SPx_p = (cctki_dummy_int = &SPx_p - &SPx_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "SPx")); \
CCTK_REAL * CCTK_RESTRICT SPx_p_p = (cctki_dummy_int = &SPx_p_p - &SPx_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "SPx")); \
CCTK_REAL * CCTK_RESTRICT SPy = (cctki_dummy_int = &SPy - &SPy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "SPy")); \
CCTK_REAL * CCTK_RESTRICT SPy_p = (cctki_dummy_int = &SPy_p - &SPy_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "SPy")); \
CCTK_REAL * CCTK_RESTRICT SPy_p_p = (cctki_dummy_int = &SPy_p_p - &SPy_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "SPy")); \
CCTK_REAL * CCTK_RESTRICT SPz = (cctki_dummy_int = &SPz - &SPz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "SPz")); \
CCTK_REAL * CCTK_RESTRICT SPz_p = (cctki_dummy_int = &SPz_p - &SPz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "SPz")); \
CCTK_REAL * CCTK_RESTRICT SPz_p_p = (cctki_dummy_int = &SPz_p_p - &SPz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "SPz")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x = (cctki_dummy_int = &S_rad_x - &S_rad_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_x")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_p = (cctki_dummy_int = &S_rad_x_p - &S_rad_x_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_x")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_p_p = (cctki_dummy_int = &S_rad_x_p_p - &S_rad_x_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_x")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_nue = (cctki_dummy_int = &S_rad_x_nue - &S_rad_x_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_x_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_nue_p = (cctki_dummy_int = &S_rad_x_nue_p - &S_rad_x_nue_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_x_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_nue_p_p = (cctki_dummy_int = &S_rad_x_nue_p_p - &S_rad_x_nue_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_x_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_nue_rhs = (cctki_dummy_int = &S_rad_x_nue_rhs - &S_rad_x_nue_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_x_nue_rhs")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_nux = (cctki_dummy_int = &S_rad_x_nux - &S_rad_x_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_x_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_nux_p = (cctki_dummy_int = &S_rad_x_nux_p - &S_rad_x_nux_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_x_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_nux_p_p = (cctki_dummy_int = &S_rad_x_nux_p_p - &S_rad_x_nux_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_x_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_nux_rhs = (cctki_dummy_int = &S_rad_x_nux_rhs - &S_rad_x_nux_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_x_nux_rhs")); \
CCTK_REAL * CCTK_RESTRICT S_rad_x_rhs = (cctki_dummy_int = &S_rad_x_rhs - &S_rad_x_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_x_rhs")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y = (cctki_dummy_int = &S_rad_y - &S_rad_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_y")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_p = (cctki_dummy_int = &S_rad_y_p - &S_rad_y_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_y")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_p_p = (cctki_dummy_int = &S_rad_y_p_p - &S_rad_y_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_y")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_nue = (cctki_dummy_int = &S_rad_y_nue - &S_rad_y_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_y_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_nue_p = (cctki_dummy_int = &S_rad_y_nue_p - &S_rad_y_nue_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_y_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_nue_p_p = (cctki_dummy_int = &S_rad_y_nue_p_p - &S_rad_y_nue_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_y_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_nue_rhs = (cctki_dummy_int = &S_rad_y_nue_rhs - &S_rad_y_nue_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_y_nue_rhs")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_nux = (cctki_dummy_int = &S_rad_y_nux - &S_rad_y_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_y_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_nux_p = (cctki_dummy_int = &S_rad_y_nux_p - &S_rad_y_nux_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_y_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_nux_p_p = (cctki_dummy_int = &S_rad_y_nux_p_p - &S_rad_y_nux_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_y_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_nux_rhs = (cctki_dummy_int = &S_rad_y_nux_rhs - &S_rad_y_nux_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_y_nux_rhs")); \
CCTK_REAL * CCTK_RESTRICT S_rad_y_rhs = (cctki_dummy_int = &S_rad_y_rhs - &S_rad_y_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_y_rhs")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z = (cctki_dummy_int = &S_rad_z - &S_rad_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_z")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_p = (cctki_dummy_int = &S_rad_z_p - &S_rad_z_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_z")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_p_p = (cctki_dummy_int = &S_rad_z_p_p - &S_rad_z_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_z")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_nue = (cctki_dummy_int = &S_rad_z_nue - &S_rad_z_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_z_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_nue_p = (cctki_dummy_int = &S_rad_z_nue_p - &S_rad_z_nue_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_z_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_nue_p_p = (cctki_dummy_int = &S_rad_z_nue_p_p - &S_rad_z_nue_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_z_nue")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_nue_rhs = (cctki_dummy_int = &S_rad_z_nue_rhs - &S_rad_z_nue_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_z_nue_rhs")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_nux = (cctki_dummy_int = &S_rad_z_nux - &S_rad_z_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_z_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_nux_p = (cctki_dummy_int = &S_rad_z_nux_p - &S_rad_z_nux_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "S_rad_z_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_nux_p_p = (cctki_dummy_int = &S_rad_z_nux_p_p - &S_rad_z_nux_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "S_rad_z_nux")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_nux_rhs = (cctki_dummy_int = &S_rad_z_nux_rhs - &S_rad_z_nux_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_z_nux_rhs")); \
CCTK_REAL * CCTK_RESTRICT S_rad_z_rhs = (cctki_dummy_int = &S_rad_z_rhs - &S_rad_z_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "S_rad_z_rhs")); \
CCTK_REAL * CCTK_RESTRICT Sx = (cctki_dummy_int = &Sx - &Sx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Sx")); \
CCTK_REAL * CCTK_RESTRICT Sxx = (cctki_dummy_int = &Sxx - &Sxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Sxx")); \
CCTK_REAL * CCTK_RESTRICT Sxy = (cctki_dummy_int = &Sxy - &Sxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Sxy")); \
CCTK_REAL * CCTK_RESTRICT Sxz = (cctki_dummy_int = &Sxz - &Sxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Sxz")); \
CCTK_REAL * CCTK_RESTRICT Sy = (cctki_dummy_int = &Sy - &Sy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Sy")); \
CCTK_REAL * CCTK_RESTRICT Syy = (cctki_dummy_int = &Syy - &Syy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Syy")); \
CCTK_REAL * CCTK_RESTRICT Syz = (cctki_dummy_int = &Syz - &Syz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Syz")); \
CCTK_REAL * CCTK_RESTRICT Sz = (cctki_dummy_int = &Sz - &Sz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Sz")); \
CCTK_REAL * CCTK_RESTRICT Szz = (cctki_dummy_int = &Szz - &Szz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "Szz")); \
CCTK_REAL * CCTK_RESTRICT T_0x = (cctki_dummy_int = &T_0x - &T_0x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "T_0x")); \
CCTK_REAL * CCTK_RESTRICT T_0x_p = (cctki_dummy_int = &T_0x_p - &T_0x_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "T_0x")); \
CCTK_REAL * CCTK_RESTRICT T_0x_p_p = (cctki_dummy_int = &T_0x_p_p - &T_0x_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "T_0x")); \
CCTK_REAL * CCTK_RESTRICT T_0y = (cctki_dummy_int = &T_0y - &T_0y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "T_0y")); \
CCTK_REAL * CCTK_RESTRICT T_0y_p = (cctki_dummy_int = &T_0y_p - &T_0y_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "T_0y")); \
CCTK_REAL * CCTK_RESTRICT T_0y_p_p = (cctki_dummy_int = &T_0y_p_p - &T_0y_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "T_0y")); \
CCTK_REAL * CCTK_RESTRICT T_0z = (cctki_dummy_int = &T_0z - &T_0z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "EM_EXTRACTION", "T_0z")); \
CCTK_REAL * CCTK_RESTRICT T_0z_p = (cctki_dummy_int = &T_0z_p - &T_0z_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "EM_EXTRACTION", "T_0z")); \
CCTK_REAL * CCTK_RESTRICT T_0z_p_p = (cctki_dummy_int = &T_0z_p_p - &T_0z_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "EM_EXTRACTION", "T_0z")); \
CCTK_REAL * CCTK_RESTRICT T_VolInt = (cctki_dummy_int = &T_VolInt - &T_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "T_VolInt")); \
CCTK_REAL * CCTK_RESTRICT T_fluid = (cctki_dummy_int = &T_fluid - &T_fluid, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "T_fluid")); \
CCTK_REAL * CCTK_RESTRICT T_fluidle = (cctki_dummy_int = &T_fluidle - &T_fluidle, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "T_fluidle")); \
CCTK_REAL * CCTK_RESTRICT T_fluidr = (cctki_dummy_int = &T_fluidr - &T_fluidr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "T_fluidr")); \
CCTK_REAL * CCTK_RESTRICT Tem0_0_VolInt = (cctki_dummy_int = &Tem0_0_VolInt - &Tem0_0_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "Tem0_0_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Tem0_0_outsideBH_VolInt = (cctki_dummy_int = &Tem0_0_outsideBH_VolInt - &Tem0_0_outsideBH_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "Tem0_0_outsideBH_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Tfluid0_0_VolInt = (cctki_dummy_int = &Tfluid0_0_VolInt - &Tfluid0_0_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "Tfluid0_0_VolInt")); \
CCTK_REAL * CCTK_RESTRICT Tfluid0_0_outsideBH_VolInt = (cctki_dummy_int = &Tfluid0_0_outsideBH_VolInt - &Tfluid0_0_outsideBH_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "Tfluid0_0_outsideBH_VolInt")); \
CCTK_REAL * CCTK_RESTRICT VolIntegrand = (cctki_dummy_int = &VolIntegrand - &VolIntegrand, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "VolIntegrand")); \
CCTK_REAL * CCTK_RESTRICT VolIntegrand2 = (cctki_dummy_int = &VolIntegrand2 - &VolIntegrand2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "VolIntegrand2")); \
CCTK_REAL * CCTK_RESTRICT VolIntegrand3 = (cctki_dummy_int = &VolIntegrand3 - &VolIntegrand3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "VolIntegrand3")); \
CCTK_REAL * CCTK_RESTRICT VolIntegrand4 = (cctki_dummy_int = &VolIntegrand4 - &VolIntegrand4, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "VolIntegrand4")); \
CCTK_REAL * CCTK_RESTRICT Y_e = (cctki_dummy_int = &Y_e - &Y_e, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Y_e")); \
CCTK_REAL * CCTK_RESTRICT Y_el = (cctki_dummy_int = &Y_el - &Y_el, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Y_el")); \
CCTK_REAL * CCTK_RESTRICT Y_er = (cctki_dummy_int = &Y_er - &Y_er, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "Y_er")); \
CCTK_INT * CCTK_RESTRICT ah_centroid_iteration = (cctki_dummy_int = &ah_centroid_iteration - &ah_centroid_iteration, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_iteration[0]")); \
CCTK_INT * CCTK_RESTRICT ah_centroid_iteration_p = (cctki_dummy_int = &ah_centroid_iteration_p - &ah_centroid_iteration_p, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_iteration_p[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_centroid_t = (cctki_dummy_int = &ah_centroid_t - &ah_centroid_t, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_t[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_centroid_t_p = (cctki_dummy_int = &ah_centroid_t_p - &ah_centroid_t_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_t_p[0]")); \
CCTK_INT * CCTK_RESTRICT ah_centroid_valid = (cctki_dummy_int = &ah_centroid_valid - &ah_centroid_valid, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_valid[0]")); \
CCTK_INT * CCTK_RESTRICT ah_centroid_valid_p = (cctki_dummy_int = &ah_centroid_valid_p - &ah_centroid_valid_p, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_valid_p[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_centroid_x = (cctki_dummy_int = &ah_centroid_x - &ah_centroid_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_x[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_centroid_x_p = (cctki_dummy_int = &ah_centroid_x_p - &ah_centroid_x_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_x_p[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_centroid_y = (cctki_dummy_int = &ah_centroid_y - &ah_centroid_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_y[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_centroid_y_p = (cctki_dummy_int = &ah_centroid_y_p - &ah_centroid_y_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_y_p[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_centroid_z = (cctki_dummy_int = &ah_centroid_z - &ah_centroid_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_z[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_centroid_z_p = (cctki_dummy_int = &ah_centroid_z_p - &ah_centroid_z_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_centroid_z_p[0]")); \
CCTK_INT * CCTK_RESTRICT ah_found_flag = (cctki_dummy_int = &ah_found_flag - &ah_found_flag, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_found_flag[0]")); \
CCTK_INT * CCTK_RESTRICT ah_initial_find_flag = (cctki_dummy_int = &ah_initial_find_flag - &ah_initial_find_flag, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_initial_find_flag[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_origin_x = (cctki_dummy_int = &ah_origin_x - &ah_origin_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_origin_x[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_origin_y = (cctki_dummy_int = &ah_origin_y - &ah_origin_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_origin_y[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_origin_z = (cctki_dummy_int = &ah_origin_z - &ah_origin_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_origin_z[0]")); \
CCTK_REAL * CCTK_RESTRICT ah_radius = (cctki_dummy_int = &ah_radius - &ah_radius, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_radius[0]")); \
CCTK_INT * CCTK_RESTRICT ah_really_initial_find_flag = (cctki_dummy_int = &ah_really_initial_find_flag - &ah_really_initial_find_flag, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_really_initial_find_flag[0]")); \
CCTK_INT * CCTK_RESTRICT ah_search_flag = (cctki_dummy_int = &ah_search_flag - &ah_search_flag, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "AHFINDERDIRECT", "ah_search_flag[0]")); \
CCTK_REAL * CCTK_RESTRICT b_phi_VolInt = (cctki_dummy_int = &b_phi_VolInt - &b_phi_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "b_phi_VolInt")); \
CCTK_REAL * CCTK_RESTRICT bh_posn_x = (cctki_dummy_int = &bh_posn_x - &bh_posn_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "bh_posn_x")); \
CCTK_REAL * CCTK_RESTRICT bh_posn_y = (cctki_dummy_int = &bh_posn_y - &bh_posn_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "bh_posn_y")); \
CCTK_REAL * CCTK_RESTRICT bh_posn_z = (cctki_dummy_int = &bh_posn_z - &bh_posn_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "bh_posn_z")); \
CCTK_REAL * CCTK_RESTRICT bh_radius_z = (cctki_dummy_int = &bh_radius_z - &bh_radius_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "bh_radius_z")); \
CCTK_REAL * CCTK_RESTRICT brem_qee_VolInt = (cctki_dummy_int = &brem_qee_VolInt - &brem_qee_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "brem_qee_VolInt")); \
CCTK_REAL * CCTK_RESTRICT brem_qei_VolInt = (cctki_dummy_int = &brem_qei_VolInt - &brem_qei_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "brem_qei_VolInt")); \
CCTK_REAL * CCTK_RESTRICT chi = (cctki_dummy_int = &chi - &chi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "chi")); \
CCTK_REAL * CCTK_RESTRICT chi_p = (cctki_dummy_int = &chi_p - &chi_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "chi")); \
CCTK_REAL * CCTK_RESTRICT chi_p_p = (cctki_dummy_int = &chi_p_p - &chi_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "chi")); \
CCTK_REAL * CCTK_RESTRICT chi_rad = (cctki_dummy_int = &chi_rad - &chi_rad, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "chi_rad")); \
CCTK_REAL * CCTK_RESTRICT chi_rad_nue = (cctki_dummy_int = &chi_rad_nue - &chi_rad_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "chi_rad_nue")); \
CCTK_REAL * CCTK_RESTRICT chi_rad_nux = (cctki_dummy_int = &chi_rad_nux - &chi_rad_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "chi_rad_nux")); \
CCTK_REAL * CCTK_RESTRICT chi_rhs = (cctki_dummy_int = &chi_rhs - &chi_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "chi_rhs")); \
CCTK_REAL * CCTK_RESTRICT cmax = (cctki_dummy_int = &cmax - &cmax, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "cmax")); \
CCTK_REAL * CCTK_RESTRICT cmax_rad = (cctki_dummy_int = &cmax_rad - &cmax_rad, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "cmax_rad")); \
CCTK_REAL * CCTK_RESTRICT cmax_rad_nue = (cctki_dummy_int = &cmax_rad_nue - &cmax_rad_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "cmax_rad_nue")); \
CCTK_REAL * CCTK_RESTRICT cmax_rad_nux = (cctki_dummy_int = &cmax_rad_nux - &cmax_rad_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "cmax_rad_nux")); \
CCTK_REAL * CCTK_RESTRICT cmin = (cctki_dummy_int = &cmin - &cmin, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "cmin")); \
CCTK_REAL * CCTK_RESTRICT cmin_rad = (cctki_dummy_int = &cmin_rad - &cmin_rad, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "cmin_rad")); \
CCTK_REAL * CCTK_RESTRICT cmin_rad_nue = (cctki_dummy_int = &cmin_rad_nue - &cmin_rad_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "cmin_rad_nue")); \
CCTK_REAL * CCTK_RESTRICT cmin_rad_nux = (cctki_dummy_int = &cmin_rad_nux - &cmin_rad_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "cmin_rad_nux")); \
CCTK_REAL * CCTK_RESTRICT dBx_m = (cctki_dummy_int = &dBx_m - &dBx_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dBx_m")); \
CCTK_REAL * CCTK_RESTRICT dBy_m = (cctki_dummy_int = &dBy_m - &dBy_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dBy_m")); \
CCTK_REAL * CCTK_RESTRICT dBz_m = (cctki_dummy_int = &dBz_m - &dBz_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dBz_m")); \
CCTK_REAL * CCTK_RESTRICT dP_m = (cctki_dummy_int = &dP_m - &dP_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dP_m")); \
CCTK_REAL * CCTK_RESTRICT dT_fluid_m = (cctki_dummy_int = &dT_fluid_m - &dT_fluid_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dT_fluid_m")); \
CCTK_REAL * CCTK_RESTRICT ddrbrvec = (cctki_dummy_int = &ddrbrvec - &ddrbrvec, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "ddrbrvec")); \
CCTK_REAL * CCTK_RESTRICT density_modes_i1 = (cctki_dummy_int = &density_modes_i1 - &density_modes_i1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_i1")); \
CCTK_REAL * CCTK_RESTRICT density_modes_i2 = (cctki_dummy_int = &density_modes_i2 - &density_modes_i2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_i2")); \
CCTK_REAL * CCTK_RESTRICT density_modes_i3 = (cctki_dummy_int = &density_modes_i3 - &density_modes_i3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_i3")); \
CCTK_REAL * CCTK_RESTRICT density_modes_i4 = (cctki_dummy_int = &density_modes_i4 - &density_modes_i4, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_i4")); \
CCTK_REAL * CCTK_RESTRICT density_modes_i5 = (cctki_dummy_int = &density_modes_i5 - &density_modes_i5, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_i5")); \
CCTK_REAL * CCTK_RESTRICT density_modes_i6 = (cctki_dummy_int = &density_modes_i6 - &density_modes_i6, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_i6")); \
CCTK_REAL * CCTK_RESTRICT density_modes_r0 = (cctki_dummy_int = &density_modes_r0 - &density_modes_r0, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_r0")); \
CCTK_REAL * CCTK_RESTRICT density_modes_r1 = (cctki_dummy_int = &density_modes_r1 - &density_modes_r1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_r1")); \
CCTK_REAL * CCTK_RESTRICT density_modes_r2 = (cctki_dummy_int = &density_modes_r2 - &density_modes_r2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_r2")); \
CCTK_REAL * CCTK_RESTRICT density_modes_r3 = (cctki_dummy_int = &density_modes_r3 - &density_modes_r3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_r3")); \
CCTK_REAL * CCTK_RESTRICT density_modes_r4 = (cctki_dummy_int = &density_modes_r4 - &density_modes_r4, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_r4")); \
CCTK_REAL * CCTK_RESTRICT density_modes_r5 = (cctki_dummy_int = &density_modes_r5 - &density_modes_r5, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_r5")); \
CCTK_REAL * CCTK_RESTRICT density_modes_r6 = (cctki_dummy_int = &density_modes_r6 - &density_modes_r6, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "density_modes_r6")); \
CCTK_REAL * CCTK_RESTRICT div_beta = (cctki_dummy_int = &div_beta - &div_beta, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "div_beta")); \
CCTK_REAL * CCTK_RESTRICT drbrvec = (cctki_dummy_int = &drbrvec - &drbrvec, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "drbrvec")); \
CCTK_REAL * CCTK_RESTRICT drhoYe_m = (cctki_dummy_int = &drhoYe_m - &drhoYe_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "drhoYe_m")); \
CCTK_REAL * CCTK_RESTRICT drhoYe_m_x = (cctki_dummy_int = &drhoYe_m_x - &drhoYe_m_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "drhoYe_m_x")); \
CCTK_REAL * CCTK_RESTRICT drhoYe_m_xp1 = (cctki_dummy_int = &drhoYe_m_xp1 - &drhoYe_m_xp1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "drhoYe_m_xp1")); \
CCTK_REAL * CCTK_RESTRICT drho_b_m = (cctki_dummy_int = &drho_b_m - &drho_b_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "drho_b_m")); \
CCTK_REAL * CCTK_RESTRICT drho_b_m_x = (cctki_dummy_int = &drho_b_m_x - &drho_b_m_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "drho_b_m_x")); \
CCTK_REAL * CCTK_RESTRICT drho_b_m_xp1 = (cctki_dummy_int = &drho_b_m_xp1 - &drho_b_m_xp1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "drho_b_m_xp1")); \
CCTK_REAL * CCTK_RESTRICT dvx_m = (cctki_dummy_int = &dvx_m - &dvx_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dvx_m")); \
CCTK_REAL * CCTK_RESTRICT dvx_m_x = (cctki_dummy_int = &dvx_m_x - &dvx_m_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dvx_m_x")); \
CCTK_REAL * CCTK_RESTRICT dvx_m_xp1 = (cctki_dummy_int = &dvx_m_xp1 - &dvx_m_xp1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dvx_m_xp1")); \
CCTK_REAL * CCTK_RESTRICT dvy_m = (cctki_dummy_int = &dvy_m - &dvy_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dvy_m")); \
CCTK_REAL * CCTK_RESTRICT dvz_m = (cctki_dummy_int = &dvz_m - &dvz_m, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "dvz_m")); \
CCTK_REAL * CCTK_RESTRICT em_J_between_VolInt = (cctki_dummy_int = &em_J_between_VolInt - &em_J_between_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "em_J_between_VolInt")); \
CCTK_REAL * CCTK_RESTRICT em_energy2_VolInt = (cctki_dummy_int = &em_energy2_VolInt - &em_energy2_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "em_energy2_VolInt")); \
CCTK_REAL * CCTK_RESTRICT em_energy_VolInt = (cctki_dummy_int = &em_energy_VolInt - &em_energy_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "em_energy_VolInt")); \
CCTK_REAL * CCTK_RESTRICT em_energy_between_VolInt = (cctki_dummy_int = &em_energy_between_VolInt - &em_energy_between_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "em_energy_between_VolInt")); \
CCTK_REAL * CCTK_RESTRICT em_energy_outsideBH_VolInt = (cctki_dummy_int = &em_energy_outsideBH_VolInt - &em_energy_outsideBH_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "em_energy_outsideBH_VolInt")); \
CCTK_REAL * CCTK_RESTRICT em_energy_outsideradius1_VolInt = (cctki_dummy_int = &em_energy_outsideradius1_VolInt - &em_energy_outsideradius1_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "em_energy_outsideradius1_VolInt")); \
CCTK_REAL * CCTK_RESTRICT em_energy_outsideradius2_VolInt = (cctki_dummy_int = &em_energy_outsideradius2_VolInt - &em_energy_outsideradius2_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "em_energy_outsideradius2_VolInt")); \
CCTK_REAL * CCTK_RESTRICT emission_gf = (cctki_dummy_int = &emission_gf - &emission_gf, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "emission_gf")); \
CCTK_REAL * CCTK_RESTRICT emission_gf_nue = (cctki_dummy_int = &emission_gf_nue - &emission_gf_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "emission_gf_nue")); \
CCTK_REAL * CCTK_RESTRICT emission_gf_nux = (cctki_dummy_int = &emission_gf_nux - &emission_gf_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "emission_gf_nux")); \
CCTK_REAL * CCTK_RESTRICT eps_cld = (cctki_dummy_int = &eps_cld - &eps_cld, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "eps_cld")); \
CCTK_REAL * CCTK_RESTRICT eps_tab = (cctki_dummy_int = &eps_tab - &eps_tab, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "eps_tab")); \
CCTK_REAL * CCTK_RESTRICT eps_thermal = (cctki_dummy_int = &eps_thermal - &eps_thermal, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "eps_thermal")); \
CCTK_REAL * CCTK_RESTRICT eps_tot = (cctki_dummy_int = &eps_tot - &eps_tot, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "eps_tot")); \
CCTK_REAL * CCTK_RESTRICT eta_nue = (cctki_dummy_int = &eta_nue - &eta_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "eta_nue")); \
CCTK_INT * CCTK_RESTRICT excision_zone_gf = (cctki_dummy_int = &excision_zone_gf - &excision_zone_gf, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "EXCISION", "excision_zone_gf")); \
CCTK_REAL * CCTK_RESTRICT fluid_J_horiz_VolInt = (cctki_dummy_int = &fluid_J_horiz_VolInt - &fluid_J_horiz_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "fluid_J_horiz_VolInt")); \
CCTK_REAL * CCTK_RESTRICT fluid_J_r1_VolInt = (cctki_dummy_int = &fluid_J_r1_VolInt - &fluid_J_r1_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "fluid_J_r1_VolInt")); \
CCTK_REAL * CCTK_RESTRICT fluid_J_r2_VolInt = (cctki_dummy_int = &fluid_J_r2_VolInt - &fluid_J_r2_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "fluid_J_r2_VolInt")); \
CCTK_REAL * CCTK_RESTRICT fluid_J_r3_VolInt = (cctki_dummy_int = &fluid_J_r3_VolInt - &fluid_J_r3_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "fluid_J_r3_VolInt")); \
CCTK_REAL * CCTK_RESTRICT fluid_energy_horiz_VolInt = (cctki_dummy_int = &fluid_energy_horiz_VolInt - &fluid_energy_horiz_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "fluid_energy_horiz_VolInt")); \
CCTK_REAL * CCTK_RESTRICT fluid_energy_r1_VolInt = (cctki_dummy_int = &fluid_energy_r1_VolInt - &fluid_energy_r1_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "fluid_energy_r1_VolInt")); \
CCTK_REAL * CCTK_RESTRICT fluid_energy_r2_VolInt = (cctki_dummy_int = &fluid_energy_r2_VolInt - &fluid_energy_r2_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "fluid_energy_r2_VolInt")); \
CCTK_REAL * CCTK_RESTRICT fluid_energy_r3_VolInt = (cctki_dummy_int = &fluid_energy_r3_VolInt - &fluid_energy_r3_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "fluid_energy_r3_VolInt")); \
CCTK_REAL * CCTK_RESTRICT gamma_tab = (cctki_dummy_int = &gamma_tab - &gamma_tab, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gamma_tab")); \
CCTK_REAL * CCTK_RESTRICT gconx = (cctki_dummy_int = &gconx - &gconx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gconx")); \
CCTK_REAL * CCTK_RESTRICT gcony = (cctki_dummy_int = &gcony - &gcony, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gcony")); \
CCTK_REAL * CCTK_RESTRICT gconz = (cctki_dummy_int = &gconz - &gconz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gconz")); \
CCTK_REAL * CCTK_RESTRICT gupxx = (cctki_dummy_int = &gupxx - &gupxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gupxx")); \
CCTK_REAL * CCTK_RESTRICT gupxx_f = (cctki_dummy_int = &gupxx_f - &gupxx_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gupxx_f")); \
CCTK_REAL * CCTK_RESTRICT gupxy = (cctki_dummy_int = &gupxy - &gupxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gupxy")); \
CCTK_REAL * CCTK_RESTRICT gupxy_f = (cctki_dummy_int = &gupxy_f - &gupxy_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gupxy_f")); \
CCTK_REAL * CCTK_RESTRICT gupxz = (cctki_dummy_int = &gupxz - &gupxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gupxz")); \
CCTK_REAL * CCTK_RESTRICT gupxz_f = (cctki_dummy_int = &gupxz_f - &gupxz_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gupxz_f")); \
CCTK_REAL * CCTK_RESTRICT gupyy = (cctki_dummy_int = &gupyy - &gupyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gupyy")); \
CCTK_REAL * CCTK_RESTRICT gupyy_f = (cctki_dummy_int = &gupyy_f - &gupyy_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gupyy_f")); \
CCTK_REAL * CCTK_RESTRICT gupyz = (cctki_dummy_int = &gupyz - &gupyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gupyz")); \
CCTK_REAL * CCTK_RESTRICT gupyz_f = (cctki_dummy_int = &gupyz_f - &gupyz_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gupyz_f")); \
CCTK_REAL * CCTK_RESTRICT gupzz = (cctki_dummy_int = &gupzz - &gupzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gupzz")); \
CCTK_REAL * CCTK_RESTRICT gupzz_f = (cctki_dummy_int = &gupzz_f - &gupzz_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gupzz_f")); \
CCTK_REAL * CCTK_RESTRICT gxx = (cctki_dummy_int = &gxx - &gxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxx")); \
CCTK_REAL * CCTK_RESTRICT gxx_p = (cctki_dummy_int = &gxx_p - &gxx_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "gxx")); \
CCTK_REAL * CCTK_RESTRICT gxx_p_p = (cctki_dummy_int = &gxx_p_p - &gxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "gxx")); \
CCTK_REAL * CCTK_RESTRICT gxx_f = (cctki_dummy_int = &gxx_f - &gxx_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gxx_f")); \
CCTK_REAL * CCTK_RESTRICT gxx_rhs = (cctki_dummy_int = &gxx_rhs - &gxx_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxx_rhs")); \
CCTK_REAL * CCTK_RESTRICT gxxx = (cctki_dummy_int = &gxxx - &gxxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxxx")); \
CCTK_REAL * CCTK_RESTRICT gxxy = (cctki_dummy_int = &gxxy - &gxxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxxy")); \
CCTK_REAL * CCTK_RESTRICT gxxz = (cctki_dummy_int = &gxxz - &gxxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxxz")); \
CCTK_REAL * CCTK_RESTRICT gxy = (cctki_dummy_int = &gxy - &gxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxy")); \
CCTK_REAL * CCTK_RESTRICT gxy_p = (cctki_dummy_int = &gxy_p - &gxy_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "gxy")); \
CCTK_REAL * CCTK_RESTRICT gxy_p_p = (cctki_dummy_int = &gxy_p_p - &gxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "gxy")); \
CCTK_REAL * CCTK_RESTRICT gxy_f = (cctki_dummy_int = &gxy_f - &gxy_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gxy_f")); \
CCTK_REAL * CCTK_RESTRICT gxy_rhs = (cctki_dummy_int = &gxy_rhs - &gxy_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxy_rhs")); \
CCTK_REAL * CCTK_RESTRICT gxyx = (cctki_dummy_int = &gxyx - &gxyx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxyx")); \
CCTK_REAL * CCTK_RESTRICT gxyy = (cctki_dummy_int = &gxyy - &gxyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxyy")); \
CCTK_REAL * CCTK_RESTRICT gxyz = (cctki_dummy_int = &gxyz - &gxyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxyz")); \
CCTK_REAL * CCTK_RESTRICT gxz = (cctki_dummy_int = &gxz - &gxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxz")); \
CCTK_REAL * CCTK_RESTRICT gxz_p = (cctki_dummy_int = &gxz_p - &gxz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "gxz")); \
CCTK_REAL * CCTK_RESTRICT gxz_p_p = (cctki_dummy_int = &gxz_p_p - &gxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "gxz")); \
CCTK_REAL * CCTK_RESTRICT gxz_f = (cctki_dummy_int = &gxz_f - &gxz_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gxz_f")); \
CCTK_REAL * CCTK_RESTRICT gxz_rhs = (cctki_dummy_int = &gxz_rhs - &gxz_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxz_rhs")); \
CCTK_REAL * CCTK_RESTRICT gxzx = (cctki_dummy_int = &gxzx - &gxzx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxzx")); \
CCTK_REAL * CCTK_RESTRICT gxzy = (cctki_dummy_int = &gxzy - &gxzy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxzy")); \
CCTK_REAL * CCTK_RESTRICT gxzz = (cctki_dummy_int = &gxzz - &gxzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gxzz")); \
CCTK_REAL * CCTK_RESTRICT gyy = (cctki_dummy_int = &gyy - &gyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyy")); \
CCTK_REAL * CCTK_RESTRICT gyy_p = (cctki_dummy_int = &gyy_p - &gyy_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "gyy")); \
CCTK_REAL * CCTK_RESTRICT gyy_p_p = (cctki_dummy_int = &gyy_p_p - &gyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "gyy")); \
CCTK_REAL * CCTK_RESTRICT gyy_f = (cctki_dummy_int = &gyy_f - &gyy_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gyy_f")); \
CCTK_REAL * CCTK_RESTRICT gyy_rhs = (cctki_dummy_int = &gyy_rhs - &gyy_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyy_rhs")); \
CCTK_REAL * CCTK_RESTRICT gyyx = (cctki_dummy_int = &gyyx - &gyyx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyyx")); \
CCTK_REAL * CCTK_RESTRICT gyyy = (cctki_dummy_int = &gyyy - &gyyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyyy")); \
CCTK_REAL * CCTK_RESTRICT gyyz = (cctki_dummy_int = &gyyz - &gyyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyyz")); \
CCTK_REAL * CCTK_RESTRICT gyz = (cctki_dummy_int = &gyz - &gyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyz")); \
CCTK_REAL * CCTK_RESTRICT gyz_p = (cctki_dummy_int = &gyz_p - &gyz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "gyz")); \
CCTK_REAL * CCTK_RESTRICT gyz_p_p = (cctki_dummy_int = &gyz_p_p - &gyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "gyz")); \
CCTK_REAL * CCTK_RESTRICT gyz_f = (cctki_dummy_int = &gyz_f - &gyz_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gyz_f")); \
CCTK_REAL * CCTK_RESTRICT gyz_rhs = (cctki_dummy_int = &gyz_rhs - &gyz_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyz_rhs")); \
CCTK_REAL * CCTK_RESTRICT gyzx = (cctki_dummy_int = &gyzx - &gyzx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyzx")); \
CCTK_REAL * CCTK_RESTRICT gyzy = (cctki_dummy_int = &gyzy - &gyzy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyzy")); \
CCTK_REAL * CCTK_RESTRICT gyzz = (cctki_dummy_int = &gyzz - &gyzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gyzz")); \
CCTK_REAL * CCTK_RESTRICT gzz = (cctki_dummy_int = &gzz - &gzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gzz")); \
CCTK_REAL * CCTK_RESTRICT gzz_p = (cctki_dummy_int = &gzz_p - &gzz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "gzz")); \
CCTK_REAL * CCTK_RESTRICT gzz_p_p = (cctki_dummy_int = &gzz_p_p - &gzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "gzz")); \
CCTK_REAL * CCTK_RESTRICT gzz_f = (cctki_dummy_int = &gzz_f - &gzz_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "gzz_f")); \
CCTK_REAL * CCTK_RESTRICT gzz_rhs = (cctki_dummy_int = &gzz_rhs - &gzz_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gzz_rhs")); \
CCTK_REAL * CCTK_RESTRICT gzzx = (cctki_dummy_int = &gzzx - &gzzx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gzzx")); \
CCTK_REAL * CCTK_RESTRICT gzzy = (cctki_dummy_int = &gzzy - &gzzy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gzzy")); \
CCTK_REAL * CCTK_RESTRICT gzzz = (cctki_dummy_int = &gzzz - &gzzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "gzzz")); \
CCTK_REAL * CCTK_RESTRICT h = (cctki_dummy_int = &h - &h, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "h")); \
CCTK_REAL * CCTK_RESTRICT h_p = (cctki_dummy_int = &h_p - &h_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "h_p")); \
CCTK_REAL * CCTK_RESTRICT half_b2_u0_VolInt = (cctki_dummy_int = &half_b2_u0_VolInt - &half_b2_u0_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "half_b2_u0_VolInt")); \
CCTK_REAL * CCTK_RESTRICT half_b2_u0_outsideBH_VolInt = (cctki_dummy_int = &half_b2_u0_outsideBH_VolInt - &half_b2_u0_outsideBH_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "half_b2_u0_outsideBH_VolInt")); \
CCTK_INT * CCTK_RESTRICT have_global_bdry_max = (cctki_dummy_int = &have_global_bdry_max - &have_global_bdry_max, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "have_global_bdry_max")); \
CCTK_INT * CCTK_RESTRICT have_global_bdry_min = (cctki_dummy_int = &have_global_bdry_min - &have_global_bdry_min, (CCTK_INT *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "have_global_bdry_min")); \
CCTK_REAL * CCTK_RESTRICT int_momentsi = (cctki_dummy_int = &int_momentsi - &int_momentsi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "int_momentsi")); \
CCTK_REAL * CCTK_RESTRICT int_momentsr = (cctki_dummy_int = &int_momentsr - &int_momentsr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "int_momentsr")); \
CCTK_REAL * CCTK_RESTRICT k_tab = (cctki_dummy_int = &k_tab - &k_tab, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "k_tab")); \
CCTK_REAL * CCTK_RESTRICT ka_gf = (cctki_dummy_int = &ka_gf - &ka_gf, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "ka_gf")); \
CCTK_REAL * CCTK_RESTRICT ka_gf_nue = (cctki_dummy_int = &ka_gf_nue - &ka_gf_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "ka_gf_nue")); \
CCTK_REAL * CCTK_RESTRICT ka_gf_nux = (cctki_dummy_int = &ka_gf_nux - &ka_gf_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "ka_gf_nux")); \
CCTK_REAL * CCTK_RESTRICT ks_gf = (cctki_dummy_int = &ks_gf - &ks_gf, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "ks_gf")); \
CCTK_REAL * CCTK_RESTRICT ks_gf_nue = (cctki_dummy_int = &ks_gf_nue - &ks_gf_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "ks_gf_nue")); \
CCTK_REAL * CCTK_RESTRICT ks_gf_nux = (cctki_dummy_int = &ks_gf_nux - &ks_gf_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "ks_gf_nux")); \
CCTK_REAL * CCTK_RESTRICT kxx = (cctki_dummy_int = &kxx - &kxx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "kxx")); \
CCTK_REAL * CCTK_RESTRICT kxy = (cctki_dummy_int = &kxy - &kxy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "kxy")); \
CCTK_REAL * CCTK_RESTRICT kxz = (cctki_dummy_int = &kxz - &kxz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "kxz")); \
CCTK_REAL * CCTK_RESTRICT kyy = (cctki_dummy_int = &kyy - &kyy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "kyy")); \
CCTK_REAL * CCTK_RESTRICT kyz = (cctki_dummy_int = &kyz - &kyz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "kyz")); \
CCTK_REAL * CCTK_RESTRICT kzz = (cctki_dummy_int = &kzz - &kzz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "kzz")); \
CCTK_REAL * CCTK_RESTRICT lapm1 = (cctki_dummy_int = &lapm1 - &lapm1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "LAPSE", "lapm1")); \
CCTK_REAL * CCTK_RESTRICT lapm1_p = (cctki_dummy_int = &lapm1_p - &lapm1_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "LAPSE", "lapm1")); \
CCTK_REAL * CCTK_RESTRICT lapm1_p_p = (cctki_dummy_int = &lapm1_p_p - &lapm1_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "LAPSE", "lapm1")); \
CCTK_REAL * CCTK_RESTRICT lapm1_f = (cctki_dummy_int = &lapm1_f - &lapm1_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "lapm1_f")); \
CCTK_REAL * CCTK_RESTRICT lapm1_rhs = (cctki_dummy_int = &lapm1_rhs - &lapm1_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "LAPSE", "lapm1_rhs")); \
CCTK_REAL * CCTK_RESTRICT lapm1_rot1 = (cctki_dummy_int = &lapm1_rot1 - &lapm1_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "lapm1_rot1")); \
CCTK_REAL * CCTK_RESTRICT lapm1_rot2 = (cctki_dummy_int = &lapm1_rot2 - &lapm1_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "lapm1_rot2")); \
CCTK_REAL * CCTK_RESTRICT lapm1_rot3 = (cctki_dummy_int = &lapm1_rot3 - &lapm1_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "lapm1_rot3")); \
CCTK_REAL * CCTK_RESTRICT lapset = (cctki_dummy_int = &lapset - &lapset, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "LAPSE", "lapset")); \
CCTK_REAL * CCTK_RESTRICT lapset_p = (cctki_dummy_int = &lapset_p - &lapset_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "LAPSE", "lapset")); \
CCTK_REAL * CCTK_RESTRICT lapset_p_p = (cctki_dummy_int = &lapset_p_p - &lapset_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "LAPSE", "lapset")); \
CCTK_REAL * CCTK_RESTRICT lapset_rhs = (cctki_dummy_int = &lapset_rhs - &lapset_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "LAPSE", "lapset_rhs")); \
CCTK_REAL * CCTK_RESTRICT lapset_timederiv = (cctki_dummy_int = &lapset_timederiv - &lapset_timederiv, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "LAPSE", "lapset_timederiv")); \
CCTK_REAL * CCTK_RESTRICT lapsex = (cctki_dummy_int = &lapsex - &lapsex, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "LAPSE", "lapsex")); \
CCTK_REAL * CCTK_RESTRICT lapsey = (cctki_dummy_int = &lapsey - &lapsey, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "LAPSE", "lapsey")); \
CCTK_REAL * CCTK_RESTRICT lapsez = (cctki_dummy_int = &lapsez - &lapsez, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "LAPSE", "lapsez")); \
CCTK_REAL * CCTK_RESTRICT mass_star1 = (cctki_dummy_int = &mass_star1 - &mass_star1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "mass_star1")); \
CCTK_REAL * CCTK_RESTRICT mass_star2 = (cctki_dummy_int = &mass_star2 - &mass_star2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MOVINGBOX", "mass_star2")); \
CCTK_REAL * CCTK_RESTRICT mhd_chi_line = (cctki_dummy_int = &mhd_chi_line - &mhd_chi_line, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_chi_line")); \
CCTK_REAL * CCTK_RESTRICT mhd_chi_line_p = (cctki_dummy_int = &mhd_chi_line_p - &mhd_chi_line_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "mhd_chi_line")); \
CCTK_REAL * CCTK_RESTRICT mhd_chi_line_p_p = (cctki_dummy_int = &mhd_chi_line_p_p - &mhd_chi_line_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "mhd_chi_line")); \
CCTK_REAL * CCTK_RESTRICT mhd_chi_line_rhs = (cctki_dummy_int = &mhd_chi_line_rhs - &mhd_chi_line_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_chi_line_rhs")); \
CCTK_REAL * CCTK_RESTRICT mhd_psi_line = (cctki_dummy_int = &mhd_psi_line - &mhd_psi_line, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_psi_line")); \
CCTK_REAL * CCTK_RESTRICT mhd_psi_line_p = (cctki_dummy_int = &mhd_psi_line_p - &mhd_psi_line_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "mhd_psi_line")); \
CCTK_REAL * CCTK_RESTRICT mhd_psi_line_p_p = (cctki_dummy_int = &mhd_psi_line_p_p - &mhd_psi_line_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "mhd_psi_line")); \
CCTK_REAL * CCTK_RESTRICT mhd_psi_line_rhs = (cctki_dummy_int = &mhd_psi_line_rhs - &mhd_psi_line_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_psi_line_rhs")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_x = (cctki_dummy_int = &mhd_st_x - &mhd_st_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_st_x")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_x_p = (cctki_dummy_int = &mhd_st_x_p - &mhd_st_x_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "mhd_st_x")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_x_p_p = (cctki_dummy_int = &mhd_st_x_p_p - &mhd_st_x_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "mhd_st_x")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_x_rhs = (cctki_dummy_int = &mhd_st_x_rhs - &mhd_st_x_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_st_x_rhs")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_y = (cctki_dummy_int = &mhd_st_y - &mhd_st_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_st_y")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_y_p = (cctki_dummy_int = &mhd_st_y_p - &mhd_st_y_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "mhd_st_y")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_y_p_p = (cctki_dummy_int = &mhd_st_y_p_p - &mhd_st_y_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "mhd_st_y")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_y_rhs = (cctki_dummy_int = &mhd_st_y_rhs - &mhd_st_y_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_st_y_rhs")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_z = (cctki_dummy_int = &mhd_st_z - &mhd_st_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_st_z")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_z_p = (cctki_dummy_int = &mhd_st_z_p - &mhd_st_z_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "mhd_st_z")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_z_p_p = (cctki_dummy_int = &mhd_st_z_p_p - &mhd_st_z_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "mhd_st_z")); \
CCTK_REAL * CCTK_RESTRICT mhd_st_z_rhs = (cctki_dummy_int = &mhd_st_z_rhs - &mhd_st_z_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_st_z_rhs")); \
CCTK_REAL * CCTK_RESTRICT mhd_u_chi = (cctki_dummy_int = &mhd_u_chi - &mhd_u_chi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_u_chi")); \
CCTK_REAL * CCTK_RESTRICT mhd_u_chi_p = (cctki_dummy_int = &mhd_u_chi_p - &mhd_u_chi_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "mhd_u_chi")); \
CCTK_REAL * CCTK_RESTRICT mhd_u_chi_p_p = (cctki_dummy_int = &mhd_u_chi_p_p - &mhd_u_chi_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "mhd_u_chi")); \
CCTK_REAL * CCTK_RESTRICT mhd_u_chi_rhs = (cctki_dummy_int = &mhd_u_chi_rhs - &mhd_u_chi_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_u_chi_rhs")); \
CCTK_REAL * CCTK_RESTRICT mhd_u_psi = (cctki_dummy_int = &mhd_u_psi - &mhd_u_psi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_u_psi")); \
CCTK_REAL * CCTK_RESTRICT mhd_u_psi_p = (cctki_dummy_int = &mhd_u_psi_p - &mhd_u_psi_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "mhd_u_psi")); \
CCTK_REAL * CCTK_RESTRICT mhd_u_psi_p_p = (cctki_dummy_int = &mhd_u_psi_p_p - &mhd_u_psi_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "mhd_u_psi")); \
CCTK_REAL * CCTK_RESTRICT mhd_u_psi_rhs = (cctki_dummy_int = &mhd_u_psi_rhs - &mhd_u_psi_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mhd_u_psi_rhs")); \
CCTK_REAL * CCTK_RESTRICT minternal_cold_horiz_VolInt = (cctki_dummy_int = &minternal_cold_horiz_VolInt - &minternal_cold_horiz_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "minternal_cold_horiz_VolInt")); \
CCTK_REAL * CCTK_RESTRICT minternal_cold_r1_VolInt = (cctki_dummy_int = &minternal_cold_r1_VolInt - &minternal_cold_r1_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "minternal_cold_r1_VolInt")); \
CCTK_REAL * CCTK_RESTRICT minternal_cold_r2_VolInt = (cctki_dummy_int = &minternal_cold_r2_VolInt - &minternal_cold_r2_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "minternal_cold_r2_VolInt")); \
CCTK_REAL * CCTK_RESTRICT minternal_cold_r3_VolInt = (cctki_dummy_int = &minternal_cold_r3_VolInt - &minternal_cold_r3_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "minternal_cold_r3_VolInt")); \
CCTK_REAL * CCTK_RESTRICT minternal_horiz_VolInt = (cctki_dummy_int = &minternal_horiz_VolInt - &minternal_horiz_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "minternal_horiz_VolInt")); \
CCTK_REAL * CCTK_RESTRICT minternal_r1_VolInt = (cctki_dummy_int = &minternal_r1_VolInt - &minternal_r1_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "minternal_r1_VolInt")); \
CCTK_REAL * CCTK_RESTRICT minternal_r2_VolInt = (cctki_dummy_int = &minternal_r2_VolInt - &minternal_r2_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "minternal_r2_VolInt")); \
CCTK_REAL * CCTK_RESTRICT minternal_r3_VolInt = (cctki_dummy_int = &minternal_r3_VolInt - &minternal_r3_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "minternal_r3_VolInt")); \
CCTK_REAL * CCTK_RESTRICT mom_const_VolIntD = (cctki_dummy_int = &mom_const_VolIntD - &mom_const_VolIntD, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "mom_const_VolIntD")); \
CCTK_REAL * CCTK_RESTRICT mom_const_excised_VolIntD = (cctki_dummy_int = &mom_const_excised_VolIntD - &mom_const_excised_VolIntD, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "mom_const_excised_VolIntD")); \
CCTK_REAL * CCTK_RESTRICT momentsi = (cctki_dummy_int = &momentsi - &momentsi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "momentsi")); \
CCTK_REAL * CCTK_RESTRICT momentsi_old = (cctki_dummy_int = &momentsi_old - &momentsi_old, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "momentsi_old")); \
CCTK_REAL * CCTK_RESTRICT momentsr = (cctki_dummy_int = &momentsr - &momentsr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "momentsr")); \
CCTK_REAL * CCTK_RESTRICT momentsr_old = (cctki_dummy_int = &momentsr_old - &momentsr_old, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "momentsr_old")); \
CCTK_REAL * CCTK_RESTRICT momx_const_VolIntN = (cctki_dummy_int = &momx_const_VolIntN - &momx_const_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "momx_const_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT momx_const_excised_VolIntN = (cctki_dummy_int = &momx_const_excised_VolIntN - &momx_const_excised_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "momx_const_excised_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT momy_const_VolIntN = (cctki_dummy_int = &momy_const_VolIntN - &momy_const_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "momy_const_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT momy_const_excised_VolIntN = (cctki_dummy_int = &momy_const_excised_VolIntN - &momy_const_excised_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "momy_const_excised_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT momz_const_VolIntN = (cctki_dummy_int = &momz_const_VolIntN - &momz_const_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "momz_const_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT momz_const_excised_VolIntN = (cctki_dummy_int = &momz_const_excised_VolIntN - &momz_const_excised_VolIntN, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "momz_const_excised_VolIntN")); \
CCTK_REAL * CCTK_RESTRICT monopole_VolInt = (cctki_dummy_int = &monopole_VolInt - &monopole_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "monopole_VolInt")); \
CCTK_REAL * CCTK_RESTRICT monopole_outsideBH_VolInt = (cctki_dummy_int = &monopole_outsideBH_VolInt - &monopole_outsideBH_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "monopole_outsideBH_VolInt")); \
CCTK_REAL * CCTK_RESTRICT mu_nu = (cctki_dummy_int = &mu_nu - &mu_nu, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "mu_nu")); \
CCTK_REAL * CCTK_RESTRICT n_poly = (cctki_dummy_int = &n_poly - &n_poly, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "n_poly")); \
CCTK_REAL * CCTK_RESTRICT odd_momentsi = (cctki_dummy_int = &odd_momentsi - &odd_momentsi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "odd_momentsi")); \
CCTK_REAL * CCTK_RESTRICT odd_momentsi_old = (cctki_dummy_int = &odd_momentsi_old - &odd_momentsi_old, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "odd_momentsi_old")); \
CCTK_REAL * CCTK_RESTRICT odd_momentsr = (cctki_dummy_int = &odd_momentsr - &odd_momentsr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "odd_momentsr")); \
CCTK_REAL * CCTK_RESTRICT odd_momentsr_old = (cctki_dummy_int = &odd_momentsr_old - &odd_momentsr_old, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "odd_momentsr_old")); \
CCTK_REAL * CCTK_RESTRICT optd = (cctki_dummy_int = &optd - &optd, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "optd")); \
CCTK_REAL * CCTK_RESTRICT optd_x = (cctki_dummy_int = &optd_x - &optd_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "optd_x")); \
CCTK_REAL * CCTK_RESTRICT optd_y = (cctki_dummy_int = &optd_y - &optd_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "optd_y")); \
CCTK_REAL * CCTK_RESTRICT optd_z = (cctki_dummy_int = &optd_z - &optd_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "optd_z")); \
CCTK_REAL * CCTK_RESTRICT pfloor_gf = (cctki_dummy_int = &pfloor_gf - &pfloor_gf, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "pfloor_gf")); \
CCTK_REAL * CCTK_RESTRICT phi = (cctki_dummy_int = &phi - &phi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "phi")); \
CCTK_REAL * CCTK_RESTRICT phi_p = (cctki_dummy_int = &phi_p - &phi_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "phi")); \
CCTK_REAL * CCTK_RESTRICT phi_p_p = (cctki_dummy_int = &phi_p_p - &phi_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "phi")); \
CCTK_REAL * CCTK_RESTRICT phi_f = (cctki_dummy_int = &phi_f - &phi_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "phi_f")); \
CCTK_REAL * CCTK_RESTRICT phi_rhs = (cctki_dummy_int = &phi_rhs - &phi_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "phi_rhs")); \
CCTK_REAL * CCTK_RESTRICT phi_rot1 = (cctki_dummy_int = &phi_rot1 - &phi_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "phi_rot1")); \
CCTK_REAL * CCTK_RESTRICT phi_rot2 = (cctki_dummy_int = &phi_rot2 - &phi_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "phi_rot2")); \
CCTK_REAL * CCTK_RESTRICT phi_rot3 = (cctki_dummy_int = &phi_rot3 - &phi_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "phi_rot3")); \
CCTK_REAL * CCTK_RESTRICT phix = (cctki_dummy_int = &phix - &phix, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "phix")); \
CCTK_REAL * CCTK_RESTRICT phiy = (cctki_dummy_int = &phiy - &phiy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "phiy")); \
CCTK_REAL * CCTK_RESTRICT phiz = (cctki_dummy_int = &phiz - &phiz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "phiz")); \
CCTK_REAL * CCTK_RESTRICT psi = (cctki_dummy_int = &psi - &psi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "psi")); \
CCTK_REAL * CCTK_RESTRICT psi0im = (cctki_dummy_int = &psi0im - &psi0im, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "psi0im")); \
CCTK_REAL * CCTK_RESTRICT psi0im_p = (cctki_dummy_int = &psi0im_p - &psi0im_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "GW_EXTRACTION", "psi0im")); \
CCTK_REAL * CCTK_RESTRICT psi0im_p_p = (cctki_dummy_int = &psi0im_p_p - &psi0im_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "GW_EXTRACTION", "psi0im")); \
CCTK_REAL * CCTK_RESTRICT psi0re = (cctki_dummy_int = &psi0re - &psi0re, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GW_EXTRACTION", "psi0re")); \
CCTK_REAL * CCTK_RESTRICT psi0re_p = (cctki_dummy_int = &psi0re_p - &psi0re_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "GW_EXTRACTION", "psi0re")); \
CCTK_REAL * CCTK_RESTRICT psi0re_p_p = (cctki_dummy_int = &psi0re_p_p - &psi0re_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "GW_EXTRACTION", "psi0re")); \
CCTK_REAL * CCTK_RESTRICT psi6phi = (cctki_dummy_int = &psi6phi - &psi6phi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "psi6phi")); \
CCTK_REAL * CCTK_RESTRICT psi6phi_p = (cctki_dummy_int = &psi6phi_p - &psi6phi_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "psi6phi")); \
CCTK_REAL * CCTK_RESTRICT psi6phi_p_p = (cctki_dummy_int = &psi6phi_p_p - &psi6phi_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "psi6phi")); \
CCTK_REAL * CCTK_RESTRICT psi6phi_rhs = (cctki_dummy_int = &psi6phi_rhs - &psi6phi_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "psi6phi_rhs")); \
CCTK_REAL * CCTK_RESTRICT rad_const = (cctki_dummy_int = &rad_const - &rad_const, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rad_const")); \
CCTK_REAL * CCTK_RESTRICT rad_energy_VolInt = (cctki_dummy_int = &rad_energy_VolInt - &rad_energy_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "rad_energy_VolInt")); \
CCTK_REAL * CCTK_RESTRICT rad_energy_nue_VolInt = (cctki_dummy_int = &rad_energy_nue_VolInt - &rad_energy_nue_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "rad_energy_nue_VolInt")); \
CCTK_REAL * CCTK_RESTRICT rad_energy_nux_VolInt = (cctki_dummy_int = &rad_energy_nux_VolInt - &rad_energy_nux_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "rad_energy_nux_VolInt")); \
CCTK_REAL * CCTK_RESTRICT rbrvec = (cctki_dummy_int = &rbrvec - &rbrvec, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "rbrvec")); \
CCTK_REAL * CCTK_RESTRICT refbd = (cctki_dummy_int = &refbd - &refbd, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "refbd")); \
CCTK_REAL * CCTK_RESTRICT refbd_p = (cctki_dummy_int = &refbd_p - &refbd_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "refbd")); \
CCTK_REAL * CCTK_RESTRICT refbd_p_p = (cctki_dummy_int = &refbd_p_p - &refbd_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "refbd")); \
CCTK_REAL * CCTK_RESTRICT rho = (cctki_dummy_int = &rho - &rho, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "rho")); \
CCTK_REAL * CCTK_RESTRICT rhoYe = (cctki_dummy_int = &rhoYe - &rhoYe, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rhoYe")); \
CCTK_REAL * CCTK_RESTRICT rhoYe_p = (cctki_dummy_int = &rhoYe_p - &rhoYe_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "rhoYe")); \
CCTK_REAL * CCTK_RESTRICT rhoYe_p_p = (cctki_dummy_int = &rhoYe_p_p - &rhoYe_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "rhoYe")); \
CCTK_REAL * CCTK_RESTRICT rhoYe_rhs = (cctki_dummy_int = &rhoYe_rhs - &rhoYe_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rhoYe_rhs")); \
CCTK_REAL * CCTK_RESTRICT rho_b = (cctki_dummy_int = &rho_b - &rho_b, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rho_b")); \
CCTK_REAL * CCTK_RESTRICT rho_b_atm_gf = (cctki_dummy_int = &rho_b_atm_gf - &rho_b_atm_gf, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rho_b_atm_gf")); \
CCTK_REAL * CCTK_RESTRICT rho_bl = (cctki_dummy_int = &rho_bl - &rho_bl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rho_bl")); \
CCTK_REAL * CCTK_RESTRICT rho_br = (cctki_dummy_int = &rho_br - &rho_br, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rho_br")); \
CCTK_REAL * CCTK_RESTRICT rho_star = (cctki_dummy_int = &rho_star - &rho_star, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rho_star")); \
CCTK_REAL * CCTK_RESTRICT rho_star_p = (cctki_dummy_int = &rho_star_p - &rho_star_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "rho_star")); \
CCTK_REAL * CCTK_RESTRICT rho_star_p_p = (cctki_dummy_int = &rho_star_p_p - &rho_star_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "rho_star")); \
CCTK_REAL * CCTK_RESTRICT rho_star_rhs = (cctki_dummy_int = &rho_star_rhs - &rho_star_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rho_star_rhs")); \
CCTK_REAL * CCTK_RESTRICT rho_tab = (cctki_dummy_int = &rho_tab - &rho_tab, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rho_tab")); \
CCTK_REAL * CCTK_RESTRICT rhob_floor = (cctki_dummy_int = &rhob_floor - &rhob_floor, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rhob_floor")); \
CCTK_REAL * CCTK_RESTRICT rhovec = (cctki_dummy_int = &rhovec - &rhovec, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "rhovec")); \
CCTK_REAL * CCTK_RESTRICT sbt = (cctki_dummy_int = &sbt - &sbt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "sbt")); \
CCTK_REAL * CCTK_RESTRICT sbx = (cctki_dummy_int = &sbx - &sbx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "sbx")); \
CCTK_REAL * CCTK_RESTRICT sby = (cctki_dummy_int = &sby - &sby, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "sby")); \
CCTK_REAL * CCTK_RESTRICT sbz = (cctki_dummy_int = &sbz - &sbz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "sbz")); \
CCTK_REAL * CCTK_RESTRICT shiftp_rot1 = (cctki_dummy_int = &shiftp_rot1 - &shiftp_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftp_rot1")); \
CCTK_REAL * CCTK_RESTRICT shiftp_rot2 = (cctki_dummy_int = &shiftp_rot2 - &shiftp_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftp_rot2")); \
CCTK_REAL * CCTK_RESTRICT shiftp_rot3 = (cctki_dummy_int = &shiftp_rot3 - &shiftp_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftp_rot3")); \
CCTK_REAL * CCTK_RESTRICT shiftr_rot1 = (cctki_dummy_int = &shiftr_rot1 - &shiftr_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftr_rot1")); \
CCTK_REAL * CCTK_RESTRICT shiftr_rot2 = (cctki_dummy_int = &shiftr_rot2 - &shiftr_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftr_rot2")); \
CCTK_REAL * CCTK_RESTRICT shiftr_rot3 = (cctki_dummy_int = &shiftr_rot3 - &shiftr_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftr_rot3")); \
CCTK_REAL * CCTK_RESTRICT shiftth_rot1 = (cctki_dummy_int = &shiftth_rot1 - &shiftth_rot1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftth_rot1")); \
CCTK_REAL * CCTK_RESTRICT shiftth_rot2 = (cctki_dummy_int = &shiftth_rot2 - &shiftth_rot2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftth_rot2")); \
CCTK_REAL * CCTK_RESTRICT shiftth_rot3 = (cctki_dummy_int = &shiftth_rot3 - &shiftth_rot3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "shiftth_rot3")); \
CCTK_REAL * CCTK_RESTRICT shiftx = (cctki_dummy_int = &shiftx - &shiftx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftx")); \
CCTK_REAL * CCTK_RESTRICT shiftx_p = (cctki_dummy_int = &shiftx_p - &shiftx_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "SHIFT", "shiftx")); \
CCTK_REAL * CCTK_RESTRICT shiftx_p_p = (cctki_dummy_int = &shiftx_p_p - &shiftx_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "SHIFT", "shiftx")); \
CCTK_REAL * CCTK_RESTRICT shiftx_f = (cctki_dummy_int = &shiftx_f - &shiftx_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "shiftx_f")); \
CCTK_REAL * CCTK_RESTRICT shiftx_rhs = (cctki_dummy_int = &shiftx_rhs - &shiftx_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftx_rhs")); \
CCTK_REAL * CCTK_RESTRICT shiftxt = (cctki_dummy_int = &shiftxt - &shiftxt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftxt")); \
CCTK_REAL * CCTK_RESTRICT shiftxt_p = (cctki_dummy_int = &shiftxt_p - &shiftxt_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "SHIFT", "shiftxt")); \
CCTK_REAL * CCTK_RESTRICT shiftxt_p_p = (cctki_dummy_int = &shiftxt_p_p - &shiftxt_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "SHIFT", "shiftxt")); \
CCTK_REAL * CCTK_RESTRICT shiftxt_rhs = (cctki_dummy_int = &shiftxt_rhs - &shiftxt_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftxt_rhs")); \
CCTK_REAL * CCTK_RESTRICT shiftxt_timederiv = (cctki_dummy_int = &shiftxt_timederiv - &shiftxt_timederiv, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftxt_timederiv")); \
CCTK_REAL * CCTK_RESTRICT shifty = (cctki_dummy_int = &shifty - &shifty, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shifty")); \
CCTK_REAL * CCTK_RESTRICT shifty_p = (cctki_dummy_int = &shifty_p - &shifty_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "SHIFT", "shifty")); \
CCTK_REAL * CCTK_RESTRICT shifty_p_p = (cctki_dummy_int = &shifty_p_p - &shifty_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "SHIFT", "shifty")); \
CCTK_REAL * CCTK_RESTRICT shifty_f = (cctki_dummy_int = &shifty_f - &shifty_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "shifty_f")); \
CCTK_REAL * CCTK_RESTRICT shifty_rhs = (cctki_dummy_int = &shifty_rhs - &shifty_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shifty_rhs")); \
CCTK_REAL * CCTK_RESTRICT shiftyt = (cctki_dummy_int = &shiftyt - &shiftyt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftyt")); \
CCTK_REAL * CCTK_RESTRICT shiftyt_p = (cctki_dummy_int = &shiftyt_p - &shiftyt_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "SHIFT", "shiftyt")); \
CCTK_REAL * CCTK_RESTRICT shiftyt_p_p = (cctki_dummy_int = &shiftyt_p_p - &shiftyt_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "SHIFT", "shiftyt")); \
CCTK_REAL * CCTK_RESTRICT shiftyt_rhs = (cctki_dummy_int = &shiftyt_rhs - &shiftyt_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftyt_rhs")); \
CCTK_REAL * CCTK_RESTRICT shiftyt_timederiv = (cctki_dummy_int = &shiftyt_timederiv - &shiftyt_timederiv, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftyt_timederiv")); \
CCTK_REAL * CCTK_RESTRICT shiftz = (cctki_dummy_int = &shiftz - &shiftz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftz")); \
CCTK_REAL * CCTK_RESTRICT shiftz_p = (cctki_dummy_int = &shiftz_p - &shiftz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "SHIFT", "shiftz")); \
CCTK_REAL * CCTK_RESTRICT shiftz_p_p = (cctki_dummy_int = &shiftz_p_p - &shiftz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "SHIFT", "shiftz")); \
CCTK_REAL * CCTK_RESTRICT shiftz_f = (cctki_dummy_int = &shiftz_f - &shiftz_f, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "shiftz_f")); \
CCTK_REAL * CCTK_RESTRICT shiftz_rhs = (cctki_dummy_int = &shiftz_rhs - &shiftz_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftz_rhs")); \
CCTK_REAL * CCTK_RESTRICT shiftzt = (cctki_dummy_int = &shiftzt - &shiftzt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftzt")); \
CCTK_REAL * CCTK_RESTRICT shiftzt_p = (cctki_dummy_int = &shiftzt_p - &shiftzt_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "SHIFT", "shiftzt")); \
CCTK_REAL * CCTK_RESTRICT shiftzt_p_p = (cctki_dummy_int = &shiftzt_p_p - &shiftzt_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "SHIFT", "shiftzt")); \
CCTK_REAL * CCTK_RESTRICT shiftzt_rhs = (cctki_dummy_int = &shiftzt_rhs - &shiftzt_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftzt_rhs")); \
CCTK_REAL * CCTK_RESTRICT shiftzt_timederiv = (cctki_dummy_int = &shiftzt_timederiv - &shiftzt_timederiv, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "SHIFT", "shiftzt_timederiv")); \
CCTK_REAL * CCTK_RESTRICT smallb2 = (cctki_dummy_int = &smallb2 - &smallb2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "smallb2")); \
CCTK_REAL * CCTK_RESTRICT st_x = (cctki_dummy_int = &st_x - &st_x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "st_x")); \
CCTK_REAL * CCTK_RESTRICT st_y = (cctki_dummy_int = &st_y - &st_y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "st_y")); \
CCTK_REAL * CCTK_RESTRICT st_z = (cctki_dummy_int = &st_z - &st_z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "st_z")); \
CCTK_REAL * CCTK_RESTRICT surfvec = (cctki_dummy_int = &surfvec - &surfvec, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_VACUUM", "surfvec")); \
CCTK_REAL * CCTK_RESTRICT synch_VolInt = (cctki_dummy_int = &synch_VolInt - &synch_VolInt, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "DIAGNOSTICS_MHD", "synch_VolInt")); \
CCTK_REAL * CCTK_RESTRICT tau = (cctki_dummy_int = &tau - &tau, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "tau")); \
CCTK_REAL * CCTK_RESTRICT tau_p = (cctki_dummy_int = &tau_p - &tau_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "tau")); \
CCTK_REAL * CCTK_RESTRICT tau_p_p = (cctki_dummy_int = &tau_p_p - &tau_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "tau")); \
CCTK_REAL * CCTK_RESTRICT tau_rad = (cctki_dummy_int = &tau_rad - &tau_rad, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "tau_rad")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_p = (cctki_dummy_int = &tau_rad_p - &tau_rad_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "tau_rad")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_p_p = (cctki_dummy_int = &tau_rad_p_p - &tau_rad_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "tau_rad")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_nue = (cctki_dummy_int = &tau_rad_nue - &tau_rad_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "tau_rad_nue")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_nue_p = (cctki_dummy_int = &tau_rad_nue_p - &tau_rad_nue_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "tau_rad_nue")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_nue_p_p = (cctki_dummy_int = &tau_rad_nue_p_p - &tau_rad_nue_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "tau_rad_nue")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_nue_rhs = (cctki_dummy_int = &tau_rad_nue_rhs - &tau_rad_nue_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "tau_rad_nue_rhs")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_nux = (cctki_dummy_int = &tau_rad_nux - &tau_rad_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "tau_rad_nux")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_nux_p = (cctki_dummy_int = &tau_rad_nux_p - &tau_rad_nux_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "MHD_EVOLVE", "tau_rad_nux")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_nux_p_p = (cctki_dummy_int = &tau_rad_nux_p_p - &tau_rad_nux_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "MHD_EVOLVE", "tau_rad_nux")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_nux_rhs = (cctki_dummy_int = &tau_rad_nux_rhs - &tau_rad_nux_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "tau_rad_nux_rhs")); \
CCTK_REAL * CCTK_RESTRICT tau_rad_rhs = (cctki_dummy_int = &tau_rad_rhs - &tau_rad_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "tau_rad_rhs")); \
CCTK_REAL * CCTK_RESTRICT tau_rhs = (cctki_dummy_int = &tau_rhs - &tau_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "tau_rhs")); \
CCTK_REAL * CCTK_RESTRICT temp1 = (cctki_dummy_int = &temp1 - &temp1, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp1")); \
CCTK_REAL * CCTK_RESTRICT temp10 = (cctki_dummy_int = &temp10 - &temp10, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp10")); \
CCTK_REAL * CCTK_RESTRICT temp11 = (cctki_dummy_int = &temp11 - &temp11, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp11")); \
CCTK_REAL * CCTK_RESTRICT temp12 = (cctki_dummy_int = &temp12 - &temp12, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp12")); \
CCTK_REAL * CCTK_RESTRICT temp13 = (cctki_dummy_int = &temp13 - &temp13, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp13")); \
CCTK_REAL * CCTK_RESTRICT temp14 = (cctki_dummy_int = &temp14 - &temp14, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp14")); \
CCTK_REAL * CCTK_RESTRICT temp15 = (cctki_dummy_int = &temp15 - &temp15, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp15")); \
CCTK_REAL * CCTK_RESTRICT temp16 = (cctki_dummy_int = &temp16 - &temp16, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp16")); \
CCTK_REAL * CCTK_RESTRICT temp17 = (cctki_dummy_int = &temp17 - &temp17, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp17")); \
CCTK_REAL * CCTK_RESTRICT temp18 = (cctki_dummy_int = &temp18 - &temp18, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp18")); \
CCTK_REAL * CCTK_RESTRICT temp19 = (cctki_dummy_int = &temp19 - &temp19, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp19")); \
CCTK_REAL * CCTK_RESTRICT temp2 = (cctki_dummy_int = &temp2 - &temp2, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp2")); \
CCTK_REAL * CCTK_RESTRICT temp20 = (cctki_dummy_int = &temp20 - &temp20, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp20")); \
CCTK_REAL * CCTK_RESTRICT temp21 = (cctki_dummy_int = &temp21 - &temp21, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp21")); \
CCTK_REAL * CCTK_RESTRICT temp22 = (cctki_dummy_int = &temp22 - &temp22, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp22")); \
CCTK_REAL * CCTK_RESTRICT temp23 = (cctki_dummy_int = &temp23 - &temp23, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp23")); \
CCTK_REAL * CCTK_RESTRICT temp24 = (cctki_dummy_int = &temp24 - &temp24, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp24")); \
CCTK_REAL * CCTK_RESTRICT temp25 = (cctki_dummy_int = &temp25 - &temp25, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp25")); \
CCTK_REAL * CCTK_RESTRICT temp26 = (cctki_dummy_int = &temp26 - &temp26, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp26")); \
CCTK_REAL * CCTK_RESTRICT temp3 = (cctki_dummy_int = &temp3 - &temp3, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp3")); \
CCTK_REAL * CCTK_RESTRICT temp4 = (cctki_dummy_int = &temp4 - &temp4, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp4")); \
CCTK_REAL * CCTK_RESTRICT temp5 = (cctki_dummy_int = &temp5 - &temp5, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp5")); \
CCTK_REAL * CCTK_RESTRICT temp6 = (cctki_dummy_int = &temp6 - &temp6, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp6")); \
CCTK_REAL * CCTK_RESTRICT temp7 = (cctki_dummy_int = &temp7 - &temp7, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp7")); \
CCTK_REAL * CCTK_RESTRICT temp8 = (cctki_dummy_int = &temp8 - &temp8, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp8")); \
CCTK_REAL * CCTK_RESTRICT temp9 = (cctki_dummy_int = &temp9 - &temp9, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp9")); \
CCTK_REAL * CCTK_RESTRICT temp_g00 = (cctki_dummy_int = &temp_g00 - &temp_g00, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "temp_g00")); \
CCTK_REAL * CCTK_RESTRICT trK = (cctki_dummy_int = &trK - &trK, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "trK")); \
CCTK_REAL * CCTK_RESTRICT trK_p = (cctki_dummy_int = &trK_p - &trK_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "BSSN", "trK")); \
CCTK_REAL * CCTK_RESTRICT trK_p_p = (cctki_dummy_int = &trK_p_p - &trK_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "BSSN", "trK")); \
CCTK_REAL * CCTK_RESTRICT trK_rhs = (cctki_dummy_int = &trK_rhs - &trK_rhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "trK_rhs")); \
CCTK_REAL * CCTK_RESTRICT trR = (cctki_dummy_int = &trR - &trR, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "trR")); \
CCTK_REAL * CCTK_RESTRICT trRtilde = (cctki_dummy_int = &trRtilde - &trRtilde, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "BSSN", "trRtilde")); \
CCTK_REAL * CCTK_RESTRICT u0 = (cctki_dummy_int = &u0 - &u0, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "u0")); \
CCTK_REAL * CCTK_RESTRICT v02_rad_nuel = (cctki_dummy_int = &v02_rad_nuel - &v02_rad_nuel, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "v02_rad_nuel")); \
CCTK_REAL * CCTK_RESTRICT v02_rad_nuer = (cctki_dummy_int = &v02_rad_nuer - &v02_rad_nuer, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "v02_rad_nuer")); \
CCTK_REAL * CCTK_RESTRICT v02_rad_nuxl = (cctki_dummy_int = &v02_rad_nuxl - &v02_rad_nuxl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "v02_rad_nuxl")); \
CCTK_REAL * CCTK_RESTRICT v02_rad_nuxr = (cctki_dummy_int = &v02_rad_nuxr - &v02_rad_nuxr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "v02_rad_nuxr")); \
CCTK_REAL * CCTK_RESTRICT v02_radl = (cctki_dummy_int = &v02_radl - &v02_radl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "v02_radl")); \
CCTK_REAL * CCTK_RESTRICT v02_radr = (cctki_dummy_int = &v02_radr - &v02_radr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "v02_radr")); \
CCTK_REAL * CCTK_RESTRICT v02l = (cctki_dummy_int = &v02l - &v02l, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "v02l")); \
CCTK_REAL * CCTK_RESTRICT v02r = (cctki_dummy_int = &v02r - &v02r, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "v02r")); \
CCTK_REAL * CCTK_RESTRICT vvec = (cctki_dummy_int = &vvec - &vvec, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vvec")); \
CCTK_REAL * CCTK_RESTRICT vx = (cctki_dummy_int = &vx - &vx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vx")); \
CCTK_REAL * CCTK_RESTRICT vxl = (cctki_dummy_int = &vxl - &vxl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vxl")); \
CCTK_REAL * CCTK_RESTRICT vxr = (cctki_dummy_int = &vxr - &vxr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vxr")); \
CCTK_REAL * CCTK_RESTRICT vy = (cctki_dummy_int = &vy - &vy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vy")); \
CCTK_REAL * CCTK_RESTRICT vyl = (cctki_dummy_int = &vyl - &vyl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vyl")); \
CCTK_REAL * CCTK_RESTRICT vyr = (cctki_dummy_int = &vyr - &vyr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vyr")); \
CCTK_REAL * CCTK_RESTRICT vz = (cctki_dummy_int = &vz - &vz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vz")); \
CCTK_REAL * CCTK_RESTRICT vzl = (cctki_dummy_int = &vzl - &vzl, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vzl")); \
CCTK_REAL * CCTK_RESTRICT vzr = (cctki_dummy_int = &vzr - &vzr, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "vzr")); \
CCTK_REAL * CCTK_RESTRICT w = (cctki_dummy_int = &w - &w, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "w")); \
CCTK_REAL * CCTK_RESTRICT zeta_rad = (cctki_dummy_int = &zeta_rad - &zeta_rad, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "zeta_rad")); \
CCTK_REAL * CCTK_RESTRICT zeta_rad_nue = (cctki_dummy_int = &zeta_rad_nue - &zeta_rad_nue, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "zeta_rad_nue")); \
CCTK_REAL * CCTK_RESTRICT zeta_rad_nux = (cctki_dummy_int = &zeta_rad_nux - &zeta_rad_nux, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "MHD_EVOLVE", "zeta_rad_nux"));

#define DECLARE_ANG_FREQ_OFBFIELD_PROTECTED_C2F \
static int CCTKARGNUM_Aupxx = -1; \
static int CCTKGROUPNUM_BSSN_aux_private = -1; \
static int CCTKARGNUM_Aupxy = -1; \
static int CCTKARGNUM_Aupxz = -1; \
static int CCTKARGNUM_Aupyy = -1; \
static int CCTKARGNUM_Aupyz = -1; \
static int CCTKARGNUM_Aupzz = -1; \
static int CCTKARGNUM_Ax = -1; \
static int CCTKGROUPNUM_em_Ax = -1; \
static int CCTKARGNUM_Axx = -1; \
static int CCTKGROUPNUM_BSSN_vars = -1; \
static int CCTKARGNUM_Axx_rhs = -1; \
static int CCTKGROUPNUM_BSSN_rhs = -1; \
static int CCTKARGNUM_Axy = -1; \
static int CCTKARGNUM_Axy_rhs = -1; \
static int CCTKARGNUM_Axz = -1; \
static int CCTKARGNUM_Axz_rhs = -1; \
static int CCTKARGNUM_Ay = -1; \
static int CCTKGROUPNUM_em_Ay = -1; \
static int CCTKARGNUM_Ayy = -1; \
static int CCTKARGNUM_Ayy_rhs = -1; \
static int CCTKARGNUM_Ayz = -1; \
static int CCTKARGNUM_Ayz_rhs = -1; \
static int CCTKARGNUM_Az = -1; \
static int CCTKGROUPNUM_em_Az = -1; \
static int CCTKARGNUM_Azz = -1; \
static int CCTKARGNUM_Azz_rhs = -1; \
static int CCTKARGNUM_Bfreq1 = -1; \
static int CCTKGROUPNUM_OmegF = -1; \
static int CCTKARGNUM_Bfreq2 = -1; \
static int CCTKARGNUM_Blagrangemultiplier = -1; \
static int CCTKGROUPNUM_em_Blagrangemultiplier = -1; \
static int CCTKARGNUM_Blagrangemultiplier_rhs = -1; \
static int CCTKGROUPNUM_em_Blagrangemultiplier_rhs = -1; \
static int CCTKARGNUM_Box1X_VolInt = -1; \
static int CCTKGROUPNUM_volIntegrals_movingbox = -1; \
static int CCTKARGNUM_Box1X_VolInt1 = -1; \
static int CCTKARGNUM_Box1X_VolInt2 = -1; \
static int CCTKARGNUM_Box1Y_VolInt = -1; \
static int CCTKARGNUM_Box1Y_VolInt1 = -1; \
static int CCTKARGNUM_Box1Y_VolInt2 = -1; \
static int CCTKARGNUM_Box1Z_VolInt = -1; \
static int CCTKARGNUM_Box1Z_VolInt1 = -1; \
static int CCTKARGNUM_Box1Z_VolInt2 = -1; \
static int CCTKARGNUM_Box1denom_VolInt = -1; \
static int CCTKARGNUM_Box1denom_VolInt1 = -1; \
static int CCTKARGNUM_Box1denom_VolInt2 = -1; \
static int CCTKARGNUM_Bx = -1; \
static int CCTKGROUPNUM_mhd_primitives = -1; \
static int CCTKARGNUM_Bx_stagger = -1; \
static int CCTKGROUPNUM_Stagger_Bs = -1; \
static int CCTKARGNUM_Bxl = -1; \
static int CCTKGROUPNUM_mhd_sync_lr_B_quantities = -1; \
static int CCTKARGNUM_Bxr = -1; \
static int CCTKARGNUM_Bxtilde = -1; \
static int CCTKGROUPNUM_em_conservativex = -1; \
static int CCTKARGNUM_Bxtilde_or_Ax_rhs = -1; \
static int CCTKGROUPNUM_em_rhsx = -1; \
static int CCTKARGNUM_By = -1; \
static int CCTKARGNUM_By_stagger = -1; \
static int CCTKARGNUM_Byl = -1; \
static int CCTKARGNUM_Byr = -1; \
static int CCTKARGNUM_Bytilde = -1; \
static int CCTKGROUPNUM_em_conservativey = -1; \
static int CCTKARGNUM_Bytilde_or_Ay_rhs = -1; \
static int CCTKGROUPNUM_em_rhsy = -1; \
static int CCTKARGNUM_Bz = -1; \
static int CCTKARGNUM_Bz_stagger = -1; \
static int CCTKARGNUM_Bzl = -1; \
static int CCTKARGNUM_Bzr = -1; \
static int CCTKARGNUM_Bztilde = -1; \
static int CCTKGROUPNUM_em_conservativez = -1; \
static int CCTKARGNUM_Bztilde_or_Az_rhs = -1; \
static int CCTKGROUPNUM_em_rhsz = -1; \
static int CCTKARGNUM_CoM_VolInt_denominator = -1; \
static int CCTKGROUPNUM_volIntegrals_mhd = -1; \
static int CCTKARGNUM_CoMx_VolInt = -1; \
static int CCTKARGNUM_CoMy_VolInt = -1; \
static int CCTKARGNUM_CoMz_VolInt = -1; \
static int CCTKARGNUM_E_rad = -1; \
static int CCTKGROUPNUM_rad_primitives = -1; \
static int CCTKARGNUM_E_rad_nue = -1; \
static int CCTKARGNUM_E_rad_nuel = -1; \
static int CCTKGROUPNUM_rad_sync_lr = -1; \
static int CCTKARGNUM_E_rad_nuer = -1; \
static int CCTKARGNUM_E_rad_nux = -1; \
static int CCTKARGNUM_E_rad_nuxl = -1; \
static int CCTKARGNUM_E_rad_nuxr = -1; \
static int CCTKARGNUM_E_radl = -1; \
static int CCTKARGNUM_E_radr = -1; \
static int CCTKARGNUM_Ex = -1; \
static int CCTKARGNUM_Ey = -1; \
static int CCTKARGNUM_Ez = -1; \
static int CCTKARGNUM_F_rad0 = -1; \
static int CCTKGROUPNUM_rad_pressure = -1; \
static int CCTKARGNUM_F_rad0_nue = -1; \
static int CCTKARGNUM_F_rad0_nux = -1; \
static int CCTKARGNUM_F_rad_scalar = -1; \
static int CCTKARGNUM_F_rad_scalar_nue = -1; \
static int CCTKARGNUM_F_rad_scalar_nux = -1; \
static int CCTKARGNUM_F_radx = -1; \
static int CCTKARGNUM_F_radx_nue = -1; \
static int CCTKARGNUM_F_radx_nuele = -1; \
static int CCTKARGNUM_F_radx_nuer = -1; \
static int CCTKARGNUM_F_radx_nux = -1; \
static int CCTKARGNUM_F_radx_nuxle = -1; \
static int CCTKARGNUM_F_radx_nuxr = -1; \
static int CCTKARGNUM_F_radxle = -1; \
static int CCTKARGNUM_F_radxr = -1; \
static int CCTKARGNUM_F_rady = -1; \
static int CCTKARGNUM_F_rady_nue = -1; \
static int CCTKARGNUM_F_rady_nuele = -1; \
static int CCTKARGNUM_F_rady_nuer = -1; \
static int CCTKARGNUM_F_rady_nux = -1; \
static int CCTKARGNUM_F_rady_nuxle = -1; \
static int CCTKARGNUM_F_rady_nuxr = -1; \
static int CCTKARGNUM_F_radyle = -1; \
static int CCTKARGNUM_F_radyr = -1; \
static int CCTKARGNUM_F_radz = -1; \
static int CCTKARGNUM_F_radz_nue = -1; \
static int CCTKARGNUM_F_radz_nuele = -1; \
static int CCTKARGNUM_F_radz_nuer = -1; \
static int CCTKARGNUM_F_radz_nux = -1; \
static int CCTKARGNUM_F_radz_nuxle = -1; \
static int CCTKARGNUM_F_radz_nuxr = -1; \
static int CCTKARGNUM_F_radzle = -1; \
static int CCTKARGNUM_F_radzr = -1; \
static int CCTKARGNUM_FaFal = -1; \
static int CCTKARGNUM_FaFal_nue = -1; \
static int CCTKARGNUM_FaFal_nux = -1; \
static int CCTKARGNUM_FaFar = -1; \
static int CCTKARGNUM_FaFar_nue = -1; \
static int CCTKARGNUM_FaFar_nux = -1; \
static int CCTKARGNUM_Fontfix_tracker_gf = -1; \
static int CCTKGROUPNUM_disk_atmosphere = -1; \
static int CCTKARGNUM_Gammax = -1; \
static int CCTKARGNUM_Gammax_drive = -1; \
static int CCTKGROUPNUM_shift_vars_temp = -1; \
static int CCTKARGNUM_Gammax_rhs = -1; \
static int CCTKARGNUM_Gammaxxx = -1; \
static int CCTKGROUPNUM_BSSN_aux_restrict2 = -1; \
static int CCTKARGNUM_Gammaxxy = -1; \
static int CCTKARGNUM_Gammaxxz = -1; \
static int CCTKARGNUM_Gammaxyy = -1; \
static int CCTKARGNUM_Gammaxyz = -1; \
static int CCTKARGNUM_Gammaxzz = -1; \
static int CCTKARGNUM_Gammay = -1; \
static int CCTKARGNUM_Gammay_drive = -1; \
static int CCTKARGNUM_Gammay_rhs = -1; \
static int CCTKARGNUM_Gammayxx = -1; \
static int CCTKARGNUM_Gammayxy = -1; \
static int CCTKARGNUM_Gammayxz = -1; \
static int CCTKARGNUM_Gammayyy = -1; \
static int CCTKARGNUM_Gammayyz = -1; \
static int CCTKARGNUM_Gammayzz = -1; \
static int CCTKARGNUM_Gammaz = -1; \
static int CCTKARGNUM_Gammaz_drive = -1; \
static int CCTKARGNUM_Gammaz_rhs = -1; \
static int CCTKARGNUM_Gammazxx = -1; \
static int CCTKARGNUM_Gammazxy = -1; \
static int CCTKARGNUM_Gammazxz = -1; \
static int CCTKARGNUM_Gammazyy = -1; \
static int CCTKARGNUM_Gammazyz = -1; \
static int CCTKARGNUM_Gammazzz = -1; \
static int CCTKARGNUM_Gamx_const_VolInt = -1; \
static int CCTKGROUPNUM_volIntegrals = -1; \
static int CCTKARGNUM_Gamy_const_VolInt = -1; \
static int CCTKARGNUM_Gamz_const_VolInt = -1; \
static int CCTKARGNUM_Ham_const_VolIntD = -1; \
static int CCTKARGNUM_Ham_const_VolIntN = -1; \
static int CCTKARGNUM_Ham_const_excised_VolIntD = -1; \
static int CCTKARGNUM_Ham_const_excised_VolIntN = -1; \
static int CCTKARGNUM_Ham_const_excised_innerregion_VolIntD = -1; \
static int CCTKARGNUM_Ham_const_excised_innerregion_VolIntN = -1; \
static int CCTKARGNUM_J_ADM_VolInt = -1; \
static int CCTKARGNUM_J_ADM_VolInt_inner = -1; \
static int CCTKARGNUM_J_ADM_VolInt_inner2 = -1; \
static int CCTKARGNUM_Jz_constraint = -1; \
static int CCTKARGNUM_Jz_constraint_inner = -1; \
static int CCTKARGNUM_KK = -1; \
static int CCTKGROUPNUM_BSSN_diag_restrict = -1; \
static int CCTKARGNUM_K_pp_rot1 = -1; \
static int CCTKGROUPNUM_metric_spher_pol_1 = -1; \
static int CCTKARGNUM_K_pp_rot2 = -1; \
static int CCTKGROUPNUM_metric_spher_pol_2 = -1; \
static int CCTKARGNUM_K_pp_rot3 = -1; \
static int CCTKGROUPNUM_metric_spher_pol_3 = -1; \
static int CCTKARGNUM_K_rp_rot1 = -1; \
static int CCTKARGNUM_K_rp_rot2 = -1; \
static int CCTKARGNUM_K_rp_rot3 = -1; \
static int CCTKARGNUM_K_rr_rot1 = -1; \
static int CCTKARGNUM_K_rr_rot2 = -1; \
static int CCTKARGNUM_K_rr_rot3 = -1; \
static int CCTKARGNUM_K_rth_rot1 = -1; \
static int CCTKARGNUM_K_rth_rot2 = -1; \
static int CCTKARGNUM_K_rth_rot3 = -1; \
static int CCTKARGNUM_K_thp_rot1 = -1; \
static int CCTKARGNUM_K_thp_rot2 = -1; \
static int CCTKARGNUM_K_thp_rot3 = -1; \
static int CCTKARGNUM_K_thth_rot1 = -1; \
static int CCTKARGNUM_K_thth_rot2 = -1; \
static int CCTKARGNUM_K_thth_rot3 = -1; \
static int CCTKARGNUM_M0_AH_VolInt = -1; \
static int CCTKARGNUM_M0_VolInt = -1; \
static int CCTKARGNUM_M0_escape100M = -1; \
static int CCTKARGNUM_M0_escape30M = -1; \
static int CCTKARGNUM_M0_escape50M = -1; \
static int CCTKARGNUM_M0_escape70M = -1; \
static int CCTKARGNUM_M0_horiz_VolInt = -1; \
static int CCTKARGNUM_M0_r1_VolInt = -1; \
static int CCTKARGNUM_M0_r2_VolInt = -1; \
static int CCTKARGNUM_M0_r3_VolInt = -1; \
static int CCTKARGNUM_MNorm = -1; \
static int CCTKARGNUM_MONOPOLE = -1; \
static int CCTKGROUPNUM_mhd_temps = -1; \
static int CCTKARGNUM_MRsx = -1; \
static int CCTKARGNUM_MRsy = -1; \
static int CCTKARGNUM_MRsz = -1; \
static int CCTKARGNUM_M_ADM_VolInt = -1; \
static int CCTKARGNUM_M_constraint = -1; \
static int CCTKARGNUM_M_constraint_inner = -1; \
static int CCTKARGNUM_Minternal_VolInt = -1; \
static int CCTKARGNUM_Minternal_cold_VolInt = -1; \
static int CCTKARGNUM_NPphi0im = -1; \
static int CCTKGROUPNUM_NPphi2_em = -1; \
static int CCTKARGNUM_NPphi0re = -1; \
static int CCTKARGNUM_NPphi2im = -1; \
static int CCTKARGNUM_NPphi2re = -1; \
static int CCTKARGNUM_OS_surf_rad = -1; \
static int CCTKGROUPNUM_OS_stellar_surface = -1; \
static int CCTKARGNUM_P = -1; \
static int CCTKARGNUM_P_cld = -1; \
static int CCTKGROUPNUM_microphys_primitives = -1; \
static int CCTKARGNUM_P_constraint = -1; \
static int CCTKARGNUM_P_constraint_inner = -1; \
static int CCTKARGNUM_P_floor = -1; \
static int CCTKGROUPNUM_mhd_nosync = -1; \
static int CCTKARGNUM_P_radxx = -1; \
static int CCTKARGNUM_P_radxx_nue = -1; \
static int CCTKARGNUM_P_radxx_nux = -1; \
static int CCTKARGNUM_P_radxy = -1; \
static int CCTKARGNUM_P_radxy_nue = -1; \
static int CCTKARGNUM_P_radxy_nux = -1; \
static int CCTKARGNUM_P_radxz = -1; \
static int CCTKARGNUM_P_radxz_nue = -1; \
static int CCTKARGNUM_P_radxz_nux = -1; \
static int CCTKARGNUM_P_radyy = -1; \
static int CCTKARGNUM_P_radyy_nue = -1; \
static int CCTKARGNUM_P_radyy_nux = -1; \
static int CCTKARGNUM_P_radyz = -1; \
static int CCTKARGNUM_P_radyz_nue = -1; \
static int CCTKARGNUM_P_radyz_nux = -1; \
static int CCTKARGNUM_P_radzz = -1; \
static int CCTKARGNUM_P_radzz_nue = -1; \
static int CCTKARGNUM_P_radzz_nux = -1; \
static int CCTKARGNUM_P_tab = -1; \
static int CCTKGROUPNUM_eos_params1 = -1; \
static int CCTKARGNUM_P_thermal = -1; \
static int CCTKARGNUM_PhysicalRadius = -1; \
static int CCTKGROUPNUM_fisheye_vars = -1; \
static int CCTKARGNUM_Pl = -1; \
static int CCTKGROUPNUM_mhd_sync_lr_hydro_quantities = -1; \
static int CCTKARGNUM_Pr = -1; \
static int CCTKARGNUM_PsiNorm = -1; \
static int CCTKARGNUM_PsiRes = -1; \
static int CCTKARGNUM_PsiTau = -1; \
static int CCTKARGNUM_Pvec = -1; \
static int CCTKGROUPNUM_rhovecs = -1; \
static int CCTKARGNUM_RadiusDerivative = -1; \
static int CCTKARGNUM_RadiusDerivative2 = -1; \
static int CCTKARGNUM_Rxx = -1; \
static int CCTKARGNUM_Rxy = -1; \
static int CCTKARGNUM_Rxz = -1; \
static int CCTKARGNUM_Ryy = -1; \
static int CCTKARGNUM_Ryz = -1; \
static int CCTKARGNUM_Rzz = -1; \
static int CCTKARGNUM_S = -1; \
static int CCTKGROUPNUM_BSSN_matter = -1; \
static int CCTKARGNUM_SPx = -1; \
static int CCTKARGNUM_SPy = -1; \
static int CCTKARGNUM_SPz = -1; \
static int CCTKARGNUM_S_rad_x = -1; \
static int CCTKGROUPNUM_rad_conservatives = -1; \
static int CCTKARGNUM_S_rad_x_nue = -1; \
static int CCTKARGNUM_S_rad_x_nue_rhs = -1; \
static int CCTKGROUPNUM_rad_conservatives_rhs = -1; \
static int CCTKARGNUM_S_rad_x_nux = -1; \
static int CCTKARGNUM_S_rad_x_nux_rhs = -1; \
static int CCTKARGNUM_S_rad_x_rhs = -1; \
static int CCTKARGNUM_S_rad_y = -1; \
static int CCTKARGNUM_S_rad_y_nue = -1; \
static int CCTKARGNUM_S_rad_y_nue_rhs = -1; \
static int CCTKARGNUM_S_rad_y_nux = -1; \
static int CCTKARGNUM_S_rad_y_nux_rhs = -1; \
static int CCTKARGNUM_S_rad_y_rhs = -1; \
static int CCTKARGNUM_S_rad_z = -1; \
static int CCTKARGNUM_S_rad_z_nue = -1; \
static int CCTKARGNUM_S_rad_z_nue_rhs = -1; \
static int CCTKARGNUM_S_rad_z_nux = -1; \
static int CCTKARGNUM_S_rad_z_nux_rhs = -1; \
static int CCTKARGNUM_S_rad_z_rhs = -1; \
static int CCTKARGNUM_Sx = -1; \
static int CCTKARGNUM_Sxx = -1; \
static int CCTKARGNUM_Sxy = -1; \
static int CCTKARGNUM_Sxz = -1; \
static int CCTKARGNUM_Sy = -1; \
static int CCTKARGNUM_Syy = -1; \
static int CCTKARGNUM_Syz = -1; \
static int CCTKARGNUM_Sz = -1; \
static int CCTKARGNUM_Szz = -1; \
static int CCTKARGNUM_T_0x = -1; \
static int CCTKARGNUM_T_0y = -1; \
static int CCTKARGNUM_T_0z = -1; \
static int CCTKARGNUM_T_VolInt = -1; \
static int CCTKARGNUM_T_fluid = -1; \
static int CCTKARGNUM_T_fluidle = -1; \
static int CCTKGROUPNUM_micphys_sync_lr_hydro_quantities = -1; \
static int CCTKARGNUM_T_fluidr = -1; \
static int CCTKARGNUM_Tem0_0_VolInt = -1; \
static int CCTKARGNUM_Tem0_0_outsideBH_VolInt = -1; \
static int CCTKARGNUM_Tfluid0_0_VolInt = -1; \
static int CCTKARGNUM_Tfluid0_0_outsideBH_VolInt = -1; \
static int CCTKARGNUM_VolIntegrand = -1; \
static int CCTKGROUPNUM_diag_vacuum_gf = -1; \
static int CCTKARGNUM_VolIntegrand2 = -1; \
static int CCTKARGNUM_VolIntegrand3 = -1; \
static int CCTKARGNUM_VolIntegrand4 = -1; \
static int CCTKARGNUM_Y_e = -1; \
static int CCTKARGNUM_Y_el = -1; \
static int CCTKARGNUM_Y_er = -1; \
static int CCTKARGNUM_ah_centroid_iteration = -1; \
static int CCTKGROUPNUM_ah_flags = -1; \
static int CCTKARGNUM_ah_centroid_iteration_p = -1; \
static int CCTKARGNUM_ah_centroid_t = -1; \
static int CCTKGROUPNUM_ah_centroid = -1; \
static int CCTKARGNUM_ah_centroid_t_p = -1; \
static int CCTKARGNUM_ah_centroid_valid = -1; \
static int CCTKARGNUM_ah_centroid_valid_p = -1; \
static int CCTKARGNUM_ah_centroid_x = -1; \
static int CCTKARGNUM_ah_centroid_x_p = -1; \
static int CCTKARGNUM_ah_centroid_y = -1; \
static int CCTKARGNUM_ah_centroid_y_p = -1; \
static int CCTKARGNUM_ah_centroid_z = -1; \
static int CCTKARGNUM_ah_centroid_z_p = -1; \
static int CCTKARGNUM_ah_found_flag = -1; \
static int CCTKARGNUM_ah_initial_find_flag = -1; \
static int CCTKARGNUM_ah_origin_x = -1; \
static int CCTKGROUPNUM_ah_origin = -1; \
static int CCTKARGNUM_ah_origin_y = -1; \
static int CCTKARGNUM_ah_origin_z = -1; \
static int CCTKARGNUM_ah_radius = -1; \
static int CCTKGROUPNUM_ah_radius = -1; \
static int CCTKARGNUM_ah_really_initial_find_flag = -1; \
static int CCTKARGNUM_ah_search_flag = -1; \
static int CCTKARGNUM_b_phi_VolInt = -1; \
static int CCTKARGNUM_bh_posn_x = -1; \
static int CCTKGROUPNUM_bh_posns = -1; \
static int CCTKARGNUM_bh_posn_y = -1; \
static int CCTKARGNUM_bh_posn_z = -1; \
static int CCTKARGNUM_bh_radius_z = -1; \
static int CCTKARGNUM_brem_qee_VolInt = -1; \
static int CCTKARGNUM_brem_qei_VolInt = -1; \
static int CCTKARGNUM_chi = -1; \
static int CCTKARGNUM_chi_rad = -1; \
static int CCTKARGNUM_chi_rad_nue = -1; \
static int CCTKARGNUM_chi_rad_nux = -1; \
static int CCTKARGNUM_chi_rhs = -1; \
static int CCTKARGNUM_cmax = -1; \
static int CCTKARGNUM_cmax_rad = -1; \
static int CCTKARGNUM_cmax_rad_nue = -1; \
static int CCTKARGNUM_cmax_rad_nux = -1; \
static int CCTKARGNUM_cmin = -1; \
static int CCTKARGNUM_cmin_rad = -1; \
static int CCTKARGNUM_cmin_rad_nue = -1; \
static int CCTKARGNUM_cmin_rad_nux = -1; \
static int CCTKARGNUM_dBx_m = -1; \
static int CCTKGROUPNUM_mhd_sync_nablas = -1; \
static int CCTKARGNUM_dBy_m = -1; \
static int CCTKARGNUM_dBz_m = -1; \
static int CCTKARGNUM_dP_m = -1; \
static int CCTKARGNUM_dT_fluid_m = -1; \
static int CCTKGROUPNUM_micphys_sync_nablas = -1; \
static int CCTKARGNUM_ddrbrvec = -1; \
static int CCTKGROUPNUM_surf_params = -1; \
static int CCTKARGNUM_density_modes_i1 = -1; \
static int CCTKARGNUM_density_modes_i2 = -1; \
static int CCTKARGNUM_density_modes_i3 = -1; \
static int CCTKARGNUM_density_modes_i4 = -1; \
static int CCTKARGNUM_density_modes_i5 = -1; \
static int CCTKARGNUM_density_modes_i6 = -1; \
static int CCTKARGNUM_density_modes_r0 = -1; \
static int CCTKARGNUM_density_modes_r1 = -1; \
static int CCTKARGNUM_density_modes_r2 = -1; \
static int CCTKARGNUM_density_modes_r3 = -1; \
static int CCTKARGNUM_density_modes_r4 = -1; \
static int CCTKARGNUM_density_modes_r5 = -1; \
static int CCTKARGNUM_density_modes_r6 = -1; \
static int CCTKARGNUM_div_beta = -1; \
static int CCTKARGNUM_drbrvec = -1; \
static int CCTKARGNUM_drhoYe_m = -1; \
static int CCTKARGNUM_drhoYe_m_x = -1; \
static int CCTKGROUPNUM_mhd_sync_nablas_diag = -1; \
static int CCTKARGNUM_drhoYe_m_xp1 = -1; \
static int CCTKARGNUM_drho_b_m = -1; \
static int CCTKARGNUM_drho_b_m_x = -1; \
static int CCTKARGNUM_drho_b_m_xp1 = -1; \
static int CCTKARGNUM_dvx_m = -1; \
static int CCTKARGNUM_dvx_m_x = -1; \
static int CCTKARGNUM_dvx_m_xp1 = -1; \
static int CCTKARGNUM_dvy_m = -1; \
static int CCTKARGNUM_dvz_m = -1; \
static int CCTKARGNUM_em_J_between_VolInt = -1; \
static int CCTKARGNUM_em_energy2_VolInt = -1; \
static int CCTKARGNUM_em_energy_VolInt = -1; \
static int CCTKARGNUM_em_energy_between_VolInt = -1; \
static int CCTKARGNUM_em_energy_outsideBH_VolInt = -1; \
static int CCTKARGNUM_em_energy_outsideradius1_VolInt = -1; \
static int CCTKARGNUM_em_energy_outsideradius2_VolInt = -1; \
static int CCTKARGNUM_emission_gf = -1; \
static int CCTKARGNUM_emission_gf_nue = -1; \
static int CCTKARGNUM_emission_gf_nux = -1; \
static int CCTKARGNUM_eps_cld = -1; \
static int CCTKARGNUM_eps_tab = -1; \
static int CCTKARGNUM_eps_thermal = -1; \
static int CCTKARGNUM_eps_tot = -1; \
static int CCTKARGNUM_eta_nue = -1; \
static int CCTKARGNUM_excision_zone_gf = -1; \
static int CCTKGROUPNUM_excision_int_gfs = -1; \
static int CCTKARGNUM_fluid_J_horiz_VolInt = -1; \
static int CCTKARGNUM_fluid_J_r1_VolInt = -1; \
static int CCTKARGNUM_fluid_J_r2_VolInt = -1; \
static int CCTKARGNUM_fluid_J_r3_VolInt = -1; \
static int CCTKARGNUM_fluid_energy_horiz_VolInt = -1; \
static int CCTKARGNUM_fluid_energy_r1_VolInt = -1; \
static int CCTKARGNUM_fluid_energy_r2_VolInt = -1; \
static int CCTKARGNUM_fluid_energy_r3_VolInt = -1; \
static int CCTKARGNUM_gamma_tab = -1; \
static int CCTKGROUPNUM_eos_params2 = -1; \
static int CCTKARGNUM_gconx = -1; \
static int CCTKARGNUM_gcony = -1; \
static int CCTKARGNUM_gconz = -1; \
static int CCTKARGNUM_gupxx = -1; \
static int CCTKGROUPNUM_BSSN_gupij = -1; \
static int CCTKARGNUM_gupxx_f = -1; \
static int CCTKGROUPNUM_mhd_sync_metric_facevals = -1; \
static int CCTKARGNUM_gupxy = -1; \
static int CCTKARGNUM_gupxy_f = -1; \
static int CCTKARGNUM_gupxz = -1; \
static int CCTKARGNUM_gupxz_f = -1; \
static int CCTKARGNUM_gupyy = -1; \
static int CCTKARGNUM_gupyy_f = -1; \
static int CCTKARGNUM_gupyz = -1; \
static int CCTKARGNUM_gupyz_f = -1; \
static int CCTKARGNUM_gupzz = -1; \
static int CCTKARGNUM_gupzz_f = -1; \
static int CCTKARGNUM_gxx = -1; \
static int CCTKARGNUM_gxx_f = -1; \
static int CCTKARGNUM_gxx_rhs = -1; \
static int CCTKARGNUM_gxxx = -1; \
static int CCTKARGNUM_gxxy = -1; \
static int CCTKARGNUM_gxxz = -1; \
static int CCTKARGNUM_gxy = -1; \
static int CCTKARGNUM_gxy_f = -1; \
static int CCTKARGNUM_gxy_rhs = -1; \
static int CCTKARGNUM_gxyx = -1; \
static int CCTKARGNUM_gxyy = -1; \
static int CCTKARGNUM_gxyz = -1; \
static int CCTKARGNUM_gxz = -1; \
static int CCTKARGNUM_gxz_f = -1; \
static int CCTKARGNUM_gxz_rhs = -1; \
static int CCTKARGNUM_gxzx = -1; \
static int CCTKARGNUM_gxzy = -1; \
static int CCTKARGNUM_gxzz = -1; \
static int CCTKARGNUM_gyy = -1; \
static int CCTKARGNUM_gyy_f = -1; \
static int CCTKARGNUM_gyy_rhs = -1; \
static int CCTKARGNUM_gyyx = -1; \
static int CCTKARGNUM_gyyy = -1; \
static int CCTKARGNUM_gyyz = -1; \
static int CCTKARGNUM_gyz = -1; \
static int CCTKARGNUM_gyz_f = -1; \
static int CCTKARGNUM_gyz_rhs = -1; \
static int CCTKARGNUM_gyzx = -1; \
static int CCTKARGNUM_gyzy = -1; \
static int CCTKARGNUM_gyzz = -1; \
static int CCTKARGNUM_gzz = -1; \
static int CCTKARGNUM_gzz_f = -1; \
static int CCTKARGNUM_gzz_rhs = -1; \
static int CCTKARGNUM_gzzx = -1; \
static int CCTKARGNUM_gzzy = -1; \
static int CCTKARGNUM_gzzz = -1; \
static int CCTKARGNUM_h = -1; \
static int CCTKARGNUM_h_p = -1; \
static int CCTKARGNUM_half_b2_u0_VolInt = -1; \
static int CCTKARGNUM_half_b2_u0_outsideBH_VolInt = -1; \
static int CCTKARGNUM_have_global_bdry_max = -1; \
static int CCTKGROUPNUM_have_global_bdry = -1; \
static int CCTKARGNUM_have_global_bdry_min = -1; \
static int CCTKARGNUM_int_momentsi = -1; \
static int CCTKGROUPNUM_gw_moment_arrays = -1; \
static int CCTKARGNUM_int_momentsr = -1; \
static int CCTKARGNUM_k_tab = -1; \
static int CCTKARGNUM_ka_gf = -1; \
static int CCTKARGNUM_ka_gf_nue = -1; \
static int CCTKARGNUM_ka_gf_nux = -1; \
static int CCTKARGNUM_ks_gf = -1; \
static int CCTKARGNUM_ks_gf_nue = -1; \
static int CCTKARGNUM_ks_gf_nux = -1; \
static int CCTKARGNUM_kxx = -1; \
static int CCTKGROUPNUM_BSSN_AH = -1; \
static int CCTKARGNUM_kxy = -1; \
static int CCTKARGNUM_kxz = -1; \
static int CCTKARGNUM_kyy = -1; \
static int CCTKARGNUM_kyz = -1; \
static int CCTKARGNUM_kzz = -1; \
static int CCTKARGNUM_lapm1 = -1; \
static int CCTKGROUPNUM_lapse_vars = -1; \
static int CCTKARGNUM_lapm1_f = -1; \
static int CCTKARGNUM_lapm1_rhs = -1; \
static int CCTKGROUPNUM_lapse_rhs = -1; \
static int CCTKARGNUM_lapm1_rot1 = -1; \
static int CCTKARGNUM_lapm1_rot2 = -1; \
static int CCTKARGNUM_lapm1_rot3 = -1; \
static int CCTKARGNUM_lapset = -1; \
static int CCTKARGNUM_lapset_rhs = -1; \
static int CCTKARGNUM_lapset_timederiv = -1; \
static int CCTKGROUPNUM_lapse_vars_aux = -1; \
static int CCTKARGNUM_lapsex = -1; \
static int CCTKGROUPNUM_lapse_derivatives = -1; \
static int CCTKARGNUM_lapsey = -1; \
static int CCTKARGNUM_lapsez = -1; \
static int CCTKARGNUM_mass_star1 = -1; \
static int CCTKARGNUM_mass_star2 = -1; \
static int CCTKARGNUM_mhd_chi_line = -1; \
static int CCTKGROUPNUM_field_line_variables = -1; \
static int CCTKARGNUM_mhd_chi_line_rhs = -1; \
static int CCTKGROUPNUM_field_line_variables_rhs = -1; \
static int CCTKARGNUM_mhd_psi_line = -1; \
static int CCTKARGNUM_mhd_psi_line_rhs = -1; \
static int CCTKARGNUM_mhd_st_x = -1; \
static int CCTKGROUPNUM_mhd_conservatives = -1; \
static int CCTKARGNUM_mhd_st_x_rhs = -1; \
static int CCTKGROUPNUM_mhd_rhs = -1; \
static int CCTKARGNUM_mhd_st_y = -1; \
static int CCTKARGNUM_mhd_st_y_rhs = -1; \
static int CCTKARGNUM_mhd_st_z = -1; \
static int CCTKARGNUM_mhd_st_z_rhs = -1; \
static int CCTKARGNUM_mhd_u_chi = -1; \
static int CCTKARGNUM_mhd_u_chi_rhs = -1; \
static int CCTKARGNUM_mhd_u_psi = -1; \
static int CCTKARGNUM_mhd_u_psi_rhs = -1; \
static int CCTKARGNUM_minternal_cold_horiz_VolInt = -1; \
static int CCTKARGNUM_minternal_cold_r1_VolInt = -1; \
static int CCTKARGNUM_minternal_cold_r2_VolInt = -1; \
static int CCTKARGNUM_minternal_cold_r3_VolInt = -1; \
static int CCTKARGNUM_minternal_horiz_VolInt = -1; \
static int CCTKARGNUM_minternal_r1_VolInt = -1; \
static int CCTKARGNUM_minternal_r2_VolInt = -1; \
static int CCTKARGNUM_minternal_r3_VolInt = -1; \
static int CCTKARGNUM_mom_const_VolIntD = -1; \
static int CCTKARGNUM_mom_const_excised_VolIntD = -1; \
static int CCTKARGNUM_momentsi = -1; \
static int CCTKARGNUM_momentsi_old = -1; \
static int CCTKARGNUM_momentsr = -1; \
static int CCTKARGNUM_momentsr_old = -1; \
static int CCTKARGNUM_momx_const_VolIntN = -1; \
static int CCTKARGNUM_momx_const_excised_VolIntN = -1; \
static int CCTKARGNUM_momy_const_VolIntN = -1; \
static int CCTKARGNUM_momy_const_excised_VolIntN = -1; \
static int CCTKARGNUM_momz_const_VolIntN = -1; \
static int CCTKARGNUM_momz_const_excised_VolIntN = -1; \
static int CCTKARGNUM_monopole_VolInt = -1; \
static int CCTKARGNUM_monopole_outsideBH_VolInt = -1; \
static int CCTKARGNUM_mu_nu = -1; \
static int CCTKARGNUM_n_poly = -1; \
static int CCTKGROUPNUM_mhdscalar = -1; \
static int CCTKARGNUM_odd_momentsi = -1; \
static int CCTKARGNUM_odd_momentsi_old = -1; \
static int CCTKARGNUM_odd_momentsr = -1; \
static int CCTKARGNUM_odd_momentsr_old = -1; \
static int CCTKARGNUM_optd = -1; \
static int CCTKARGNUM_optd_x = -1; \
static int CCTKARGNUM_optd_y = -1; \
static int CCTKARGNUM_optd_z = -1; \
static int CCTKARGNUM_pfloor_gf = -1; \
static int CCTKARGNUM_phi = -1; \
static int CCTKARGNUM_phi_f = -1; \
static int CCTKARGNUM_phi_rhs = -1; \
static int CCTKARGNUM_phi_rot1 = -1; \
static int CCTKARGNUM_phi_rot2 = -1; \
static int CCTKARGNUM_phi_rot3 = -1; \
static int CCTKARGNUM_phix = -1; \
static int CCTKGROUPNUM_phi_derivs = -1; \
static int CCTKARGNUM_phiy = -1; \
static int CCTKARGNUM_phiz = -1; \
static int CCTKARGNUM_psi = -1; \
static int CCTKARGNUM_psi0im = -1; \
static int CCTKGROUPNUM_Psi4_gw = -1; \
static int CCTKARGNUM_psi0re = -1; \
static int CCTKARGNUM_psi6phi = -1; \
static int CCTKGROUPNUM_em_Phi = -1; \
static int CCTKARGNUM_psi6phi_rhs = -1; \
static int CCTKGROUPNUM_em_Phi_rhs = -1; \
static int CCTKARGNUM_rad_const = -1; \
static int CCTKGROUPNUM_radscalar = -1; \
static int CCTKARGNUM_rad_energy_VolInt = -1; \
static int CCTKARGNUM_rad_energy_nue_VolInt = -1; \
static int CCTKARGNUM_rad_energy_nux_VolInt = -1; \
static int CCTKARGNUM_rbrvec = -1; \
static int CCTKARGNUM_refbd = -1; \
static int CCTKGROUPNUM_BSSN_refbd = -1; \
static int CCTKARGNUM_rho = -1; \
static int CCTKARGNUM_rhoYe = -1; \
static int CCTKGROUPNUM_micphys_conservatives = -1; \
static int CCTKARGNUM_rhoYe_rhs = -1; \
static int CCTKGROUPNUM_micphys_conservatives_rhs = -1; \
static int CCTKARGNUM_rho_b = -1; \
static int CCTKARGNUM_rho_b_atm_gf = -1; \
static int CCTKARGNUM_rho_bl = -1; \
static int CCTKGROUPNUM_mhd_sync_rho_br_rho_bl = -1; \
static int CCTKARGNUM_rho_br = -1; \
static int CCTKARGNUM_rho_star = -1; \
static int CCTKARGNUM_rho_star_rhs = -1; \
static int CCTKARGNUM_rho_tab = -1; \
static int CCTKARGNUM_rhob_floor = -1; \
static int CCTKARGNUM_rhovec = -1; \
static int CCTKARGNUM_sbt = -1; \
static int CCTKARGNUM_sbx = -1; \
static int CCTKARGNUM_sby = -1; \
static int CCTKARGNUM_sbz = -1; \
static int CCTKARGNUM_shiftp_rot1 = -1; \
static int CCTKARGNUM_shiftp_rot2 = -1; \
static int CCTKARGNUM_shiftp_rot3 = -1; \
static int CCTKARGNUM_shiftr_rot1 = -1; \
static int CCTKARGNUM_shiftr_rot2 = -1; \
static int CCTKARGNUM_shiftr_rot3 = -1; \
static int CCTKARGNUM_shiftth_rot1 = -1; \
static int CCTKARGNUM_shiftth_rot2 = -1; \
static int CCTKARGNUM_shiftth_rot3 = -1; \
static int CCTKARGNUM_shiftx = -1; \
static int CCTKGROUPNUM_shift_vars = -1; \
static int CCTKARGNUM_shiftx_f = -1; \
static int CCTKARGNUM_shiftx_rhs = -1; \
static int CCTKGROUPNUM_shift_rhs = -1; \
static int CCTKARGNUM_shiftxt = -1; \
static int CCTKARGNUM_shiftxt_rhs = -1; \
static int CCTKARGNUM_shiftxt_timederiv = -1; \
static int CCTKARGNUM_shifty = -1; \
static int CCTKARGNUM_shifty_f = -1; \
static int CCTKARGNUM_shifty_rhs = -1; \
static int CCTKARGNUM_shiftyt = -1; \
static int CCTKARGNUM_shiftyt_rhs = -1; \
static int CCTKARGNUM_shiftyt_timederiv = -1; \
static int CCTKARGNUM_shiftz = -1; \
static int CCTKARGNUM_shiftz_f = -1; \
static int CCTKARGNUM_shiftz_rhs = -1; \
static int CCTKARGNUM_shiftzt = -1; \
static int CCTKARGNUM_shiftzt_rhs = -1; \
static int CCTKARGNUM_shiftzt_timederiv = -1; \
static int CCTKARGNUM_smallb2 = -1; \
static int CCTKARGNUM_st_x = -1; \
static int CCTKARGNUM_st_y = -1; \
static int CCTKARGNUM_st_z = -1; \
static int CCTKARGNUM_surfvec = -1; \
static int CCTKARGNUM_synch_VolInt = -1; \
static int CCTKARGNUM_tau = -1; \
static int CCTKARGNUM_tau_rad = -1; \
static int CCTKARGNUM_tau_rad_nue = -1; \
static int CCTKARGNUM_tau_rad_nue_rhs = -1; \
static int CCTKARGNUM_tau_rad_nux = -1; \
static int CCTKARGNUM_tau_rad_nux_rhs = -1; \
static int CCTKARGNUM_tau_rad_rhs = -1; \
static int CCTKARGNUM_tau_rhs = -1; \
static int CCTKARGNUM_temp1 = -1; \
static int CCTKARGNUM_temp10 = -1; \
static int CCTKARGNUM_temp11 = -1; \
static int CCTKARGNUM_temp12 = -1; \
static int CCTKARGNUM_temp13 = -1; \
static int CCTKARGNUM_temp14 = -1; \
static int CCTKARGNUM_temp15 = -1; \
static int CCTKARGNUM_temp16 = -1; \
static int CCTKARGNUM_temp17 = -1; \
static int CCTKARGNUM_temp18 = -1; \
static int CCTKARGNUM_temp19 = -1; \
static int CCTKARGNUM_temp2 = -1; \
static int CCTKARGNUM_temp20 = -1; \
static int CCTKARGNUM_temp21 = -1; \
static int CCTKARGNUM_temp22 = -1; \
static int CCTKARGNUM_temp23 = -1; \
static int CCTKARGNUM_temp24 = -1; \
static int CCTKARGNUM_temp25 = -1; \
static int CCTKARGNUM_temp26 = -1; \
static int CCTKARGNUM_temp3 = -1; \
static int CCTKARGNUM_temp4 = -1; \
static int CCTKARGNUM_temp5 = -1; \
static int CCTKARGNUM_temp6 = -1; \
static int CCTKARGNUM_temp7 = -1; \
static int CCTKARGNUM_temp8 = -1; \
static int CCTKARGNUM_temp9 = -1; \
static int CCTKARGNUM_temp_g00 = -1; \
static int CCTKARGNUM_trK = -1; \
static int CCTKARGNUM_trK_rhs = -1; \
static int CCTKARGNUM_trR = -1; \
static int CCTKARGNUM_trRtilde = -1; \
static int CCTKARGNUM_u0 = -1; \
static int CCTKARGNUM_v02_rad_nuel = -1; \
static int CCTKARGNUM_v02_rad_nuer = -1; \
static int CCTKARGNUM_v02_rad_nuxl = -1; \
static int CCTKARGNUM_v02_rad_nuxr = -1; \
static int CCTKARGNUM_v02_radl = -1; \
static int CCTKARGNUM_v02_radr = -1; \
static int CCTKARGNUM_v02l = -1; \
static int CCTKARGNUM_v02r = -1; \
static int CCTKARGNUM_vvec = -1; \
static int CCTKARGNUM_vx = -1; \
static int CCTKGROUPNUM_mhd_vs = -1; \
static int CCTKARGNUM_vxl = -1; \
static int CCTKARGNUM_vxr = -1; \
static int CCTKARGNUM_vy = -1; \
static int CCTKARGNUM_vyl = -1; \
static int CCTKARGNUM_vyr = -1; \
static int CCTKARGNUM_vz = -1; \
static int CCTKARGNUM_vzl = -1; \
static int CCTKARGNUM_vzr = -1; \
static int CCTKARGNUM_w = -1; \
static int CCTKARGNUM_zeta_rad = -1; \
static int CCTKARGNUM_zeta_rad_nue = -1; \
static int CCTKARGNUM_zeta_rad_nux = -1;

#define INITIALISE_ANG_FREQ_OFBFIELD_PROTECTED_C2F \
if(CCTKARGNUM_Aupxx == -1) CCTKARGNUM_Aupxx = CCTK_VarIndex("BSSN::Aupxx"); \
if(CCTKGROUPNUM_BSSN_aux_private == -1) CCTKGROUPNUM_BSSN_aux_private = CCTK_GroupIndex("BSSN::BSSN_aux_private"); \
if(CCTKARGNUM_Aupxy == -1) CCTKARGNUM_Aupxy = CCTK_VarIndex("BSSN::Aupxy"); \
if(CCTKARGNUM_Aupxz == -1) CCTKARGNUM_Aupxz = CCTK_VarIndex("BSSN::Aupxz"); \
if(CCTKARGNUM_Aupyy == -1) CCTKARGNUM_Aupyy = CCTK_VarIndex("BSSN::Aupyy"); \
if(CCTKARGNUM_Aupyz == -1) CCTKARGNUM_Aupyz = CCTK_VarIndex("BSSN::Aupyz"); \
if(CCTKARGNUM_Aupzz == -1) CCTKARGNUM_Aupzz = CCTK_VarIndex("BSSN::Aupzz"); \
if(CCTKARGNUM_Ax == -1) CCTKARGNUM_Ax = CCTK_VarIndex("MHD_EVOLVE::Ax"); \
if(CCTKGROUPNUM_em_Ax == -1) CCTKGROUPNUM_em_Ax = CCTK_GroupIndex("MHD_EVOLVE::em_Ax"); \
if(CCTKARGNUM_Axx == -1) CCTKARGNUM_Axx = CCTK_VarIndex("BSSN::Axx"); \
if(CCTKGROUPNUM_BSSN_vars == -1) CCTKGROUPNUM_BSSN_vars = CCTK_GroupIndex("BSSN::BSSN_vars"); \
if(CCTKARGNUM_Axx_rhs == -1) CCTKARGNUM_Axx_rhs = CCTK_VarIndex("BSSN::Axx_rhs"); \
if(CCTKGROUPNUM_BSSN_rhs == -1) CCTKGROUPNUM_BSSN_rhs = CCTK_GroupIndex("BSSN::BSSN_rhs"); \
if(CCTKARGNUM_Axy == -1) CCTKARGNUM_Axy = CCTK_VarIndex("BSSN::Axy"); \
if(CCTKARGNUM_Axy_rhs == -1) CCTKARGNUM_Axy_rhs = CCTK_VarIndex("BSSN::Axy_rhs"); \
if(CCTKARGNUM_Axz == -1) CCTKARGNUM_Axz = CCTK_VarIndex("BSSN::Axz"); \
if(CCTKARGNUM_Axz_rhs == -1) CCTKARGNUM_Axz_rhs = CCTK_VarIndex("BSSN::Axz_rhs"); \
if(CCTKARGNUM_Ay == -1) CCTKARGNUM_Ay = CCTK_VarIndex("MHD_EVOLVE::Ay"); \
if(CCTKGROUPNUM_em_Ay == -1) CCTKGROUPNUM_em_Ay = CCTK_GroupIndex("MHD_EVOLVE::em_Ay"); \
if(CCTKARGNUM_Ayy == -1) CCTKARGNUM_Ayy = CCTK_VarIndex("BSSN::Ayy"); \
if(CCTKARGNUM_Ayy_rhs == -1) CCTKARGNUM_Ayy_rhs = CCTK_VarIndex("BSSN::Ayy_rhs"); \
if(CCTKARGNUM_Ayz == -1) CCTKARGNUM_Ayz = CCTK_VarIndex("BSSN::Ayz"); \
if(CCTKARGNUM_Ayz_rhs == -1) CCTKARGNUM_Ayz_rhs = CCTK_VarIndex("BSSN::Ayz_rhs"); \
if(CCTKARGNUM_Az == -1) CCTKARGNUM_Az = CCTK_VarIndex("MHD_EVOLVE::Az"); \
if(CCTKGROUPNUM_em_Az == -1) CCTKGROUPNUM_em_Az = CCTK_GroupIndex("MHD_EVOLVE::em_Az"); \
if(CCTKARGNUM_Azz == -1) CCTKARGNUM_Azz = CCTK_VarIndex("BSSN::Azz"); \
if(CCTKARGNUM_Azz_rhs == -1) CCTKARGNUM_Azz_rhs = CCTK_VarIndex("BSSN::Azz_rhs"); \
if(CCTKARGNUM_Bfreq1 == -1) CCTKARGNUM_Bfreq1 = CCTK_VarIndex("ang_freq_ofBfield::Bfreq1"); \
if(CCTKGROUPNUM_OmegF == -1) CCTKGROUPNUM_OmegF = CCTK_GroupIndex("ang_freq_ofBfield::OmegF"); \
if(CCTKARGNUM_Bfreq2 == -1) CCTKARGNUM_Bfreq2 = CCTK_VarIndex("ang_freq_ofBfield::Bfreq2"); \
if(CCTKARGNUM_Blagrangemultiplier == -1) CCTKARGNUM_Blagrangemultiplier = CCTK_VarIndex("MHD_EVOLVE::Blagrangemultiplier"); \
if(CCTKGROUPNUM_em_Blagrangemultiplier == -1) CCTKGROUPNUM_em_Blagrangemultiplier = CCTK_GroupIndex("MHD_EVOLVE::em_Blagrangemultiplier"); \
if(CCTKARGNUM_Blagrangemultiplier_rhs == -1) CCTKARGNUM_Blagrangemultiplier_rhs = CCTK_VarIndex("MHD_EVOLVE::Blagrangemultiplier_rhs"); \
if(CCTKGROUPNUM_em_Blagrangemultiplier_rhs == -1) CCTKGROUPNUM_em_Blagrangemultiplier_rhs = CCTK_GroupIndex("MHD_EVOLVE::em_Blagrangemultiplier_rhs"); \
if(CCTKARGNUM_Box1X_VolInt == -1) CCTKARGNUM_Box1X_VolInt = CCTK_VarIndex("MOVINGBOX::Box1X_VolInt"); \
if(CCTKGROUPNUM_volIntegrals_movingbox == -1) CCTKGROUPNUM_volIntegrals_movingbox = CCTK_GroupIndex("MOVINGBOX::volIntegrals_movingbox"); \
if(CCTKARGNUM_Box1X_VolInt1 == -1) CCTKARGNUM_Box1X_VolInt1 = CCTK_VarIndex("MOVINGBOX::Box1X_VolInt1"); \
if(CCTKARGNUM_Box1X_VolInt2 == -1) CCTKARGNUM_Box1X_VolInt2 = CCTK_VarIndex("MOVINGBOX::Box1X_VolInt2"); \
if(CCTKARGNUM_Box1Y_VolInt == -1) CCTKARGNUM_Box1Y_VolInt = CCTK_VarIndex("MOVINGBOX::Box1Y_VolInt"); \
if(CCTKARGNUM_Box1Y_VolInt1 == -1) CCTKARGNUM_Box1Y_VolInt1 = CCTK_VarIndex("MOVINGBOX::Box1Y_VolInt1"); \
if(CCTKARGNUM_Box1Y_VolInt2 == -1) CCTKARGNUM_Box1Y_VolInt2 = CCTK_VarIndex("MOVINGBOX::Box1Y_VolInt2"); \
if(CCTKARGNUM_Box1Z_VolInt == -1) CCTKARGNUM_Box1Z_VolInt = CCTK_VarIndex("MOVINGBOX::Box1Z_VolInt"); \
if(CCTKARGNUM_Box1Z_VolInt1 == -1) CCTKARGNUM_Box1Z_VolInt1 = CCTK_VarIndex("MOVINGBOX::Box1Z_VolInt1"); \
if(CCTKARGNUM_Box1Z_VolInt2 == -1) CCTKARGNUM_Box1Z_VolInt2 = CCTK_VarIndex("MOVINGBOX::Box1Z_VolInt2"); \
if(CCTKARGNUM_Box1denom_VolInt == -1) CCTKARGNUM_Box1denom_VolInt = CCTK_VarIndex("MOVINGBOX::Box1denom_VolInt"); \
if(CCTKARGNUM_Box1denom_VolInt1 == -1) CCTKARGNUM_Box1denom_VolInt1 = CCTK_VarIndex("MOVINGBOX::Box1denom_VolInt1"); \
if(CCTKARGNUM_Box1denom_VolInt2 == -1) CCTKARGNUM_Box1denom_VolInt2 = CCTK_VarIndex("MOVINGBOX::Box1denom_VolInt2"); \
if(CCTKARGNUM_Bx == -1) CCTKARGNUM_Bx = CCTK_VarIndex("MHD_EVOLVE::Bx"); \
if(CCTKGROUPNUM_mhd_primitives == -1) CCTKGROUPNUM_mhd_primitives = CCTK_GroupIndex("MHD_EVOLVE::mhd_primitives"); \
if(CCTKARGNUM_Bx_stagger == -1) CCTKARGNUM_Bx_stagger = CCTK_VarIndex("MHD_EVOLVE::Bx_stagger"); \
if(CCTKGROUPNUM_Stagger_Bs == -1) CCTKGROUPNUM_Stagger_Bs = CCTK_GroupIndex("MHD_EVOLVE::Stagger_Bs"); \
if(CCTKARGNUM_Bxl == -1) CCTKARGNUM_Bxl = CCTK_VarIndex("MHD_EVOLVE::Bxl"); \
if(CCTKGROUPNUM_mhd_sync_lr_B_quantities == -1) CCTKGROUPNUM_mhd_sync_lr_B_quantities = CCTK_GroupIndex("MHD_EVOLVE::mhd_sync_lr_B_quantities"); \
if(CCTKARGNUM_Bxr == -1) CCTKARGNUM_Bxr = CCTK_VarIndex("MHD_EVOLVE::Bxr"); \
if(CCTKARGNUM_Bxtilde == -1) CCTKARGNUM_Bxtilde = CCTK_VarIndex("MHD_EVOLVE::Bxtilde"); \
if(CCTKGROUPNUM_em_conservativex == -1) CCTKGROUPNUM_em_conservativex = CCTK_GroupIndex("MHD_EVOLVE::em_conservativex"); \
if(CCTKARGNUM_Bxtilde_or_Ax_rhs == -1) CCTKARGNUM_Bxtilde_or_Ax_rhs = CCTK_VarIndex("MHD_EVOLVE::Bxtilde_or_Ax_rhs"); \
if(CCTKGROUPNUM_em_rhsx == -1) CCTKGROUPNUM_em_rhsx = CCTK_GroupIndex("MHD_EVOLVE::em_rhsx"); \
if(CCTKARGNUM_By == -1) CCTKARGNUM_By = CCTK_VarIndex("MHD_EVOLVE::By"); \
if(CCTKARGNUM_By_stagger == -1) CCTKARGNUM_By_stagger = CCTK_VarIndex("MHD_EVOLVE::By_stagger"); \
if(CCTKARGNUM_Byl == -1) CCTKARGNUM_Byl = CCTK_VarIndex("MHD_EVOLVE::Byl"); \
if(CCTKARGNUM_Byr == -1) CCTKARGNUM_Byr = CCTK_VarIndex("MHD_EVOLVE::Byr"); \
if(CCTKARGNUM_Bytilde == -1) CCTKARGNUM_Bytilde = CCTK_VarIndex("MHD_EVOLVE::Bytilde"); \
if(CCTKGROUPNUM_em_conservativey == -1) CCTKGROUPNUM_em_conservativey = CCTK_GroupIndex("MHD_EVOLVE::em_conservativey"); \
if(CCTKARGNUM_Bytilde_or_Ay_rhs == -1) CCTKARGNUM_Bytilde_or_Ay_rhs = CCTK_VarIndex("MHD_EVOLVE::Bytilde_or_Ay_rhs"); \
if(CCTKGROUPNUM_em_rhsy == -1) CCTKGROUPNUM_em_rhsy = CCTK_GroupIndex("MHD_EVOLVE::em_rhsy"); \
if(CCTKARGNUM_Bz == -1) CCTKARGNUM_Bz = CCTK_VarIndex("MHD_EVOLVE::Bz"); \
if(CCTKARGNUM_Bz_stagger == -1) CCTKARGNUM_Bz_stagger = CCTK_VarIndex("MHD_EVOLVE::Bz_stagger"); \
if(CCTKARGNUM_Bzl == -1) CCTKARGNUM_Bzl = CCTK_VarIndex("MHD_EVOLVE::Bzl"); \
if(CCTKARGNUM_Bzr == -1) CCTKARGNUM_Bzr = CCTK_VarIndex("MHD_EVOLVE::Bzr"); \
if(CCTKARGNUM_Bztilde == -1) CCTKARGNUM_Bztilde = CCTK_VarIndex("MHD_EVOLVE::Bztilde"); \
if(CCTKGROUPNUM_em_conservativez == -1) CCTKGROUPNUM_em_conservativez = CCTK_GroupIndex("MHD_EVOLVE::em_conservativez"); \
if(CCTKARGNUM_Bztilde_or_Az_rhs == -1) CCTKARGNUM_Bztilde_or_Az_rhs = CCTK_VarIndex("MHD_EVOLVE::Bztilde_or_Az_rhs"); \
if(CCTKGROUPNUM_em_rhsz == -1) CCTKGROUPNUM_em_rhsz = CCTK_GroupIndex("MHD_EVOLVE::em_rhsz"); \
if(CCTKARGNUM_CoM_VolInt_denominator == -1) CCTKARGNUM_CoM_VolInt_denominator = CCTK_VarIndex("DIAGNOSTICS_MHD::CoM_VolInt_denominator"); \
if(CCTKGROUPNUM_volIntegrals_mhd == -1) CCTKGROUPNUM_volIntegrals_mhd = CCTK_GroupIndex("DIAGNOSTICS_MHD::volIntegrals_mhd"); \
if(CCTKARGNUM_CoMx_VolInt == -1) CCTKARGNUM_CoMx_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::CoMx_VolInt"); \
if(CCTKARGNUM_CoMy_VolInt == -1) CCTKARGNUM_CoMy_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::CoMy_VolInt"); \
if(CCTKARGNUM_CoMz_VolInt == -1) CCTKARGNUM_CoMz_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::CoMz_VolInt"); \
if(CCTKARGNUM_E_rad == -1) CCTKARGNUM_E_rad = CCTK_VarIndex("MHD_EVOLVE::E_rad"); \
if(CCTKGROUPNUM_rad_primitives == -1) CCTKGROUPNUM_rad_primitives = CCTK_GroupIndex("MHD_EVOLVE::rad_primitives"); \
if(CCTKARGNUM_E_rad_nue == -1) CCTKARGNUM_E_rad_nue = CCTK_VarIndex("MHD_EVOLVE::E_rad_nue"); \
if(CCTKARGNUM_E_rad_nuel == -1) CCTKARGNUM_E_rad_nuel = CCTK_VarIndex("MHD_EVOLVE::E_rad_nuel"); \
if(CCTKGROUPNUM_rad_sync_lr == -1) CCTKGROUPNUM_rad_sync_lr = CCTK_GroupIndex("MHD_EVOLVE::rad_sync_lr"); \
if(CCTKARGNUM_E_rad_nuer == -1) CCTKARGNUM_E_rad_nuer = CCTK_VarIndex("MHD_EVOLVE::E_rad_nuer"); \
if(CCTKARGNUM_E_rad_nux == -1) CCTKARGNUM_E_rad_nux = CCTK_VarIndex("MHD_EVOLVE::E_rad_nux"); \
if(CCTKARGNUM_E_rad_nuxl == -1) CCTKARGNUM_E_rad_nuxl = CCTK_VarIndex("MHD_EVOLVE::E_rad_nuxl"); \
if(CCTKARGNUM_E_rad_nuxr == -1) CCTKARGNUM_E_rad_nuxr = CCTK_VarIndex("MHD_EVOLVE::E_rad_nuxr"); \
if(CCTKARGNUM_E_radl == -1) CCTKARGNUM_E_radl = CCTK_VarIndex("MHD_EVOLVE::E_radl"); \
if(CCTKARGNUM_E_radr == -1) CCTKARGNUM_E_radr = CCTK_VarIndex("MHD_EVOLVE::E_radr"); \
if(CCTKARGNUM_Ex == -1) CCTKARGNUM_Ex = CCTK_VarIndex("MHD_EVOLVE::Ex"); \
if(CCTKARGNUM_Ey == -1) CCTKARGNUM_Ey = CCTK_VarIndex("MHD_EVOLVE::Ey"); \
if(CCTKARGNUM_Ez == -1) CCTKARGNUM_Ez = CCTK_VarIndex("MHD_EVOLVE::Ez"); \
if(CCTKARGNUM_F_rad0 == -1) CCTKARGNUM_F_rad0 = CCTK_VarIndex("MHD_EVOLVE::F_rad0"); \
if(CCTKGROUPNUM_rad_pressure == -1) CCTKGROUPNUM_rad_pressure = CCTK_GroupIndex("MHD_EVOLVE::rad_pressure"); \
if(CCTKARGNUM_F_rad0_nue == -1) CCTKARGNUM_F_rad0_nue = CCTK_VarIndex("MHD_EVOLVE::F_rad0_nue"); \
if(CCTKARGNUM_F_rad0_nux == -1) CCTKARGNUM_F_rad0_nux = CCTK_VarIndex("MHD_EVOLVE::F_rad0_nux"); \
if(CCTKARGNUM_F_rad_scalar == -1) CCTKARGNUM_F_rad_scalar = CCTK_VarIndex("MHD_EVOLVE::F_rad_scalar"); \
if(CCTKARGNUM_F_rad_scalar_nue == -1) CCTKARGNUM_F_rad_scalar_nue = CCTK_VarIndex("MHD_EVOLVE::F_rad_scalar_nue"); \
if(CCTKARGNUM_F_rad_scalar_nux == -1) CCTKARGNUM_F_rad_scalar_nux = CCTK_VarIndex("MHD_EVOLVE::F_rad_scalar_nux"); \
if(CCTKARGNUM_F_radx == -1) CCTKARGNUM_F_radx = CCTK_VarIndex("MHD_EVOLVE::F_radx"); \
if(CCTKARGNUM_F_radx_nue == -1) CCTKARGNUM_F_radx_nue = CCTK_VarIndex("MHD_EVOLVE::F_radx_nue"); \
if(CCTKARGNUM_F_radx_nuele == -1) CCTKARGNUM_F_radx_nuele = CCTK_VarIndex("MHD_EVOLVE::F_radx_nuele"); \
if(CCTKARGNUM_F_radx_nuer == -1) CCTKARGNUM_F_radx_nuer = CCTK_VarIndex("MHD_EVOLVE::F_radx_nuer"); \
if(CCTKARGNUM_F_radx_nux == -1) CCTKARGNUM_F_radx_nux = CCTK_VarIndex("MHD_EVOLVE::F_radx_nux"); \
if(CCTKARGNUM_F_radx_nuxle == -1) CCTKARGNUM_F_radx_nuxle = CCTK_VarIndex("MHD_EVOLVE::F_radx_nuxle"); \
if(CCTKARGNUM_F_radx_nuxr == -1) CCTKARGNUM_F_radx_nuxr = CCTK_VarIndex("MHD_EVOLVE::F_radx_nuxr"); \
if(CCTKARGNUM_F_radxle == -1) CCTKARGNUM_F_radxle = CCTK_VarIndex("MHD_EVOLVE::F_radxle"); \
if(CCTKARGNUM_F_radxr == -1) CCTKARGNUM_F_radxr = CCTK_VarIndex("MHD_EVOLVE::F_radxr"); \
if(CCTKARGNUM_F_rady == -1) CCTKARGNUM_F_rady = CCTK_VarIndex("MHD_EVOLVE::F_rady"); \
if(CCTKARGNUM_F_rady_nue == -1) CCTKARGNUM_F_rady_nue = CCTK_VarIndex("MHD_EVOLVE::F_rady_nue"); \
if(CCTKARGNUM_F_rady_nuele == -1) CCTKARGNUM_F_rady_nuele = CCTK_VarIndex("MHD_EVOLVE::F_rady_nuele"); \
if(CCTKARGNUM_F_rady_nuer == -1) CCTKARGNUM_F_rady_nuer = CCTK_VarIndex("MHD_EVOLVE::F_rady_nuer"); \
if(CCTKARGNUM_F_rady_nux == -1) CCTKARGNUM_F_rady_nux = CCTK_VarIndex("MHD_EVOLVE::F_rady_nux"); \
if(CCTKARGNUM_F_rady_nuxle == -1) CCTKARGNUM_F_rady_nuxle = CCTK_VarIndex("MHD_EVOLVE::F_rady_nuxle"); \
if(CCTKARGNUM_F_rady_nuxr == -1) CCTKARGNUM_F_rady_nuxr = CCTK_VarIndex("MHD_EVOLVE::F_rady_nuxr"); \
if(CCTKARGNUM_F_radyle == -1) CCTKARGNUM_F_radyle = CCTK_VarIndex("MHD_EVOLVE::F_radyle"); \
if(CCTKARGNUM_F_radyr == -1) CCTKARGNUM_F_radyr = CCTK_VarIndex("MHD_EVOLVE::F_radyr"); \
if(CCTKARGNUM_F_radz == -1) CCTKARGNUM_F_radz = CCTK_VarIndex("MHD_EVOLVE::F_radz"); \
if(CCTKARGNUM_F_radz_nue == -1) CCTKARGNUM_F_radz_nue = CCTK_VarIndex("MHD_EVOLVE::F_radz_nue"); \
if(CCTKARGNUM_F_radz_nuele == -1) CCTKARGNUM_F_radz_nuele = CCTK_VarIndex("MHD_EVOLVE::F_radz_nuele"); \
if(CCTKARGNUM_F_radz_nuer == -1) CCTKARGNUM_F_radz_nuer = CCTK_VarIndex("MHD_EVOLVE::F_radz_nuer"); \
if(CCTKARGNUM_F_radz_nux == -1) CCTKARGNUM_F_radz_nux = CCTK_VarIndex("MHD_EVOLVE::F_radz_nux"); \
if(CCTKARGNUM_F_radz_nuxle == -1) CCTKARGNUM_F_radz_nuxle = CCTK_VarIndex("MHD_EVOLVE::F_radz_nuxle"); \
if(CCTKARGNUM_F_radz_nuxr == -1) CCTKARGNUM_F_radz_nuxr = CCTK_VarIndex("MHD_EVOLVE::F_radz_nuxr"); \
if(CCTKARGNUM_F_radzle == -1) CCTKARGNUM_F_radzle = CCTK_VarIndex("MHD_EVOLVE::F_radzle"); \
if(CCTKARGNUM_F_radzr == -1) CCTKARGNUM_F_radzr = CCTK_VarIndex("MHD_EVOLVE::F_radzr"); \
if(CCTKARGNUM_FaFal == -1) CCTKARGNUM_FaFal = CCTK_VarIndex("MHD_EVOLVE::FaFal"); \
if(CCTKARGNUM_FaFal_nue == -1) CCTKARGNUM_FaFal_nue = CCTK_VarIndex("MHD_EVOLVE::FaFal_nue"); \
if(CCTKARGNUM_FaFal_nux == -1) CCTKARGNUM_FaFal_nux = CCTK_VarIndex("MHD_EVOLVE::FaFal_nux"); \
if(CCTKARGNUM_FaFar == -1) CCTKARGNUM_FaFar = CCTK_VarIndex("MHD_EVOLVE::FaFar"); \
if(CCTKARGNUM_FaFar_nue == -1) CCTKARGNUM_FaFar_nue = CCTK_VarIndex("MHD_EVOLVE::FaFar_nue"); \
if(CCTKARGNUM_FaFar_nux == -1) CCTKARGNUM_FaFar_nux = CCTK_VarIndex("MHD_EVOLVE::FaFar_nux"); \
if(CCTKARGNUM_Fontfix_tracker_gf == -1) CCTKARGNUM_Fontfix_tracker_gf = CCTK_VarIndex("MHD_EVOLVE::Fontfix_tracker_gf"); \
if(CCTKGROUPNUM_disk_atmosphere == -1) CCTKGROUPNUM_disk_atmosphere = CCTK_GroupIndex("MHD_EVOLVE::disk_atmosphere"); \
if(CCTKARGNUM_Gammax == -1) CCTKARGNUM_Gammax = CCTK_VarIndex("BSSN::Gammax"); \
if(CCTKARGNUM_Gammax_drive == -1) CCTKARGNUM_Gammax_drive = CCTK_VarIndex("SHIFT::Gammax_drive"); \
if(CCTKGROUPNUM_shift_vars_temp == -1) CCTKGROUPNUM_shift_vars_temp = CCTK_GroupIndex("SHIFT::shift_vars_temp"); \
if(CCTKARGNUM_Gammax_rhs == -1) CCTKARGNUM_Gammax_rhs = CCTK_VarIndex("BSSN::Gammax_rhs"); \
if(CCTKARGNUM_Gammaxxx == -1) CCTKARGNUM_Gammaxxx = CCTK_VarIndex("BSSN::Gammaxxx"); \
if(CCTKGROUPNUM_BSSN_aux_restrict2 == -1) CCTKGROUPNUM_BSSN_aux_restrict2 = CCTK_GroupIndex("BSSN::BSSN_aux_restrict2"); \
if(CCTKARGNUM_Gammaxxy == -1) CCTKARGNUM_Gammaxxy = CCTK_VarIndex("BSSN::Gammaxxy"); \
if(CCTKARGNUM_Gammaxxz == -1) CCTKARGNUM_Gammaxxz = CCTK_VarIndex("BSSN::Gammaxxz"); \
if(CCTKARGNUM_Gammaxyy == -1) CCTKARGNUM_Gammaxyy = CCTK_VarIndex("BSSN::Gammaxyy"); \
if(CCTKARGNUM_Gammaxyz == -1) CCTKARGNUM_Gammaxyz = CCTK_VarIndex("BSSN::Gammaxyz"); \
if(CCTKARGNUM_Gammaxzz == -1) CCTKARGNUM_Gammaxzz = CCTK_VarIndex("BSSN::Gammaxzz"); \
if(CCTKARGNUM_Gammay == -1) CCTKARGNUM_Gammay = CCTK_VarIndex("BSSN::Gammay"); \
if(CCTKARGNUM_Gammay_drive == -1) CCTKARGNUM_Gammay_drive = CCTK_VarIndex("SHIFT::Gammay_drive"); \
if(CCTKARGNUM_Gammay_rhs == -1) CCTKARGNUM_Gammay_rhs = CCTK_VarIndex("BSSN::Gammay_rhs"); \
if(CCTKARGNUM_Gammayxx == -1) CCTKARGNUM_Gammayxx = CCTK_VarIndex("BSSN::Gammayxx"); \
if(CCTKARGNUM_Gammayxy == -1) CCTKARGNUM_Gammayxy = CCTK_VarIndex("BSSN::Gammayxy"); \
if(CCTKARGNUM_Gammayxz == -1) CCTKARGNUM_Gammayxz = CCTK_VarIndex("BSSN::Gammayxz"); \
if(CCTKARGNUM_Gammayyy == -1) CCTKARGNUM_Gammayyy = CCTK_VarIndex("BSSN::Gammayyy"); \
if(CCTKARGNUM_Gammayyz == -1) CCTKARGNUM_Gammayyz = CCTK_VarIndex("BSSN::Gammayyz"); \
if(CCTKARGNUM_Gammayzz == -1) CCTKARGNUM_Gammayzz = CCTK_VarIndex("BSSN::Gammayzz"); \
if(CCTKARGNUM_Gammaz == -1) CCTKARGNUM_Gammaz = CCTK_VarIndex("BSSN::Gammaz"); \
if(CCTKARGNUM_Gammaz_drive == -1) CCTKARGNUM_Gammaz_drive = CCTK_VarIndex("SHIFT::Gammaz_drive"); \
if(CCTKARGNUM_Gammaz_rhs == -1) CCTKARGNUM_Gammaz_rhs = CCTK_VarIndex("BSSN::Gammaz_rhs"); \
if(CCTKARGNUM_Gammazxx == -1) CCTKARGNUM_Gammazxx = CCTK_VarIndex("BSSN::Gammazxx"); \
if(CCTKARGNUM_Gammazxy == -1) CCTKARGNUM_Gammazxy = CCTK_VarIndex("BSSN::Gammazxy"); \
if(CCTKARGNUM_Gammazxz == -1) CCTKARGNUM_Gammazxz = CCTK_VarIndex("BSSN::Gammazxz"); \
if(CCTKARGNUM_Gammazyy == -1) CCTKARGNUM_Gammazyy = CCTK_VarIndex("BSSN::Gammazyy"); \
if(CCTKARGNUM_Gammazyz == -1) CCTKARGNUM_Gammazyz = CCTK_VarIndex("BSSN::Gammazyz"); \
if(CCTKARGNUM_Gammazzz == -1) CCTKARGNUM_Gammazzz = CCTK_VarIndex("BSSN::Gammazzz"); \
if(CCTKARGNUM_Gamx_const_VolInt == -1) CCTKARGNUM_Gamx_const_VolInt = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Gamx_const_VolInt"); \
if(CCTKGROUPNUM_volIntegrals == -1) CCTKGROUPNUM_volIntegrals = CCTK_GroupIndex("DIAGNOSTICS_VACUUM::volIntegrals"); \
if(CCTKARGNUM_Gamy_const_VolInt == -1) CCTKARGNUM_Gamy_const_VolInt = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Gamy_const_VolInt"); \
if(CCTKARGNUM_Gamz_const_VolInt == -1) CCTKARGNUM_Gamz_const_VolInt = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Gamz_const_VolInt"); \
if(CCTKARGNUM_Ham_const_VolIntD == -1) CCTKARGNUM_Ham_const_VolIntD = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Ham_const_VolIntD"); \
if(CCTKARGNUM_Ham_const_VolIntN == -1) CCTKARGNUM_Ham_const_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Ham_const_VolIntN"); \
if(CCTKARGNUM_Ham_const_excised_VolIntD == -1) CCTKARGNUM_Ham_const_excised_VolIntD = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Ham_const_excised_VolIntD"); \
if(CCTKARGNUM_Ham_const_excised_VolIntN == -1) CCTKARGNUM_Ham_const_excised_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Ham_const_excised_VolIntN"); \
if(CCTKARGNUM_Ham_const_excised_innerregion_VolIntD == -1) CCTKARGNUM_Ham_const_excised_innerregion_VolIntD = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Ham_const_excised_innerregion_VolIntD"); \
if(CCTKARGNUM_Ham_const_excised_innerregion_VolIntN == -1) CCTKARGNUM_Ham_const_excised_innerregion_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Ham_const_excised_innerregion_VolIntN"); \
if(CCTKARGNUM_J_ADM_VolInt == -1) CCTKARGNUM_J_ADM_VolInt = CCTK_VarIndex("DIAGNOSTICS_VACUUM::J_ADM_VolInt"); \
if(CCTKARGNUM_J_ADM_VolInt_inner == -1) CCTKARGNUM_J_ADM_VolInt_inner = CCTK_VarIndex("DIAGNOSTICS_VACUUM::J_ADM_VolInt_inner"); \
if(CCTKARGNUM_J_ADM_VolInt_inner2 == -1) CCTKARGNUM_J_ADM_VolInt_inner2 = CCTK_VarIndex("DIAGNOSTICS_VACUUM::J_ADM_VolInt_inner2"); \
if(CCTKARGNUM_Jz_constraint == -1) CCTKARGNUM_Jz_constraint = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Jz_constraint"); \
if(CCTKARGNUM_Jz_constraint_inner == -1) CCTKARGNUM_Jz_constraint_inner = CCTK_VarIndex("DIAGNOSTICS_VACUUM::Jz_constraint_inner"); \
if(CCTKARGNUM_KK == -1) CCTKARGNUM_KK = CCTK_VarIndex("BSSN::KK"); \
if(CCTKGROUPNUM_BSSN_diag_restrict == -1) CCTKGROUPNUM_BSSN_diag_restrict = CCTK_GroupIndex("BSSN::BSSN_diag_restrict"); \
if(CCTKARGNUM_K_pp_rot1 == -1) CCTKARGNUM_K_pp_rot1 = CCTK_VarIndex("BSSN::K_pp_rot1"); \
if(CCTKGROUPNUM_metric_spher_pol_1 == -1) CCTKGROUPNUM_metric_spher_pol_1 = CCTK_GroupIndex("BSSN::metric_spher_pol_1"); \
if(CCTKARGNUM_K_pp_rot2 == -1) CCTKARGNUM_K_pp_rot2 = CCTK_VarIndex("BSSN::K_pp_rot2"); \
if(CCTKGROUPNUM_metric_spher_pol_2 == -1) CCTKGROUPNUM_metric_spher_pol_2 = CCTK_GroupIndex("BSSN::metric_spher_pol_2"); \
if(CCTKARGNUM_K_pp_rot3 == -1) CCTKARGNUM_K_pp_rot3 = CCTK_VarIndex("BSSN::K_pp_rot3"); \
if(CCTKGROUPNUM_metric_spher_pol_3 == -1) CCTKGROUPNUM_metric_spher_pol_3 = CCTK_GroupIndex("BSSN::metric_spher_pol_3"); \
if(CCTKARGNUM_K_rp_rot1 == -1) CCTKARGNUM_K_rp_rot1 = CCTK_VarIndex("BSSN::K_rp_rot1"); \
if(CCTKARGNUM_K_rp_rot2 == -1) CCTKARGNUM_K_rp_rot2 = CCTK_VarIndex("BSSN::K_rp_rot2"); \
if(CCTKARGNUM_K_rp_rot3 == -1) CCTKARGNUM_K_rp_rot3 = CCTK_VarIndex("BSSN::K_rp_rot3"); \
if(CCTKARGNUM_K_rr_rot1 == -1) CCTKARGNUM_K_rr_rot1 = CCTK_VarIndex("BSSN::K_rr_rot1"); \
if(CCTKARGNUM_K_rr_rot2 == -1) CCTKARGNUM_K_rr_rot2 = CCTK_VarIndex("BSSN::K_rr_rot2"); \
if(CCTKARGNUM_K_rr_rot3 == -1) CCTKARGNUM_K_rr_rot3 = CCTK_VarIndex("BSSN::K_rr_rot3"); \
if(CCTKARGNUM_K_rth_rot1 == -1) CCTKARGNUM_K_rth_rot1 = CCTK_VarIndex("BSSN::K_rth_rot1"); \
if(CCTKARGNUM_K_rth_rot2 == -1) CCTKARGNUM_K_rth_rot2 = CCTK_VarIndex("BSSN::K_rth_rot2"); \
if(CCTKARGNUM_K_rth_rot3 == -1) CCTKARGNUM_K_rth_rot3 = CCTK_VarIndex("BSSN::K_rth_rot3"); \
if(CCTKARGNUM_K_thp_rot1 == -1) CCTKARGNUM_K_thp_rot1 = CCTK_VarIndex("BSSN::K_thp_rot1"); \
if(CCTKARGNUM_K_thp_rot2 == -1) CCTKARGNUM_K_thp_rot2 = CCTK_VarIndex("BSSN::K_thp_rot2"); \
if(CCTKARGNUM_K_thp_rot3 == -1) CCTKARGNUM_K_thp_rot3 = CCTK_VarIndex("BSSN::K_thp_rot3"); \
if(CCTKARGNUM_K_thth_rot1 == -1) CCTKARGNUM_K_thth_rot1 = CCTK_VarIndex("BSSN::K_thth_rot1"); \
if(CCTKARGNUM_K_thth_rot2 == -1) CCTKARGNUM_K_thth_rot2 = CCTK_VarIndex("BSSN::K_thth_rot2"); \
if(CCTKARGNUM_K_thth_rot3 == -1) CCTKARGNUM_K_thth_rot3 = CCTK_VarIndex("BSSN::K_thth_rot3"); \
if(CCTKARGNUM_M0_AH_VolInt == -1) CCTKARGNUM_M0_AH_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_AH_VolInt"); \
if(CCTKARGNUM_M0_VolInt == -1) CCTKARGNUM_M0_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_VolInt"); \
if(CCTKARGNUM_M0_escape100M == -1) CCTKARGNUM_M0_escape100M = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_escape100M"); \
if(CCTKARGNUM_M0_escape30M == -1) CCTKARGNUM_M0_escape30M = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_escape30M"); \
if(CCTKARGNUM_M0_escape50M == -1) CCTKARGNUM_M0_escape50M = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_escape50M"); \
if(CCTKARGNUM_M0_escape70M == -1) CCTKARGNUM_M0_escape70M = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_escape70M"); \
if(CCTKARGNUM_M0_horiz_VolInt == -1) CCTKARGNUM_M0_horiz_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_horiz_VolInt"); \
if(CCTKARGNUM_M0_r1_VolInt == -1) CCTKARGNUM_M0_r1_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_r1_VolInt"); \
if(CCTKARGNUM_M0_r2_VolInt == -1) CCTKARGNUM_M0_r2_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_r2_VolInt"); \
if(CCTKARGNUM_M0_r3_VolInt == -1) CCTKARGNUM_M0_r3_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::M0_r3_VolInt"); \
if(CCTKARGNUM_MNorm == -1) CCTKARGNUM_MNorm = CCTK_VarIndex("BSSN::MNorm"); \
if(CCTKARGNUM_MONOPOLE == -1) CCTKARGNUM_MONOPOLE = CCTK_VarIndex("MHD_EVOLVE::MONOPOLE"); \
if(CCTKGROUPNUM_mhd_temps == -1) CCTKGROUPNUM_mhd_temps = CCTK_GroupIndex("MHD_EVOLVE::mhd_temps"); \
if(CCTKARGNUM_MRsx == -1) CCTKARGNUM_MRsx = CCTK_VarIndex("BSSN::MRsx"); \
if(CCTKARGNUM_MRsy == -1) CCTKARGNUM_MRsy = CCTK_VarIndex("BSSN::MRsy"); \
if(CCTKARGNUM_MRsz == -1) CCTKARGNUM_MRsz = CCTK_VarIndex("BSSN::MRsz"); \
if(CCTKARGNUM_M_ADM_VolInt == -1) CCTKARGNUM_M_ADM_VolInt = CCTK_VarIndex("DIAGNOSTICS_VACUUM::M_ADM_VolInt"); \
if(CCTKARGNUM_M_constraint == -1) CCTKARGNUM_M_constraint = CCTK_VarIndex("DIAGNOSTICS_VACUUM::M_constraint"); \
if(CCTKARGNUM_M_constraint_inner == -1) CCTKARGNUM_M_constraint_inner = CCTK_VarIndex("DIAGNOSTICS_VACUUM::M_constraint_inner"); \
if(CCTKARGNUM_Minternal_VolInt == -1) CCTKARGNUM_Minternal_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::Minternal_VolInt"); \
if(CCTKARGNUM_Minternal_cold_VolInt == -1) CCTKARGNUM_Minternal_cold_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::Minternal_cold_VolInt"); \
if(CCTKARGNUM_NPphi0im == -1) CCTKARGNUM_NPphi0im = CCTK_VarIndex("EM_EXTRACTION::NPphi0im"); \
if(CCTKGROUPNUM_NPphi2_em == -1) CCTKGROUPNUM_NPphi2_em = CCTK_GroupIndex("EM_EXTRACTION::NPphi2_em"); \
if(CCTKARGNUM_NPphi0re == -1) CCTKARGNUM_NPphi0re = CCTK_VarIndex("EM_EXTRACTION::NPphi0re"); \
if(CCTKARGNUM_NPphi2im == -1) CCTKARGNUM_NPphi2im = CCTK_VarIndex("EM_EXTRACTION::NPphi2im"); \
if(CCTKARGNUM_NPphi2re == -1) CCTKARGNUM_NPphi2re = CCTK_VarIndex("EM_EXTRACTION::NPphi2re"); \
if(CCTKARGNUM_OS_surf_rad == -1) CCTKARGNUM_OS_surf_rad = CCTK_VarIndex("MHD_EVOLVE::OS_surf_rad"); \
if(CCTKGROUPNUM_OS_stellar_surface == -1) CCTKGROUPNUM_OS_stellar_surface = CCTK_GroupIndex("MHD_EVOLVE::OS_stellar_surface"); \
if(CCTKARGNUM_P == -1) CCTKARGNUM_P = CCTK_VarIndex("MHD_EVOLVE::P"); \
if(CCTKARGNUM_P_cld == -1) CCTKARGNUM_P_cld = CCTK_VarIndex("MHD_EVOLVE::P_cld"); \
if(CCTKGROUPNUM_microphys_primitives == -1) CCTKGROUPNUM_microphys_primitives = CCTK_GroupIndex("MHD_EVOLVE::microphys_primitives"); \
if(CCTKARGNUM_P_constraint == -1) CCTKARGNUM_P_constraint = CCTK_VarIndex("DIAGNOSTICS_VACUUM::P_constraint"); \
if(CCTKARGNUM_P_constraint_inner == -1) CCTKARGNUM_P_constraint_inner = CCTK_VarIndex("DIAGNOSTICS_VACUUM::P_constraint_inner"); \
if(CCTKARGNUM_P_floor == -1) CCTKARGNUM_P_floor = CCTK_VarIndex("MHD_EVOLVE::P_floor"); \
if(CCTKGROUPNUM_mhd_nosync == -1) CCTKGROUPNUM_mhd_nosync = CCTK_GroupIndex("MHD_EVOLVE::mhd_nosync"); \
if(CCTKARGNUM_P_radxx == -1) CCTKARGNUM_P_radxx = CCTK_VarIndex("MHD_EVOLVE::P_radxx"); \
if(CCTKARGNUM_P_radxx_nue == -1) CCTKARGNUM_P_radxx_nue = CCTK_VarIndex("MHD_EVOLVE::P_radxx_nue"); \
if(CCTKARGNUM_P_radxx_nux == -1) CCTKARGNUM_P_radxx_nux = CCTK_VarIndex("MHD_EVOLVE::P_radxx_nux"); \
if(CCTKARGNUM_P_radxy == -1) CCTKARGNUM_P_radxy = CCTK_VarIndex("MHD_EVOLVE::P_radxy"); \
if(CCTKARGNUM_P_radxy_nue == -1) CCTKARGNUM_P_radxy_nue = CCTK_VarIndex("MHD_EVOLVE::P_radxy_nue"); \
if(CCTKARGNUM_P_radxy_nux == -1) CCTKARGNUM_P_radxy_nux = CCTK_VarIndex("MHD_EVOLVE::P_radxy_nux"); \
if(CCTKARGNUM_P_radxz == -1) CCTKARGNUM_P_radxz = CCTK_VarIndex("MHD_EVOLVE::P_radxz"); \
if(CCTKARGNUM_P_radxz_nue == -1) CCTKARGNUM_P_radxz_nue = CCTK_VarIndex("MHD_EVOLVE::P_radxz_nue"); \
if(CCTKARGNUM_P_radxz_nux == -1) CCTKARGNUM_P_radxz_nux = CCTK_VarIndex("MHD_EVOLVE::P_radxz_nux"); \
if(CCTKARGNUM_P_radyy == -1) CCTKARGNUM_P_radyy = CCTK_VarIndex("MHD_EVOLVE::P_radyy"); \
if(CCTKARGNUM_P_radyy_nue == -1) CCTKARGNUM_P_radyy_nue = CCTK_VarIndex("MHD_EVOLVE::P_radyy_nue"); \
if(CCTKARGNUM_P_radyy_nux == -1) CCTKARGNUM_P_radyy_nux = CCTK_VarIndex("MHD_EVOLVE::P_radyy_nux"); \
if(CCTKARGNUM_P_radyz == -1) CCTKARGNUM_P_radyz = CCTK_VarIndex("MHD_EVOLVE::P_radyz"); \
if(CCTKARGNUM_P_radyz_nue == -1) CCTKARGNUM_P_radyz_nue = CCTK_VarIndex("MHD_EVOLVE::P_radyz_nue"); \
if(CCTKARGNUM_P_radyz_nux == -1) CCTKARGNUM_P_radyz_nux = CCTK_VarIndex("MHD_EVOLVE::P_radyz_nux"); \
if(CCTKARGNUM_P_radzz == -1) CCTKARGNUM_P_radzz = CCTK_VarIndex("MHD_EVOLVE::P_radzz"); \
if(CCTKARGNUM_P_radzz_nue == -1) CCTKARGNUM_P_radzz_nue = CCTK_VarIndex("MHD_EVOLVE::P_radzz_nue"); \
if(CCTKARGNUM_P_radzz_nux == -1) CCTKARGNUM_P_radzz_nux = CCTK_VarIndex("MHD_EVOLVE::P_radzz_nux"); \
if(CCTKARGNUM_P_tab == -1) CCTKARGNUM_P_tab = CCTK_VarIndex("MHD_EVOLVE::P_tab"); \
if(CCTKGROUPNUM_eos_params1 == -1) CCTKGROUPNUM_eos_params1 = CCTK_GroupIndex("MHD_EVOLVE::eos_params1"); \
if(CCTKARGNUM_P_thermal == -1) CCTKARGNUM_P_thermal = CCTK_VarIndex("MHD_EVOLVE::P_thermal"); \
if(CCTKARGNUM_PhysicalRadius == -1) CCTKARGNUM_PhysicalRadius = CCTK_VarIndex("FISHEYE::PhysicalRadius"); \
if(CCTKGROUPNUM_fisheye_vars == -1) CCTKGROUPNUM_fisheye_vars = CCTK_GroupIndex("FISHEYE::fisheye_vars"); \
if(CCTKARGNUM_Pl == -1) CCTKARGNUM_Pl = CCTK_VarIndex("MHD_EVOLVE::Pl"); \
if(CCTKGROUPNUM_mhd_sync_lr_hydro_quantities == -1) CCTKGROUPNUM_mhd_sync_lr_hydro_quantities = CCTK_GroupIndex("MHD_EVOLVE::mhd_sync_lr_hydro_quantities"); \
if(CCTKARGNUM_Pr == -1) CCTKARGNUM_Pr = CCTK_VarIndex("MHD_EVOLVE::Pr"); \
if(CCTKARGNUM_PsiNorm == -1) CCTKARGNUM_PsiNorm = CCTK_VarIndex("BSSN::PsiNorm"); \
if(CCTKARGNUM_PsiRes == -1) CCTKARGNUM_PsiRes = CCTK_VarIndex("BSSN::PsiRes"); \
if(CCTKARGNUM_PsiTau == -1) CCTKARGNUM_PsiTau = CCTK_VarIndex("BSSN::PsiTau"); \
if(CCTKARGNUM_Pvec == -1) CCTKARGNUM_Pvec = CCTK_VarIndex("MHD_EVOLVE::Pvec"); \
if(CCTKGROUPNUM_rhovecs == -1) CCTKGROUPNUM_rhovecs = CCTK_GroupIndex("MHD_EVOLVE::rhovecs"); \
if(CCTKARGNUM_RadiusDerivative == -1) CCTKARGNUM_RadiusDerivative = CCTK_VarIndex("FISHEYE::RadiusDerivative"); \
if(CCTKARGNUM_RadiusDerivative2 == -1) CCTKARGNUM_RadiusDerivative2 = CCTK_VarIndex("FISHEYE::RadiusDerivative2"); \
if(CCTKARGNUM_Rxx == -1) CCTKARGNUM_Rxx = CCTK_VarIndex("BSSN::Rxx"); \
if(CCTKARGNUM_Rxy == -1) CCTKARGNUM_Rxy = CCTK_VarIndex("BSSN::Rxy"); \
if(CCTKARGNUM_Rxz == -1) CCTKARGNUM_Rxz = CCTK_VarIndex("BSSN::Rxz"); \
if(CCTKARGNUM_Ryy == -1) CCTKARGNUM_Ryy = CCTK_VarIndex("BSSN::Ryy"); \
if(CCTKARGNUM_Ryz == -1) CCTKARGNUM_Ryz = CCTK_VarIndex("BSSN::Ryz"); \
if(CCTKARGNUM_Rzz == -1) CCTKARGNUM_Rzz = CCTK_VarIndex("BSSN::Rzz"); \
if(CCTKARGNUM_S == -1) CCTKARGNUM_S = CCTK_VarIndex("BSSN::S"); \
if(CCTKGROUPNUM_BSSN_matter == -1) CCTKGROUPNUM_BSSN_matter = CCTK_GroupIndex("BSSN::BSSN_matter"); \
if(CCTKARGNUM_SPx == -1) CCTKARGNUM_SPx = CCTK_VarIndex("EM_EXTRACTION::SPx"); \
if(CCTKARGNUM_SPy == -1) CCTKARGNUM_SPy = CCTK_VarIndex("EM_EXTRACTION::SPy"); \
if(CCTKARGNUM_SPz == -1) CCTKARGNUM_SPz = CCTK_VarIndex("EM_EXTRACTION::SPz"); \
if(CCTKARGNUM_S_rad_x == -1) CCTKARGNUM_S_rad_x = CCTK_VarIndex("MHD_EVOLVE::S_rad_x"); \
if(CCTKGROUPNUM_rad_conservatives == -1) CCTKGROUPNUM_rad_conservatives = CCTK_GroupIndex("MHD_EVOLVE::rad_conservatives"); \
if(CCTKARGNUM_S_rad_x_nue == -1) CCTKARGNUM_S_rad_x_nue = CCTK_VarIndex("MHD_EVOLVE::S_rad_x_nue"); \
if(CCTKARGNUM_S_rad_x_nue_rhs == -1) CCTKARGNUM_S_rad_x_nue_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_x_nue_rhs"); \
if(CCTKGROUPNUM_rad_conservatives_rhs == -1) CCTKGROUPNUM_rad_conservatives_rhs = CCTK_GroupIndex("MHD_EVOLVE::rad_conservatives_rhs"); \
if(CCTKARGNUM_S_rad_x_nux == -1) CCTKARGNUM_S_rad_x_nux = CCTK_VarIndex("MHD_EVOLVE::S_rad_x_nux"); \
if(CCTKARGNUM_S_rad_x_nux_rhs == -1) CCTKARGNUM_S_rad_x_nux_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_x_nux_rhs"); \
if(CCTKARGNUM_S_rad_x_rhs == -1) CCTKARGNUM_S_rad_x_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_x_rhs"); \
if(CCTKARGNUM_S_rad_y == -1) CCTKARGNUM_S_rad_y = CCTK_VarIndex("MHD_EVOLVE::S_rad_y"); \
if(CCTKARGNUM_S_rad_y_nue == -1) CCTKARGNUM_S_rad_y_nue = CCTK_VarIndex("MHD_EVOLVE::S_rad_y_nue"); \
if(CCTKARGNUM_S_rad_y_nue_rhs == -1) CCTKARGNUM_S_rad_y_nue_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_y_nue_rhs"); \
if(CCTKARGNUM_S_rad_y_nux == -1) CCTKARGNUM_S_rad_y_nux = CCTK_VarIndex("MHD_EVOLVE::S_rad_y_nux"); \
if(CCTKARGNUM_S_rad_y_nux_rhs == -1) CCTKARGNUM_S_rad_y_nux_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_y_nux_rhs"); \
if(CCTKARGNUM_S_rad_y_rhs == -1) CCTKARGNUM_S_rad_y_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_y_rhs"); \
if(CCTKARGNUM_S_rad_z == -1) CCTKARGNUM_S_rad_z = CCTK_VarIndex("MHD_EVOLVE::S_rad_z"); \
if(CCTKARGNUM_S_rad_z_nue == -1) CCTKARGNUM_S_rad_z_nue = CCTK_VarIndex("MHD_EVOLVE::S_rad_z_nue"); \
if(CCTKARGNUM_S_rad_z_nue_rhs == -1) CCTKARGNUM_S_rad_z_nue_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_z_nue_rhs"); \
if(CCTKARGNUM_S_rad_z_nux == -1) CCTKARGNUM_S_rad_z_nux = CCTK_VarIndex("MHD_EVOLVE::S_rad_z_nux"); \
if(CCTKARGNUM_S_rad_z_nux_rhs == -1) CCTKARGNUM_S_rad_z_nux_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_z_nux_rhs"); \
if(CCTKARGNUM_S_rad_z_rhs == -1) CCTKARGNUM_S_rad_z_rhs = CCTK_VarIndex("MHD_EVOLVE::S_rad_z_rhs"); \
if(CCTKARGNUM_Sx == -1) CCTKARGNUM_Sx = CCTK_VarIndex("BSSN::Sx"); \
if(CCTKARGNUM_Sxx == -1) CCTKARGNUM_Sxx = CCTK_VarIndex("BSSN::Sxx"); \
if(CCTKARGNUM_Sxy == -1) CCTKARGNUM_Sxy = CCTK_VarIndex("BSSN::Sxy"); \
if(CCTKARGNUM_Sxz == -1) CCTKARGNUM_Sxz = CCTK_VarIndex("BSSN::Sxz"); \
if(CCTKARGNUM_Sy == -1) CCTKARGNUM_Sy = CCTK_VarIndex("BSSN::Sy"); \
if(CCTKARGNUM_Syy == -1) CCTKARGNUM_Syy = CCTK_VarIndex("BSSN::Syy"); \
if(CCTKARGNUM_Syz == -1) CCTKARGNUM_Syz = CCTK_VarIndex("BSSN::Syz"); \
if(CCTKARGNUM_Sz == -1) CCTKARGNUM_Sz = CCTK_VarIndex("BSSN::Sz"); \
if(CCTKARGNUM_Szz == -1) CCTKARGNUM_Szz = CCTK_VarIndex("BSSN::Szz"); \
if(CCTKARGNUM_T_0x == -1) CCTKARGNUM_T_0x = CCTK_VarIndex("EM_EXTRACTION::T_0x"); \
if(CCTKARGNUM_T_0y == -1) CCTKARGNUM_T_0y = CCTK_VarIndex("EM_EXTRACTION::T_0y"); \
if(CCTKARGNUM_T_0z == -1) CCTKARGNUM_T_0z = CCTK_VarIndex("EM_EXTRACTION::T_0z"); \
if(CCTKARGNUM_T_VolInt == -1) CCTKARGNUM_T_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::T_VolInt"); \
if(CCTKARGNUM_T_fluid == -1) CCTKARGNUM_T_fluid = CCTK_VarIndex("MHD_EVOLVE::T_fluid"); \
if(CCTKARGNUM_T_fluidle == -1) CCTKARGNUM_T_fluidle = CCTK_VarIndex("MHD_EVOLVE::T_fluidle"); \
if(CCTKGROUPNUM_micphys_sync_lr_hydro_quantities == -1) CCTKGROUPNUM_micphys_sync_lr_hydro_quantities = CCTK_GroupIndex("MHD_EVOLVE::micphys_sync_lr_hydro_quantities"); \
if(CCTKARGNUM_T_fluidr == -1) CCTKARGNUM_T_fluidr = CCTK_VarIndex("MHD_EVOLVE::T_fluidr"); \
if(CCTKARGNUM_Tem0_0_VolInt == -1) CCTKARGNUM_Tem0_0_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::Tem0_0_VolInt"); \
if(CCTKARGNUM_Tem0_0_outsideBH_VolInt == -1) CCTKARGNUM_Tem0_0_outsideBH_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::Tem0_0_outsideBH_VolInt"); \
if(CCTKARGNUM_Tfluid0_0_VolInt == -1) CCTKARGNUM_Tfluid0_0_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::Tfluid0_0_VolInt"); \
if(CCTKARGNUM_Tfluid0_0_outsideBH_VolInt == -1) CCTKARGNUM_Tfluid0_0_outsideBH_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::Tfluid0_0_outsideBH_VolInt"); \
if(CCTKARGNUM_VolIntegrand == -1) CCTKARGNUM_VolIntegrand = CCTK_VarIndex("DIAGNOSTICS_VACUUM::VolIntegrand"); \
if(CCTKGROUPNUM_diag_vacuum_gf == -1) CCTKGROUPNUM_diag_vacuum_gf = CCTK_GroupIndex("DIAGNOSTICS_VACUUM::diag_vacuum_gf"); \
if(CCTKARGNUM_VolIntegrand2 == -1) CCTKARGNUM_VolIntegrand2 = CCTK_VarIndex("DIAGNOSTICS_VACUUM::VolIntegrand2"); \
if(CCTKARGNUM_VolIntegrand3 == -1) CCTKARGNUM_VolIntegrand3 = CCTK_VarIndex("DIAGNOSTICS_VACUUM::VolIntegrand3"); \
if(CCTKARGNUM_VolIntegrand4 == -1) CCTKARGNUM_VolIntegrand4 = CCTK_VarIndex("DIAGNOSTICS_VACUUM::VolIntegrand4"); \
if(CCTKARGNUM_Y_e == -1) CCTKARGNUM_Y_e = CCTK_VarIndex("MHD_EVOLVE::Y_e"); \
if(CCTKARGNUM_Y_el == -1) CCTKARGNUM_Y_el = CCTK_VarIndex("MHD_EVOLVE::Y_el"); \
if(CCTKARGNUM_Y_er == -1) CCTKARGNUM_Y_er = CCTK_VarIndex("MHD_EVOLVE::Y_er"); \
if(CCTKARGNUM_ah_centroid_iteration == -1) CCTKARGNUM_ah_centroid_iteration = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_iteration[0]"); \
if(CCTKGROUPNUM_ah_flags == -1) CCTKGROUPNUM_ah_flags = CCTK_GroupIndex("AHFINDERDIRECT::ah_flags"); \
if(CCTKARGNUM_ah_centroid_iteration_p == -1) CCTKARGNUM_ah_centroid_iteration_p = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_iteration_p[0]"); \
if(CCTKARGNUM_ah_centroid_t == -1) CCTKARGNUM_ah_centroid_t = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_t[0]"); \
if(CCTKGROUPNUM_ah_centroid == -1) CCTKGROUPNUM_ah_centroid = CCTK_GroupIndex("AHFINDERDIRECT::ah_centroid"); \
if(CCTKARGNUM_ah_centroid_t_p == -1) CCTKARGNUM_ah_centroid_t_p = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_t_p[0]"); \
if(CCTKARGNUM_ah_centroid_valid == -1) CCTKARGNUM_ah_centroid_valid = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_valid[0]"); \
if(CCTKARGNUM_ah_centroid_valid_p == -1) CCTKARGNUM_ah_centroid_valid_p = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_valid_p[0]"); \
if(CCTKARGNUM_ah_centroid_x == -1) CCTKARGNUM_ah_centroid_x = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_x[0]"); \
if(CCTKARGNUM_ah_centroid_x_p == -1) CCTKARGNUM_ah_centroid_x_p = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_x_p[0]"); \
if(CCTKARGNUM_ah_centroid_y == -1) CCTKARGNUM_ah_centroid_y = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_y[0]"); \
if(CCTKARGNUM_ah_centroid_y_p == -1) CCTKARGNUM_ah_centroid_y_p = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_y_p[0]"); \
if(CCTKARGNUM_ah_centroid_z == -1) CCTKARGNUM_ah_centroid_z = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_z[0]"); \
if(CCTKARGNUM_ah_centroid_z_p == -1) CCTKARGNUM_ah_centroid_z_p = CCTK_VarIndex("AHFINDERDIRECT::ah_centroid_z_p[0]"); \
if(CCTKARGNUM_ah_found_flag == -1) CCTKARGNUM_ah_found_flag = CCTK_VarIndex("AHFINDERDIRECT::ah_found_flag[0]"); \
if(CCTKARGNUM_ah_initial_find_flag == -1) CCTKARGNUM_ah_initial_find_flag = CCTK_VarIndex("AHFINDERDIRECT::ah_initial_find_flag[0]"); \
if(CCTKARGNUM_ah_origin_x == -1) CCTKARGNUM_ah_origin_x = CCTK_VarIndex("AHFINDERDIRECT::ah_origin_x[0]"); \
if(CCTKGROUPNUM_ah_origin == -1) CCTKGROUPNUM_ah_origin = CCTK_GroupIndex("AHFINDERDIRECT::ah_origin"); \
if(CCTKARGNUM_ah_origin_y == -1) CCTKARGNUM_ah_origin_y = CCTK_VarIndex("AHFINDERDIRECT::ah_origin_y[0]"); \
if(CCTKARGNUM_ah_origin_z == -1) CCTKARGNUM_ah_origin_z = CCTK_VarIndex("AHFINDERDIRECT::ah_origin_z[0]"); \
if(CCTKARGNUM_ah_radius == -1) CCTKARGNUM_ah_radius = CCTK_VarIndex("AHFINDERDIRECT::ah_radius[0]"); \
if(CCTKGROUPNUM_ah_radius == -1) CCTKGROUPNUM_ah_radius = CCTK_GroupIndex("AHFINDERDIRECT::ah_radius"); \
if(CCTKARGNUM_ah_really_initial_find_flag == -1) CCTKARGNUM_ah_really_initial_find_flag = CCTK_VarIndex("AHFINDERDIRECT::ah_really_initial_find_flag[0]"); \
if(CCTKARGNUM_ah_search_flag == -1) CCTKARGNUM_ah_search_flag = CCTK_VarIndex("AHFINDERDIRECT::ah_search_flag[0]"); \
if(CCTKARGNUM_b_phi_VolInt == -1) CCTKARGNUM_b_phi_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::b_phi_VolInt"); \
if(CCTKARGNUM_bh_posn_x == -1) CCTKARGNUM_bh_posn_x = CCTK_VarIndex("DIAGNOSTICS_VACUUM::bh_posn_x"); \
if(CCTKGROUPNUM_bh_posns == -1) CCTKGROUPNUM_bh_posns = CCTK_GroupIndex("DIAGNOSTICS_VACUUM::bh_posns"); \
if(CCTKARGNUM_bh_posn_y == -1) CCTKARGNUM_bh_posn_y = CCTK_VarIndex("DIAGNOSTICS_VACUUM::bh_posn_y"); \
if(CCTKARGNUM_bh_posn_z == -1) CCTKARGNUM_bh_posn_z = CCTK_VarIndex("DIAGNOSTICS_VACUUM::bh_posn_z"); \
if(CCTKARGNUM_bh_radius_z == -1) CCTKARGNUM_bh_radius_z = CCTK_VarIndex("DIAGNOSTICS_VACUUM::bh_radius_z"); \
if(CCTKARGNUM_brem_qee_VolInt == -1) CCTKARGNUM_brem_qee_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::brem_qee_VolInt"); \
if(CCTKARGNUM_brem_qei_VolInt == -1) CCTKARGNUM_brem_qei_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::brem_qei_VolInt"); \
if(CCTKARGNUM_chi == -1) CCTKARGNUM_chi = CCTK_VarIndex("BSSN::chi"); \
if(CCTKARGNUM_chi_rad == -1) CCTKARGNUM_chi_rad = CCTK_VarIndex("MHD_EVOLVE::chi_rad"); \
if(CCTKARGNUM_chi_rad_nue == -1) CCTKARGNUM_chi_rad_nue = CCTK_VarIndex("MHD_EVOLVE::chi_rad_nue"); \
if(CCTKARGNUM_chi_rad_nux == -1) CCTKARGNUM_chi_rad_nux = CCTK_VarIndex("MHD_EVOLVE::chi_rad_nux"); \
if(CCTKARGNUM_chi_rhs == -1) CCTKARGNUM_chi_rhs = CCTK_VarIndex("BSSN::chi_rhs"); \
if(CCTKARGNUM_cmax == -1) CCTKARGNUM_cmax = CCTK_VarIndex("MHD_EVOLVE::cmax"); \
if(CCTKARGNUM_cmax_rad == -1) CCTKARGNUM_cmax_rad = CCTK_VarIndex("MHD_EVOLVE::cmax_rad"); \
if(CCTKARGNUM_cmax_rad_nue == -1) CCTKARGNUM_cmax_rad_nue = CCTK_VarIndex("MHD_EVOLVE::cmax_rad_nue"); \
if(CCTKARGNUM_cmax_rad_nux == -1) CCTKARGNUM_cmax_rad_nux = CCTK_VarIndex("MHD_EVOLVE::cmax_rad_nux"); \
if(CCTKARGNUM_cmin == -1) CCTKARGNUM_cmin = CCTK_VarIndex("MHD_EVOLVE::cmin"); \
if(CCTKARGNUM_cmin_rad == -1) CCTKARGNUM_cmin_rad = CCTK_VarIndex("MHD_EVOLVE::cmin_rad"); \
if(CCTKARGNUM_cmin_rad_nue == -1) CCTKARGNUM_cmin_rad_nue = CCTK_VarIndex("MHD_EVOLVE::cmin_rad_nue"); \
if(CCTKARGNUM_cmin_rad_nux == -1) CCTKARGNUM_cmin_rad_nux = CCTK_VarIndex("MHD_EVOLVE::cmin_rad_nux"); \
if(CCTKARGNUM_dBx_m == -1) CCTKARGNUM_dBx_m = CCTK_VarIndex("MHD_EVOLVE::dBx_m"); \
if(CCTKGROUPNUM_mhd_sync_nablas == -1) CCTKGROUPNUM_mhd_sync_nablas = CCTK_GroupIndex("MHD_EVOLVE::mhd_sync_nablas"); \
if(CCTKARGNUM_dBy_m == -1) CCTKARGNUM_dBy_m = CCTK_VarIndex("MHD_EVOLVE::dBy_m"); \
if(CCTKARGNUM_dBz_m == -1) CCTKARGNUM_dBz_m = CCTK_VarIndex("MHD_EVOLVE::dBz_m"); \
if(CCTKARGNUM_dP_m == -1) CCTKARGNUM_dP_m = CCTK_VarIndex("MHD_EVOLVE::dP_m"); \
if(CCTKARGNUM_dT_fluid_m == -1) CCTKARGNUM_dT_fluid_m = CCTK_VarIndex("MHD_EVOLVE::dT_fluid_m"); \
if(CCTKGROUPNUM_micphys_sync_nablas == -1) CCTKGROUPNUM_micphys_sync_nablas = CCTK_GroupIndex("MHD_EVOLVE::micphys_sync_nablas"); \
if(CCTKARGNUM_ddrbrvec == -1) CCTKARGNUM_ddrbrvec = CCTK_VarIndex("DIAGNOSTICS_VACUUM::ddrbrvec"); \
if(CCTKGROUPNUM_surf_params == -1) CCTKGROUPNUM_surf_params = CCTK_GroupIndex("DIAGNOSTICS_VACUUM::surf_params"); \
if(CCTKARGNUM_density_modes_i1 == -1) CCTKARGNUM_density_modes_i1 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_i1"); \
if(CCTKARGNUM_density_modes_i2 == -1) CCTKARGNUM_density_modes_i2 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_i2"); \
if(CCTKARGNUM_density_modes_i3 == -1) CCTKARGNUM_density_modes_i3 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_i3"); \
if(CCTKARGNUM_density_modes_i4 == -1) CCTKARGNUM_density_modes_i4 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_i4"); \
if(CCTKARGNUM_density_modes_i5 == -1) CCTKARGNUM_density_modes_i5 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_i5"); \
if(CCTKARGNUM_density_modes_i6 == -1) CCTKARGNUM_density_modes_i6 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_i6"); \
if(CCTKARGNUM_density_modes_r0 == -1) CCTKARGNUM_density_modes_r0 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_r0"); \
if(CCTKARGNUM_density_modes_r1 == -1) CCTKARGNUM_density_modes_r1 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_r1"); \
if(CCTKARGNUM_density_modes_r2 == -1) CCTKARGNUM_density_modes_r2 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_r2"); \
if(CCTKARGNUM_density_modes_r3 == -1) CCTKARGNUM_density_modes_r3 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_r3"); \
if(CCTKARGNUM_density_modes_r4 == -1) CCTKARGNUM_density_modes_r4 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_r4"); \
if(CCTKARGNUM_density_modes_r5 == -1) CCTKARGNUM_density_modes_r5 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_r5"); \
if(CCTKARGNUM_density_modes_r6 == -1) CCTKARGNUM_density_modes_r6 = CCTK_VarIndex("DIAGNOSTICS_MHD::density_modes_r6"); \
if(CCTKARGNUM_div_beta == -1) CCTKARGNUM_div_beta = CCTK_VarIndex("BSSN::div_beta"); \
if(CCTKARGNUM_drbrvec == -1) CCTKARGNUM_drbrvec = CCTK_VarIndex("DIAGNOSTICS_VACUUM::drbrvec"); \
if(CCTKARGNUM_drhoYe_m == -1) CCTKARGNUM_drhoYe_m = CCTK_VarIndex("MHD_EVOLVE::drhoYe_m"); \
if(CCTKARGNUM_drhoYe_m_x == -1) CCTKARGNUM_drhoYe_m_x = CCTK_VarIndex("MHD_EVOLVE::drhoYe_m_x"); \
if(CCTKGROUPNUM_mhd_sync_nablas_diag == -1) CCTKGROUPNUM_mhd_sync_nablas_diag = CCTK_GroupIndex("MHD_EVOLVE::mhd_sync_nablas_diag"); \
if(CCTKARGNUM_drhoYe_m_xp1 == -1) CCTKARGNUM_drhoYe_m_xp1 = CCTK_VarIndex("MHD_EVOLVE::drhoYe_m_xp1"); \
if(CCTKARGNUM_drho_b_m == -1) CCTKARGNUM_drho_b_m = CCTK_VarIndex("MHD_EVOLVE::drho_b_m"); \
if(CCTKARGNUM_drho_b_m_x == -1) CCTKARGNUM_drho_b_m_x = CCTK_VarIndex("MHD_EVOLVE::drho_b_m_x"); \
if(CCTKARGNUM_drho_b_m_xp1 == -1) CCTKARGNUM_drho_b_m_xp1 = CCTK_VarIndex("MHD_EVOLVE::drho_b_m_xp1"); \
if(CCTKARGNUM_dvx_m == -1) CCTKARGNUM_dvx_m = CCTK_VarIndex("MHD_EVOLVE::dvx_m"); \
if(CCTKARGNUM_dvx_m_x == -1) CCTKARGNUM_dvx_m_x = CCTK_VarIndex("MHD_EVOLVE::dvx_m_x"); \
if(CCTKARGNUM_dvx_m_xp1 == -1) CCTKARGNUM_dvx_m_xp1 = CCTK_VarIndex("MHD_EVOLVE::dvx_m_xp1"); \
if(CCTKARGNUM_dvy_m == -1) CCTKARGNUM_dvy_m = CCTK_VarIndex("MHD_EVOLVE::dvy_m"); \
if(CCTKARGNUM_dvz_m == -1) CCTKARGNUM_dvz_m = CCTK_VarIndex("MHD_EVOLVE::dvz_m"); \
if(CCTKARGNUM_em_J_between_VolInt == -1) CCTKARGNUM_em_J_between_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::em_J_between_VolInt"); \
if(CCTKARGNUM_em_energy2_VolInt == -1) CCTKARGNUM_em_energy2_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::em_energy2_VolInt"); \
if(CCTKARGNUM_em_energy_VolInt == -1) CCTKARGNUM_em_energy_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::em_energy_VolInt"); \
if(CCTKARGNUM_em_energy_between_VolInt == -1) CCTKARGNUM_em_energy_between_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::em_energy_between_VolInt"); \
if(CCTKARGNUM_em_energy_outsideBH_VolInt == -1) CCTKARGNUM_em_energy_outsideBH_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::em_energy_outsideBH_VolInt"); \
if(CCTKARGNUM_em_energy_outsideradius1_VolInt == -1) CCTKARGNUM_em_energy_outsideradius1_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::em_energy_outsideradius1_VolInt"); \
if(CCTKARGNUM_em_energy_outsideradius2_VolInt == -1) CCTKARGNUM_em_energy_outsideradius2_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::em_energy_outsideradius2_VolInt"); \
if(CCTKARGNUM_emission_gf == -1) CCTKARGNUM_emission_gf = CCTK_VarIndex("MHD_EVOLVE::emission_gf"); \
if(CCTKARGNUM_emission_gf_nue == -1) CCTKARGNUM_emission_gf_nue = CCTK_VarIndex("MHD_EVOLVE::emission_gf_nue"); \
if(CCTKARGNUM_emission_gf_nux == -1) CCTKARGNUM_emission_gf_nux = CCTK_VarIndex("MHD_EVOLVE::emission_gf_nux"); \
if(CCTKARGNUM_eps_cld == -1) CCTKARGNUM_eps_cld = CCTK_VarIndex("MHD_EVOLVE::eps_cld"); \
if(CCTKARGNUM_eps_tab == -1) CCTKARGNUM_eps_tab = CCTK_VarIndex("MHD_EVOLVE::eps_tab"); \
if(CCTKARGNUM_eps_thermal == -1) CCTKARGNUM_eps_thermal = CCTK_VarIndex("MHD_EVOLVE::eps_thermal"); \
if(CCTKARGNUM_eps_tot == -1) CCTKARGNUM_eps_tot = CCTK_VarIndex("MHD_EVOLVE::eps_tot"); \
if(CCTKARGNUM_eta_nue == -1) CCTKARGNUM_eta_nue = CCTK_VarIndex("MHD_EVOLVE::eta_nue"); \
if(CCTKARGNUM_excision_zone_gf == -1) CCTKARGNUM_excision_zone_gf = CCTK_VarIndex("EXCISION::excision_zone_gf"); \
if(CCTKGROUPNUM_excision_int_gfs == -1) CCTKGROUPNUM_excision_int_gfs = CCTK_GroupIndex("EXCISION::excision_int_gfs"); \
if(CCTKARGNUM_fluid_J_horiz_VolInt == -1) CCTKARGNUM_fluid_J_horiz_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::fluid_J_horiz_VolInt"); \
if(CCTKARGNUM_fluid_J_r1_VolInt == -1) CCTKARGNUM_fluid_J_r1_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::fluid_J_r1_VolInt"); \
if(CCTKARGNUM_fluid_J_r2_VolInt == -1) CCTKARGNUM_fluid_J_r2_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::fluid_J_r2_VolInt"); \
if(CCTKARGNUM_fluid_J_r3_VolInt == -1) CCTKARGNUM_fluid_J_r3_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::fluid_J_r3_VolInt"); \
if(CCTKARGNUM_fluid_energy_horiz_VolInt == -1) CCTKARGNUM_fluid_energy_horiz_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::fluid_energy_horiz_VolInt"); \
if(CCTKARGNUM_fluid_energy_r1_VolInt == -1) CCTKARGNUM_fluid_energy_r1_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::fluid_energy_r1_VolInt"); \
if(CCTKARGNUM_fluid_energy_r2_VolInt == -1) CCTKARGNUM_fluid_energy_r2_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::fluid_energy_r2_VolInt"); \
if(CCTKARGNUM_fluid_energy_r3_VolInt == -1) CCTKARGNUM_fluid_energy_r3_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::fluid_energy_r3_VolInt"); \
if(CCTKARGNUM_gamma_tab == -1) CCTKARGNUM_gamma_tab = CCTK_VarIndex("MHD_EVOLVE::gamma_tab"); \
if(CCTKGROUPNUM_eos_params2 == -1) CCTKGROUPNUM_eos_params2 = CCTK_GroupIndex("MHD_EVOLVE::eos_params2"); \
if(CCTKARGNUM_gconx == -1) CCTKARGNUM_gconx = CCTK_VarIndex("BSSN::gconx"); \
if(CCTKARGNUM_gcony == -1) CCTKARGNUM_gcony = CCTK_VarIndex("BSSN::gcony"); \
if(CCTKARGNUM_gconz == -1) CCTKARGNUM_gconz = CCTK_VarIndex("BSSN::gconz"); \
if(CCTKARGNUM_gupxx == -1) CCTKARGNUM_gupxx = CCTK_VarIndex("BSSN::gupxx"); \
if(CCTKGROUPNUM_BSSN_gupij == -1) CCTKGROUPNUM_BSSN_gupij = CCTK_GroupIndex("BSSN::BSSN_gupij"); \
if(CCTKARGNUM_gupxx_f == -1) CCTKARGNUM_gupxx_f = CCTK_VarIndex("MHD_EVOLVE::gupxx_f"); \
if(CCTKGROUPNUM_mhd_sync_metric_facevals == -1) CCTKGROUPNUM_mhd_sync_metric_facevals = CCTK_GroupIndex("MHD_EVOLVE::mhd_sync_metric_facevals"); \
if(CCTKARGNUM_gupxy == -1) CCTKARGNUM_gupxy = CCTK_VarIndex("BSSN::gupxy"); \
if(CCTKARGNUM_gupxy_f == -1) CCTKARGNUM_gupxy_f = CCTK_VarIndex("MHD_EVOLVE::gupxy_f"); \
if(CCTKARGNUM_gupxz == -1) CCTKARGNUM_gupxz = CCTK_VarIndex("BSSN::gupxz"); \
if(CCTKARGNUM_gupxz_f == -1) CCTKARGNUM_gupxz_f = CCTK_VarIndex("MHD_EVOLVE::gupxz_f"); \
if(CCTKARGNUM_gupyy == -1) CCTKARGNUM_gupyy = CCTK_VarIndex("BSSN::gupyy"); \
if(CCTKARGNUM_gupyy_f == -1) CCTKARGNUM_gupyy_f = CCTK_VarIndex("MHD_EVOLVE::gupyy_f"); \
if(CCTKARGNUM_gupyz == -1) CCTKARGNUM_gupyz = CCTK_VarIndex("BSSN::gupyz"); \
if(CCTKARGNUM_gupyz_f == -1) CCTKARGNUM_gupyz_f = CCTK_VarIndex("MHD_EVOLVE::gupyz_f"); \
if(CCTKARGNUM_gupzz == -1) CCTKARGNUM_gupzz = CCTK_VarIndex("BSSN::gupzz"); \
if(CCTKARGNUM_gupzz_f == -1) CCTKARGNUM_gupzz_f = CCTK_VarIndex("MHD_EVOLVE::gupzz_f"); \
if(CCTKARGNUM_gxx == -1) CCTKARGNUM_gxx = CCTK_VarIndex("BSSN::gxx"); \
if(CCTKARGNUM_gxx_f == -1) CCTKARGNUM_gxx_f = CCTK_VarIndex("MHD_EVOLVE::gxx_f"); \
if(CCTKARGNUM_gxx_rhs == -1) CCTKARGNUM_gxx_rhs = CCTK_VarIndex("BSSN::gxx_rhs"); \
if(CCTKARGNUM_gxxx == -1) CCTKARGNUM_gxxx = CCTK_VarIndex("BSSN::gxxx"); \
if(CCTKARGNUM_gxxy == -1) CCTKARGNUM_gxxy = CCTK_VarIndex("BSSN::gxxy"); \
if(CCTKARGNUM_gxxz == -1) CCTKARGNUM_gxxz = CCTK_VarIndex("BSSN::gxxz"); \
if(CCTKARGNUM_gxy == -1) CCTKARGNUM_gxy = CCTK_VarIndex("BSSN::gxy"); \
if(CCTKARGNUM_gxy_f == -1) CCTKARGNUM_gxy_f = CCTK_VarIndex("MHD_EVOLVE::gxy_f"); \
if(CCTKARGNUM_gxy_rhs == -1) CCTKARGNUM_gxy_rhs = CCTK_VarIndex("BSSN::gxy_rhs"); \
if(CCTKARGNUM_gxyx == -1) CCTKARGNUM_gxyx = CCTK_VarIndex("BSSN::gxyx"); \
if(CCTKARGNUM_gxyy == -1) CCTKARGNUM_gxyy = CCTK_VarIndex("BSSN::gxyy"); \
if(CCTKARGNUM_gxyz == -1) CCTKARGNUM_gxyz = CCTK_VarIndex("BSSN::gxyz"); \
if(CCTKARGNUM_gxz == -1) CCTKARGNUM_gxz = CCTK_VarIndex("BSSN::gxz"); \
if(CCTKARGNUM_gxz_f == -1) CCTKARGNUM_gxz_f = CCTK_VarIndex("MHD_EVOLVE::gxz_f"); \
if(CCTKARGNUM_gxz_rhs == -1) CCTKARGNUM_gxz_rhs = CCTK_VarIndex("BSSN::gxz_rhs"); \
if(CCTKARGNUM_gxzx == -1) CCTKARGNUM_gxzx = CCTK_VarIndex("BSSN::gxzx"); \
if(CCTKARGNUM_gxzy == -1) CCTKARGNUM_gxzy = CCTK_VarIndex("BSSN::gxzy"); \
if(CCTKARGNUM_gxzz == -1) CCTKARGNUM_gxzz = CCTK_VarIndex("BSSN::gxzz"); \
if(CCTKARGNUM_gyy == -1) CCTKARGNUM_gyy = CCTK_VarIndex("BSSN::gyy"); \
if(CCTKARGNUM_gyy_f == -1) CCTKARGNUM_gyy_f = CCTK_VarIndex("MHD_EVOLVE::gyy_f"); \
if(CCTKARGNUM_gyy_rhs == -1) CCTKARGNUM_gyy_rhs = CCTK_VarIndex("BSSN::gyy_rhs"); \
if(CCTKARGNUM_gyyx == -1) CCTKARGNUM_gyyx = CCTK_VarIndex("BSSN::gyyx"); \
if(CCTKARGNUM_gyyy == -1) CCTKARGNUM_gyyy = CCTK_VarIndex("BSSN::gyyy"); \
if(CCTKARGNUM_gyyz == -1) CCTKARGNUM_gyyz = CCTK_VarIndex("BSSN::gyyz"); \
if(CCTKARGNUM_gyz == -1) CCTKARGNUM_gyz = CCTK_VarIndex("BSSN::gyz"); \
if(CCTKARGNUM_gyz_f == -1) CCTKARGNUM_gyz_f = CCTK_VarIndex("MHD_EVOLVE::gyz_f"); \
if(CCTKARGNUM_gyz_rhs == -1) CCTKARGNUM_gyz_rhs = CCTK_VarIndex("BSSN::gyz_rhs"); \
if(CCTKARGNUM_gyzx == -1) CCTKARGNUM_gyzx = CCTK_VarIndex("BSSN::gyzx"); \
if(CCTKARGNUM_gyzy == -1) CCTKARGNUM_gyzy = CCTK_VarIndex("BSSN::gyzy"); \
if(CCTKARGNUM_gyzz == -1) CCTKARGNUM_gyzz = CCTK_VarIndex("BSSN::gyzz"); \
if(CCTKARGNUM_gzz == -1) CCTKARGNUM_gzz = CCTK_VarIndex("BSSN::gzz"); \
if(CCTKARGNUM_gzz_f == -1) CCTKARGNUM_gzz_f = CCTK_VarIndex("MHD_EVOLVE::gzz_f"); \
if(CCTKARGNUM_gzz_rhs == -1) CCTKARGNUM_gzz_rhs = CCTK_VarIndex("BSSN::gzz_rhs"); \
if(CCTKARGNUM_gzzx == -1) CCTKARGNUM_gzzx = CCTK_VarIndex("BSSN::gzzx"); \
if(CCTKARGNUM_gzzy == -1) CCTKARGNUM_gzzy = CCTK_VarIndex("BSSN::gzzy"); \
if(CCTKARGNUM_gzzz == -1) CCTKARGNUM_gzzz = CCTK_VarIndex("BSSN::gzzz"); \
if(CCTKARGNUM_h == -1) CCTKARGNUM_h = CCTK_VarIndex("MHD_EVOLVE::h"); \
if(CCTKARGNUM_h_p == -1) CCTKARGNUM_h_p = CCTK_VarIndex("MHD_EVOLVE::h_p"); \
if(CCTKARGNUM_half_b2_u0_VolInt == -1) CCTKARGNUM_half_b2_u0_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::half_b2_u0_VolInt"); \
if(CCTKARGNUM_half_b2_u0_outsideBH_VolInt == -1) CCTKARGNUM_half_b2_u0_outsideBH_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::half_b2_u0_outsideBH_VolInt"); \
if(CCTKARGNUM_have_global_bdry_max == -1) CCTKARGNUM_have_global_bdry_max = CCTK_VarIndex("BSSN::have_global_bdry_max"); \
if(CCTKGROUPNUM_have_global_bdry == -1) CCTKGROUPNUM_have_global_bdry = CCTK_GroupIndex("BSSN::have_global_bdry"); \
if(CCTKARGNUM_have_global_bdry_min == -1) CCTKARGNUM_have_global_bdry_min = CCTK_VarIndex("BSSN::have_global_bdry_min"); \
if(CCTKARGNUM_int_momentsi == -1) CCTKARGNUM_int_momentsi = CCTK_VarIndex("GW_EXTRACTION::int_momentsi"); \
if(CCTKGROUPNUM_gw_moment_arrays == -1) CCTKGROUPNUM_gw_moment_arrays = CCTK_GroupIndex("GW_EXTRACTION::gw_moment_arrays"); \
if(CCTKARGNUM_int_momentsr == -1) CCTKARGNUM_int_momentsr = CCTK_VarIndex("GW_EXTRACTION::int_momentsr"); \
if(CCTKARGNUM_k_tab == -1) CCTKARGNUM_k_tab = CCTK_VarIndex("MHD_EVOLVE::k_tab"); \
if(CCTKARGNUM_ka_gf == -1) CCTKARGNUM_ka_gf = CCTK_VarIndex("MHD_EVOLVE::ka_gf"); \
if(CCTKARGNUM_ka_gf_nue == -1) CCTKARGNUM_ka_gf_nue = CCTK_VarIndex("MHD_EVOLVE::ka_gf_nue"); \
if(CCTKARGNUM_ka_gf_nux == -1) CCTKARGNUM_ka_gf_nux = CCTK_VarIndex("MHD_EVOLVE::ka_gf_nux"); \
if(CCTKARGNUM_ks_gf == -1) CCTKARGNUM_ks_gf = CCTK_VarIndex("MHD_EVOLVE::ks_gf"); \
if(CCTKARGNUM_ks_gf_nue == -1) CCTKARGNUM_ks_gf_nue = CCTK_VarIndex("MHD_EVOLVE::ks_gf_nue"); \
if(CCTKARGNUM_ks_gf_nux == -1) CCTKARGNUM_ks_gf_nux = CCTK_VarIndex("MHD_EVOLVE::ks_gf_nux"); \
if(CCTKARGNUM_kxx == -1) CCTKARGNUM_kxx = CCTK_VarIndex("BSSN::kxx"); \
if(CCTKGROUPNUM_BSSN_AH == -1) CCTKGROUPNUM_BSSN_AH = CCTK_GroupIndex("BSSN::BSSN_AH"); \
if(CCTKARGNUM_kxy == -1) CCTKARGNUM_kxy = CCTK_VarIndex("BSSN::kxy"); \
if(CCTKARGNUM_kxz == -1) CCTKARGNUM_kxz = CCTK_VarIndex("BSSN::kxz"); \
if(CCTKARGNUM_kyy == -1) CCTKARGNUM_kyy = CCTK_VarIndex("BSSN::kyy"); \
if(CCTKARGNUM_kyz == -1) CCTKARGNUM_kyz = CCTK_VarIndex("BSSN::kyz"); \
if(CCTKARGNUM_kzz == -1) CCTKARGNUM_kzz = CCTK_VarIndex("BSSN::kzz"); \
if(CCTKARGNUM_lapm1 == -1) CCTKARGNUM_lapm1 = CCTK_VarIndex("LAPSE::lapm1"); \
if(CCTKGROUPNUM_lapse_vars == -1) CCTKGROUPNUM_lapse_vars = CCTK_GroupIndex("LAPSE::lapse_vars"); \
if(CCTKARGNUM_lapm1_f == -1) CCTKARGNUM_lapm1_f = CCTK_VarIndex("MHD_EVOLVE::lapm1_f"); \
if(CCTKARGNUM_lapm1_rhs == -1) CCTKARGNUM_lapm1_rhs = CCTK_VarIndex("LAPSE::lapm1_rhs"); \
if(CCTKGROUPNUM_lapse_rhs == -1) CCTKGROUPNUM_lapse_rhs = CCTK_GroupIndex("LAPSE::lapse_rhs"); \
if(CCTKARGNUM_lapm1_rot1 == -1) CCTKARGNUM_lapm1_rot1 = CCTK_VarIndex("BSSN::lapm1_rot1"); \
if(CCTKARGNUM_lapm1_rot2 == -1) CCTKARGNUM_lapm1_rot2 = CCTK_VarIndex("BSSN::lapm1_rot2"); \
if(CCTKARGNUM_lapm1_rot3 == -1) CCTKARGNUM_lapm1_rot3 = CCTK_VarIndex("BSSN::lapm1_rot3"); \
if(CCTKARGNUM_lapset == -1) CCTKARGNUM_lapset = CCTK_VarIndex("LAPSE::lapset"); \
if(CCTKARGNUM_lapset_rhs == -1) CCTKARGNUM_lapset_rhs = CCTK_VarIndex("LAPSE::lapset_rhs"); \
if(CCTKARGNUM_lapset_timederiv == -1) CCTKARGNUM_lapset_timederiv = CCTK_VarIndex("LAPSE::lapset_timederiv"); \
if(CCTKGROUPNUM_lapse_vars_aux == -1) CCTKGROUPNUM_lapse_vars_aux = CCTK_GroupIndex("LAPSE::lapse_vars_aux"); \
if(CCTKARGNUM_lapsex == -1) CCTKARGNUM_lapsex = CCTK_VarIndex("LAPSE::lapsex"); \
if(CCTKGROUPNUM_lapse_derivatives == -1) CCTKGROUPNUM_lapse_derivatives = CCTK_GroupIndex("LAPSE::lapse_derivatives"); \
if(CCTKARGNUM_lapsey == -1) CCTKARGNUM_lapsey = CCTK_VarIndex("LAPSE::lapsey"); \
if(CCTKARGNUM_lapsez == -1) CCTKARGNUM_lapsez = CCTK_VarIndex("LAPSE::lapsez"); \
if(CCTKARGNUM_mass_star1 == -1) CCTKARGNUM_mass_star1 = CCTK_VarIndex("MOVINGBOX::mass_star1"); \
if(CCTKARGNUM_mass_star2 == -1) CCTKARGNUM_mass_star2 = CCTK_VarIndex("MOVINGBOX::mass_star2"); \
if(CCTKARGNUM_mhd_chi_line == -1) CCTKARGNUM_mhd_chi_line = CCTK_VarIndex("MHD_EVOLVE::mhd_chi_line"); \
if(CCTKGROUPNUM_field_line_variables == -1) CCTKGROUPNUM_field_line_variables = CCTK_GroupIndex("MHD_EVOLVE::field_line_variables"); \
if(CCTKARGNUM_mhd_chi_line_rhs == -1) CCTKARGNUM_mhd_chi_line_rhs = CCTK_VarIndex("MHD_EVOLVE::mhd_chi_line_rhs"); \
if(CCTKGROUPNUM_field_line_variables_rhs == -1) CCTKGROUPNUM_field_line_variables_rhs = CCTK_GroupIndex("MHD_EVOLVE::field_line_variables_rhs"); \
if(CCTKARGNUM_mhd_psi_line == -1) CCTKARGNUM_mhd_psi_line = CCTK_VarIndex("MHD_EVOLVE::mhd_psi_line"); \
if(CCTKARGNUM_mhd_psi_line_rhs == -1) CCTKARGNUM_mhd_psi_line_rhs = CCTK_VarIndex("MHD_EVOLVE::mhd_psi_line_rhs"); \
if(CCTKARGNUM_mhd_st_x == -1) CCTKARGNUM_mhd_st_x = CCTK_VarIndex("MHD_EVOLVE::mhd_st_x"); \
if(CCTKGROUPNUM_mhd_conservatives == -1) CCTKGROUPNUM_mhd_conservatives = CCTK_GroupIndex("MHD_EVOLVE::mhd_conservatives"); \
if(CCTKARGNUM_mhd_st_x_rhs == -1) CCTKARGNUM_mhd_st_x_rhs = CCTK_VarIndex("MHD_EVOLVE::mhd_st_x_rhs"); \
if(CCTKGROUPNUM_mhd_rhs == -1) CCTKGROUPNUM_mhd_rhs = CCTK_GroupIndex("MHD_EVOLVE::mhd_rhs"); \
if(CCTKARGNUM_mhd_st_y == -1) CCTKARGNUM_mhd_st_y = CCTK_VarIndex("MHD_EVOLVE::mhd_st_y"); \
if(CCTKARGNUM_mhd_st_y_rhs == -1) CCTKARGNUM_mhd_st_y_rhs = CCTK_VarIndex("MHD_EVOLVE::mhd_st_y_rhs"); \
if(CCTKARGNUM_mhd_st_z == -1) CCTKARGNUM_mhd_st_z = CCTK_VarIndex("MHD_EVOLVE::mhd_st_z"); \
if(CCTKARGNUM_mhd_st_z_rhs == -1) CCTKARGNUM_mhd_st_z_rhs = CCTK_VarIndex("MHD_EVOLVE::mhd_st_z_rhs"); \
if(CCTKARGNUM_mhd_u_chi == -1) CCTKARGNUM_mhd_u_chi = CCTK_VarIndex("MHD_EVOLVE::mhd_u_chi"); \
if(CCTKARGNUM_mhd_u_chi_rhs == -1) CCTKARGNUM_mhd_u_chi_rhs = CCTK_VarIndex("MHD_EVOLVE::mhd_u_chi_rhs"); \
if(CCTKARGNUM_mhd_u_psi == -1) CCTKARGNUM_mhd_u_psi = CCTK_VarIndex("MHD_EVOLVE::mhd_u_psi"); \
if(CCTKARGNUM_mhd_u_psi_rhs == -1) CCTKARGNUM_mhd_u_psi_rhs = CCTK_VarIndex("MHD_EVOLVE::mhd_u_psi_rhs"); \
if(CCTKARGNUM_minternal_cold_horiz_VolInt == -1) CCTKARGNUM_minternal_cold_horiz_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::minternal_cold_horiz_VolInt"); \
if(CCTKARGNUM_minternal_cold_r1_VolInt == -1) CCTKARGNUM_minternal_cold_r1_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::minternal_cold_r1_VolInt"); \
if(CCTKARGNUM_minternal_cold_r2_VolInt == -1) CCTKARGNUM_minternal_cold_r2_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::minternal_cold_r2_VolInt"); \
if(CCTKARGNUM_minternal_cold_r3_VolInt == -1) CCTKARGNUM_minternal_cold_r3_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::minternal_cold_r3_VolInt"); \
if(CCTKARGNUM_minternal_horiz_VolInt == -1) CCTKARGNUM_minternal_horiz_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::minternal_horiz_VolInt"); \
if(CCTKARGNUM_minternal_r1_VolInt == -1) CCTKARGNUM_minternal_r1_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::minternal_r1_VolInt"); \
if(CCTKARGNUM_minternal_r2_VolInt == -1) CCTKARGNUM_minternal_r2_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::minternal_r2_VolInt"); \
if(CCTKARGNUM_minternal_r3_VolInt == -1) CCTKARGNUM_minternal_r3_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::minternal_r3_VolInt"); \
if(CCTKARGNUM_mom_const_VolIntD == -1) CCTKARGNUM_mom_const_VolIntD = CCTK_VarIndex("DIAGNOSTICS_VACUUM::mom_const_VolIntD"); \
if(CCTKARGNUM_mom_const_excised_VolIntD == -1) CCTKARGNUM_mom_const_excised_VolIntD = CCTK_VarIndex("DIAGNOSTICS_VACUUM::mom_const_excised_VolIntD"); \
if(CCTKARGNUM_momentsi == -1) CCTKARGNUM_momentsi = CCTK_VarIndex("GW_EXTRACTION::momentsi"); \
if(CCTKARGNUM_momentsi_old == -1) CCTKARGNUM_momentsi_old = CCTK_VarIndex("GW_EXTRACTION::momentsi_old"); \
if(CCTKARGNUM_momentsr == -1) CCTKARGNUM_momentsr = CCTK_VarIndex("GW_EXTRACTION::momentsr"); \
if(CCTKARGNUM_momentsr_old == -1) CCTKARGNUM_momentsr_old = CCTK_VarIndex("GW_EXTRACTION::momentsr_old"); \
if(CCTKARGNUM_momx_const_VolIntN == -1) CCTKARGNUM_momx_const_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::momx_const_VolIntN"); \
if(CCTKARGNUM_momx_const_excised_VolIntN == -1) CCTKARGNUM_momx_const_excised_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::momx_const_excised_VolIntN"); \
if(CCTKARGNUM_momy_const_VolIntN == -1) CCTKARGNUM_momy_const_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::momy_const_VolIntN"); \
if(CCTKARGNUM_momy_const_excised_VolIntN == -1) CCTKARGNUM_momy_const_excised_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::momy_const_excised_VolIntN"); \
if(CCTKARGNUM_momz_const_VolIntN == -1) CCTKARGNUM_momz_const_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::momz_const_VolIntN"); \
if(CCTKARGNUM_momz_const_excised_VolIntN == -1) CCTKARGNUM_momz_const_excised_VolIntN = CCTK_VarIndex("DIAGNOSTICS_VACUUM::momz_const_excised_VolIntN"); \
if(CCTKARGNUM_monopole_VolInt == -1) CCTKARGNUM_monopole_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::monopole_VolInt"); \
if(CCTKARGNUM_monopole_outsideBH_VolInt == -1) CCTKARGNUM_monopole_outsideBH_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::monopole_outsideBH_VolInt"); \
if(CCTKARGNUM_mu_nu == -1) CCTKARGNUM_mu_nu = CCTK_VarIndex("MHD_EVOLVE::mu_nu"); \
if(CCTKARGNUM_n_poly == -1) CCTKARGNUM_n_poly = CCTK_VarIndex("MHD_EVOLVE::n_poly"); \
if(CCTKGROUPNUM_mhdscalar == -1) CCTKGROUPNUM_mhdscalar = CCTK_GroupIndex("MHD_EVOLVE::mhdscalar"); \
if(CCTKARGNUM_odd_momentsi == -1) CCTKARGNUM_odd_momentsi = CCTK_VarIndex("GW_EXTRACTION::odd_momentsi"); \
if(CCTKARGNUM_odd_momentsi_old == -1) CCTKARGNUM_odd_momentsi_old = CCTK_VarIndex("GW_EXTRACTION::odd_momentsi_old"); \
if(CCTKARGNUM_odd_momentsr == -1) CCTKARGNUM_odd_momentsr = CCTK_VarIndex("GW_EXTRACTION::odd_momentsr"); \
if(CCTKARGNUM_odd_momentsr_old == -1) CCTKARGNUM_odd_momentsr_old = CCTK_VarIndex("GW_EXTRACTION::odd_momentsr_old"); \
if(CCTKARGNUM_optd == -1) CCTKARGNUM_optd = CCTK_VarIndex("MHD_EVOLVE::optd"); \
if(CCTKARGNUM_optd_x == -1) CCTKARGNUM_optd_x = CCTK_VarIndex("MHD_EVOLVE::optd_x"); \
if(CCTKARGNUM_optd_y == -1) CCTKARGNUM_optd_y = CCTK_VarIndex("MHD_EVOLVE::optd_y"); \
if(CCTKARGNUM_optd_z == -1) CCTKARGNUM_optd_z = CCTK_VarIndex("MHD_EVOLVE::optd_z"); \
if(CCTKARGNUM_pfloor_gf == -1) CCTKARGNUM_pfloor_gf = CCTK_VarIndex("MHD_EVOLVE::pfloor_gf"); \
if(CCTKARGNUM_phi == -1) CCTKARGNUM_phi = CCTK_VarIndex("BSSN::phi"); \
if(CCTKARGNUM_phi_f == -1) CCTKARGNUM_phi_f = CCTK_VarIndex("MHD_EVOLVE::phi_f"); \
if(CCTKARGNUM_phi_rhs == -1) CCTKARGNUM_phi_rhs = CCTK_VarIndex("BSSN::phi_rhs"); \
if(CCTKARGNUM_phi_rot1 == -1) CCTKARGNUM_phi_rot1 = CCTK_VarIndex("BSSN::phi_rot1"); \
if(CCTKARGNUM_phi_rot2 == -1) CCTKARGNUM_phi_rot2 = CCTK_VarIndex("BSSN::phi_rot2"); \
if(CCTKARGNUM_phi_rot3 == -1) CCTKARGNUM_phi_rot3 = CCTK_VarIndex("BSSN::phi_rot3"); \
if(CCTKARGNUM_phix == -1) CCTKARGNUM_phix = CCTK_VarIndex("BSSN::phix"); \
if(CCTKGROUPNUM_phi_derivs == -1) CCTKGROUPNUM_phi_derivs = CCTK_GroupIndex("BSSN::phi_derivs"); \
if(CCTKARGNUM_phiy == -1) CCTKARGNUM_phiy = CCTK_VarIndex("BSSN::phiy"); \
if(CCTKARGNUM_phiz == -1) CCTKARGNUM_phiz = CCTK_VarIndex("BSSN::phiz"); \
if(CCTKARGNUM_psi == -1) CCTKARGNUM_psi = CCTK_VarIndex("BSSN::psi"); \
if(CCTKARGNUM_psi0im == -1) CCTKARGNUM_psi0im = CCTK_VarIndex("GW_EXTRACTION::psi0im"); \
if(CCTKGROUPNUM_Psi4_gw == -1) CCTKGROUPNUM_Psi4_gw = CCTK_GroupIndex("GW_EXTRACTION::Psi4_gw"); \
if(CCTKARGNUM_psi0re == -1) CCTKARGNUM_psi0re = CCTK_VarIndex("GW_EXTRACTION::psi0re"); \
if(CCTKARGNUM_psi6phi == -1) CCTKARGNUM_psi6phi = CCTK_VarIndex("MHD_EVOLVE::psi6phi"); \
if(CCTKGROUPNUM_em_Phi == -1) CCTKGROUPNUM_em_Phi = CCTK_GroupIndex("MHD_EVOLVE::em_Phi"); \
if(CCTKARGNUM_psi6phi_rhs == -1) CCTKARGNUM_psi6phi_rhs = CCTK_VarIndex("MHD_EVOLVE::psi6phi_rhs"); \
if(CCTKGROUPNUM_em_Phi_rhs == -1) CCTKGROUPNUM_em_Phi_rhs = CCTK_GroupIndex("MHD_EVOLVE::em_Phi_rhs"); \
if(CCTKARGNUM_rad_const == -1) CCTKARGNUM_rad_const = CCTK_VarIndex("MHD_EVOLVE::rad_const"); \
if(CCTKGROUPNUM_radscalar == -1) CCTKGROUPNUM_radscalar = CCTK_GroupIndex("MHD_EVOLVE::radscalar"); \
if(CCTKARGNUM_rad_energy_VolInt == -1) CCTKARGNUM_rad_energy_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::rad_energy_VolInt"); \
if(CCTKARGNUM_rad_energy_nue_VolInt == -1) CCTKARGNUM_rad_energy_nue_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::rad_energy_nue_VolInt"); \
if(CCTKARGNUM_rad_energy_nux_VolInt == -1) CCTKARGNUM_rad_energy_nux_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::rad_energy_nux_VolInt"); \
if(CCTKARGNUM_rbrvec == -1) CCTKARGNUM_rbrvec = CCTK_VarIndex("DIAGNOSTICS_VACUUM::rbrvec"); \
if(CCTKARGNUM_refbd == -1) CCTKARGNUM_refbd = CCTK_VarIndex("BSSN::refbd"); \
if(CCTKGROUPNUM_BSSN_refbd == -1) CCTKGROUPNUM_BSSN_refbd = CCTK_GroupIndex("BSSN::BSSN_refbd"); \
if(CCTKARGNUM_rho == -1) CCTKARGNUM_rho = CCTK_VarIndex("BSSN::rho"); \
if(CCTKARGNUM_rhoYe == -1) CCTKARGNUM_rhoYe = CCTK_VarIndex("MHD_EVOLVE::rhoYe"); \
if(CCTKGROUPNUM_micphys_conservatives == -1) CCTKGROUPNUM_micphys_conservatives = CCTK_GroupIndex("MHD_EVOLVE::micphys_conservatives"); \
if(CCTKARGNUM_rhoYe_rhs == -1) CCTKARGNUM_rhoYe_rhs = CCTK_VarIndex("MHD_EVOLVE::rhoYe_rhs"); \
if(CCTKGROUPNUM_micphys_conservatives_rhs == -1) CCTKGROUPNUM_micphys_conservatives_rhs = CCTK_GroupIndex("MHD_EVOLVE::micphys_conservatives_rhs"); \
if(CCTKARGNUM_rho_b == -1) CCTKARGNUM_rho_b = CCTK_VarIndex("MHD_EVOLVE::rho_b"); \
if(CCTKARGNUM_rho_b_atm_gf == -1) CCTKARGNUM_rho_b_atm_gf = CCTK_VarIndex("MHD_EVOLVE::rho_b_atm_gf"); \
if(CCTKARGNUM_rho_bl == -1) CCTKARGNUM_rho_bl = CCTK_VarIndex("MHD_EVOLVE::rho_bl"); \
if(CCTKGROUPNUM_mhd_sync_rho_br_rho_bl == -1) CCTKGROUPNUM_mhd_sync_rho_br_rho_bl = CCTK_GroupIndex("MHD_EVOLVE::mhd_sync_rho_br_rho_bl"); \
if(CCTKARGNUM_rho_br == -1) CCTKARGNUM_rho_br = CCTK_VarIndex("MHD_EVOLVE::rho_br"); \
if(CCTKARGNUM_rho_star == -1) CCTKARGNUM_rho_star = CCTK_VarIndex("MHD_EVOLVE::rho_star"); \
if(CCTKARGNUM_rho_star_rhs == -1) CCTKARGNUM_rho_star_rhs = CCTK_VarIndex("MHD_EVOLVE::rho_star_rhs"); \
if(CCTKARGNUM_rho_tab == -1) CCTKARGNUM_rho_tab = CCTK_VarIndex("MHD_EVOLVE::rho_tab"); \
if(CCTKARGNUM_rhob_floor == -1) CCTKARGNUM_rhob_floor = CCTK_VarIndex("MHD_EVOLVE::rhob_floor"); \
if(CCTKARGNUM_rhovec == -1) CCTKARGNUM_rhovec = CCTK_VarIndex("MHD_EVOLVE::rhovec"); \
if(CCTKARGNUM_sbt == -1) CCTKARGNUM_sbt = CCTK_VarIndex("MHD_EVOLVE::sbt"); \
if(CCTKARGNUM_sbx == -1) CCTKARGNUM_sbx = CCTK_VarIndex("MHD_EVOLVE::sbx"); \
if(CCTKARGNUM_sby == -1) CCTKARGNUM_sby = CCTK_VarIndex("MHD_EVOLVE::sby"); \
if(CCTKARGNUM_sbz == -1) CCTKARGNUM_sbz = CCTK_VarIndex("MHD_EVOLVE::sbz"); \
if(CCTKARGNUM_shiftp_rot1 == -1) CCTKARGNUM_shiftp_rot1 = CCTK_VarIndex("BSSN::shiftp_rot1"); \
if(CCTKARGNUM_shiftp_rot2 == -1) CCTKARGNUM_shiftp_rot2 = CCTK_VarIndex("BSSN::shiftp_rot2"); \
if(CCTKARGNUM_shiftp_rot3 == -1) CCTKARGNUM_shiftp_rot3 = CCTK_VarIndex("BSSN::shiftp_rot3"); \
if(CCTKARGNUM_shiftr_rot1 == -1) CCTKARGNUM_shiftr_rot1 = CCTK_VarIndex("BSSN::shiftr_rot1"); \
if(CCTKARGNUM_shiftr_rot2 == -1) CCTKARGNUM_shiftr_rot2 = CCTK_VarIndex("BSSN::shiftr_rot2"); \
if(CCTKARGNUM_shiftr_rot3 == -1) CCTKARGNUM_shiftr_rot3 = CCTK_VarIndex("BSSN::shiftr_rot3"); \
if(CCTKARGNUM_shiftth_rot1 == -1) CCTKARGNUM_shiftth_rot1 = CCTK_VarIndex("BSSN::shiftth_rot1"); \
if(CCTKARGNUM_shiftth_rot2 == -1) CCTKARGNUM_shiftth_rot2 = CCTK_VarIndex("BSSN::shiftth_rot2"); \
if(CCTKARGNUM_shiftth_rot3 == -1) CCTKARGNUM_shiftth_rot3 = CCTK_VarIndex("BSSN::shiftth_rot3"); \
if(CCTKARGNUM_shiftx == -1) CCTKARGNUM_shiftx = CCTK_VarIndex("SHIFT::shiftx"); \
if(CCTKGROUPNUM_shift_vars == -1) CCTKGROUPNUM_shift_vars = CCTK_GroupIndex("SHIFT::shift_vars"); \
if(CCTKARGNUM_shiftx_f == -1) CCTKARGNUM_shiftx_f = CCTK_VarIndex("MHD_EVOLVE::shiftx_f"); \
if(CCTKARGNUM_shiftx_rhs == -1) CCTKARGNUM_shiftx_rhs = CCTK_VarIndex("SHIFT::shiftx_rhs"); \
if(CCTKGROUPNUM_shift_rhs == -1) CCTKGROUPNUM_shift_rhs = CCTK_GroupIndex("SHIFT::shift_rhs"); \
if(CCTKARGNUM_shiftxt == -1) CCTKARGNUM_shiftxt = CCTK_VarIndex("SHIFT::shiftxt"); \
if(CCTKARGNUM_shiftxt_rhs == -1) CCTKARGNUM_shiftxt_rhs = CCTK_VarIndex("SHIFT::shiftxt_rhs"); \
if(CCTKARGNUM_shiftxt_timederiv == -1) CCTKARGNUM_shiftxt_timederiv = CCTK_VarIndex("SHIFT::shiftxt_timederiv"); \
if(CCTKARGNUM_shifty == -1) CCTKARGNUM_shifty = CCTK_VarIndex("SHIFT::shifty"); \
if(CCTKARGNUM_shifty_f == -1) CCTKARGNUM_shifty_f = CCTK_VarIndex("MHD_EVOLVE::shifty_f"); \
if(CCTKARGNUM_shifty_rhs == -1) CCTKARGNUM_shifty_rhs = CCTK_VarIndex("SHIFT::shifty_rhs"); \
if(CCTKARGNUM_shiftyt == -1) CCTKARGNUM_shiftyt = CCTK_VarIndex("SHIFT::shiftyt"); \
if(CCTKARGNUM_shiftyt_rhs == -1) CCTKARGNUM_shiftyt_rhs = CCTK_VarIndex("SHIFT::shiftyt_rhs"); \
if(CCTKARGNUM_shiftyt_timederiv == -1) CCTKARGNUM_shiftyt_timederiv = CCTK_VarIndex("SHIFT::shiftyt_timederiv"); \
if(CCTKARGNUM_shiftz == -1) CCTKARGNUM_shiftz = CCTK_VarIndex("SHIFT::shiftz"); \
if(CCTKARGNUM_shiftz_f == -1) CCTKARGNUM_shiftz_f = CCTK_VarIndex("MHD_EVOLVE::shiftz_f"); \
if(CCTKARGNUM_shiftz_rhs == -1) CCTKARGNUM_shiftz_rhs = CCTK_VarIndex("SHIFT::shiftz_rhs"); \
if(CCTKARGNUM_shiftzt == -1) CCTKARGNUM_shiftzt = CCTK_VarIndex("SHIFT::shiftzt"); \
if(CCTKARGNUM_shiftzt_rhs == -1) CCTKARGNUM_shiftzt_rhs = CCTK_VarIndex("SHIFT::shiftzt_rhs"); \
if(CCTKARGNUM_shiftzt_timederiv == -1) CCTKARGNUM_shiftzt_timederiv = CCTK_VarIndex("SHIFT::shiftzt_timederiv"); \
if(CCTKARGNUM_smallb2 == -1) CCTKARGNUM_smallb2 = CCTK_VarIndex("MHD_EVOLVE::smallb2"); \
if(CCTKARGNUM_st_x == -1) CCTKARGNUM_st_x = CCTK_VarIndex("MHD_EVOLVE::st_x"); \
if(CCTKARGNUM_st_y == -1) CCTKARGNUM_st_y = CCTK_VarIndex("MHD_EVOLVE::st_y"); \
if(CCTKARGNUM_st_z == -1) CCTKARGNUM_st_z = CCTK_VarIndex("MHD_EVOLVE::st_z"); \
if(CCTKARGNUM_surfvec == -1) CCTKARGNUM_surfvec = CCTK_VarIndex("DIAGNOSTICS_VACUUM::surfvec"); \
if(CCTKARGNUM_synch_VolInt == -1) CCTKARGNUM_synch_VolInt = CCTK_VarIndex("DIAGNOSTICS_MHD::synch_VolInt"); \
if(CCTKARGNUM_tau == -1) CCTKARGNUM_tau = CCTK_VarIndex("MHD_EVOLVE::tau"); \
if(CCTKARGNUM_tau_rad == -1) CCTKARGNUM_tau_rad = CCTK_VarIndex("MHD_EVOLVE::tau_rad"); \
if(CCTKARGNUM_tau_rad_nue == -1) CCTKARGNUM_tau_rad_nue = CCTK_VarIndex("MHD_EVOLVE::tau_rad_nue"); \
if(CCTKARGNUM_tau_rad_nue_rhs == -1) CCTKARGNUM_tau_rad_nue_rhs = CCTK_VarIndex("MHD_EVOLVE::tau_rad_nue_rhs"); \
if(CCTKARGNUM_tau_rad_nux == -1) CCTKARGNUM_tau_rad_nux = CCTK_VarIndex("MHD_EVOLVE::tau_rad_nux"); \
if(CCTKARGNUM_tau_rad_nux_rhs == -1) CCTKARGNUM_tau_rad_nux_rhs = CCTK_VarIndex("MHD_EVOLVE::tau_rad_nux_rhs"); \
if(CCTKARGNUM_tau_rad_rhs == -1) CCTKARGNUM_tau_rad_rhs = CCTK_VarIndex("MHD_EVOLVE::tau_rad_rhs"); \
if(CCTKARGNUM_tau_rhs == -1) CCTKARGNUM_tau_rhs = CCTK_VarIndex("MHD_EVOLVE::tau_rhs"); \
if(CCTKARGNUM_temp1 == -1) CCTKARGNUM_temp1 = CCTK_VarIndex("MHD_EVOLVE::temp1"); \
if(CCTKARGNUM_temp10 == -1) CCTKARGNUM_temp10 = CCTK_VarIndex("MHD_EVOLVE::temp10"); \
if(CCTKARGNUM_temp11 == -1) CCTKARGNUM_temp11 = CCTK_VarIndex("MHD_EVOLVE::temp11"); \
if(CCTKARGNUM_temp12 == -1) CCTKARGNUM_temp12 = CCTK_VarIndex("MHD_EVOLVE::temp12"); \
if(CCTKARGNUM_temp13 == -1) CCTKARGNUM_temp13 = CCTK_VarIndex("MHD_EVOLVE::temp13"); \
if(CCTKARGNUM_temp14 == -1) CCTKARGNUM_temp14 = CCTK_VarIndex("MHD_EVOLVE::temp14"); \
if(CCTKARGNUM_temp15 == -1) CCTKARGNUM_temp15 = CCTK_VarIndex("MHD_EVOLVE::temp15"); \
if(CCTKARGNUM_temp16 == -1) CCTKARGNUM_temp16 = CCTK_VarIndex("MHD_EVOLVE::temp16"); \
if(CCTKARGNUM_temp17 == -1) CCTKARGNUM_temp17 = CCTK_VarIndex("MHD_EVOLVE::temp17"); \
if(CCTKARGNUM_temp18 == -1) CCTKARGNUM_temp18 = CCTK_VarIndex("MHD_EVOLVE::temp18"); \
if(CCTKARGNUM_temp19 == -1) CCTKARGNUM_temp19 = CCTK_VarIndex("MHD_EVOLVE::temp19"); \
if(CCTKARGNUM_temp2 == -1) CCTKARGNUM_temp2 = CCTK_VarIndex("MHD_EVOLVE::temp2"); \
if(CCTKARGNUM_temp20 == -1) CCTKARGNUM_temp20 = CCTK_VarIndex("MHD_EVOLVE::temp20"); \
if(CCTKARGNUM_temp21 == -1) CCTKARGNUM_temp21 = CCTK_VarIndex("MHD_EVOLVE::temp21"); \
if(CCTKARGNUM_temp22 == -1) CCTKARGNUM_temp22 = CCTK_VarIndex("MHD_EVOLVE::temp22"); \
if(CCTKARGNUM_temp23 == -1) CCTKARGNUM_temp23 = CCTK_VarIndex("MHD_EVOLVE::temp23"); \
if(CCTKARGNUM_temp24 == -1) CCTKARGNUM_temp24 = CCTK_VarIndex("MHD_EVOLVE::temp24"); \
if(CCTKARGNUM_temp25 == -1) CCTKARGNUM_temp25 = CCTK_VarIndex("MHD_EVOLVE::temp25"); \
if(CCTKARGNUM_temp26 == -1) CCTKARGNUM_temp26 = CCTK_VarIndex("MHD_EVOLVE::temp26"); \
if(CCTKARGNUM_temp3 == -1) CCTKARGNUM_temp3 = CCTK_VarIndex("MHD_EVOLVE::temp3"); \
if(CCTKARGNUM_temp4 == -1) CCTKARGNUM_temp4 = CCTK_VarIndex("MHD_EVOLVE::temp4"); \
if(CCTKARGNUM_temp5 == -1) CCTKARGNUM_temp5 = CCTK_VarIndex("MHD_EVOLVE::temp5"); \
if(CCTKARGNUM_temp6 == -1) CCTKARGNUM_temp6 = CCTK_VarIndex("MHD_EVOLVE::temp6"); \
if(CCTKARGNUM_temp7 == -1) CCTKARGNUM_temp7 = CCTK_VarIndex("MHD_EVOLVE::temp7"); \
if(CCTKARGNUM_temp8 == -1) CCTKARGNUM_temp8 = CCTK_VarIndex("MHD_EVOLVE::temp8"); \
if(CCTKARGNUM_temp9 == -1) CCTKARGNUM_temp9 = CCTK_VarIndex("MHD_EVOLVE::temp9"); \
if(CCTKARGNUM_temp_g00 == -1) CCTKARGNUM_temp_g00 = CCTK_VarIndex("MHD_EVOLVE::temp_g00"); \
if(CCTKARGNUM_trK == -1) CCTKARGNUM_trK = CCTK_VarIndex("BSSN::trK"); \
if(CCTKARGNUM_trK_rhs == -1) CCTKARGNUM_trK_rhs = CCTK_VarIndex("BSSN::trK_rhs"); \
if(CCTKARGNUM_trR == -1) CCTKARGNUM_trR = CCTK_VarIndex("BSSN::trR"); \
if(CCTKARGNUM_trRtilde == -1) CCTKARGNUM_trRtilde = CCTK_VarIndex("BSSN::trRtilde"); \
if(CCTKARGNUM_u0 == -1) CCTKARGNUM_u0 = CCTK_VarIndex("MHD_EVOLVE::u0"); \
if(CCTKARGNUM_v02_rad_nuel == -1) CCTKARGNUM_v02_rad_nuel = CCTK_VarIndex("MHD_EVOLVE::v02_rad_nuel"); \
if(CCTKARGNUM_v02_rad_nuer == -1) CCTKARGNUM_v02_rad_nuer = CCTK_VarIndex("MHD_EVOLVE::v02_rad_nuer"); \
if(CCTKARGNUM_v02_rad_nuxl == -1) CCTKARGNUM_v02_rad_nuxl = CCTK_VarIndex("MHD_EVOLVE::v02_rad_nuxl"); \
if(CCTKARGNUM_v02_rad_nuxr == -1) CCTKARGNUM_v02_rad_nuxr = CCTK_VarIndex("MHD_EVOLVE::v02_rad_nuxr"); \
if(CCTKARGNUM_v02_radl == -1) CCTKARGNUM_v02_radl = CCTK_VarIndex("MHD_EVOLVE::v02_radl"); \
if(CCTKARGNUM_v02_radr == -1) CCTKARGNUM_v02_radr = CCTK_VarIndex("MHD_EVOLVE::v02_radr"); \
if(CCTKARGNUM_v02l == -1) CCTKARGNUM_v02l = CCTK_VarIndex("MHD_EVOLVE::v02l"); \
if(CCTKARGNUM_v02r == -1) CCTKARGNUM_v02r = CCTK_VarIndex("MHD_EVOLVE::v02r"); \
if(CCTKARGNUM_vvec == -1) CCTKARGNUM_vvec = CCTK_VarIndex("MHD_EVOLVE::vvec"); \
if(CCTKARGNUM_vx == -1) CCTKARGNUM_vx = CCTK_VarIndex("MHD_EVOLVE::vx"); \
if(CCTKGROUPNUM_mhd_vs == -1) CCTKGROUPNUM_mhd_vs = CCTK_GroupIndex("MHD_EVOLVE::mhd_vs"); \
if(CCTKARGNUM_vxl == -1) CCTKARGNUM_vxl = CCTK_VarIndex("MHD_EVOLVE::vxl"); \
if(CCTKARGNUM_vxr == -1) CCTKARGNUM_vxr = CCTK_VarIndex("MHD_EVOLVE::vxr"); \
if(CCTKARGNUM_vy == -1) CCTKARGNUM_vy = CCTK_VarIndex("MHD_EVOLVE::vy"); \
if(CCTKARGNUM_vyl == -1) CCTKARGNUM_vyl = CCTK_VarIndex("MHD_EVOLVE::vyl"); \
if(CCTKARGNUM_vyr == -1) CCTKARGNUM_vyr = CCTK_VarIndex("MHD_EVOLVE::vyr"); \
if(CCTKARGNUM_vz == -1) CCTKARGNUM_vz = CCTK_VarIndex("MHD_EVOLVE::vz"); \
if(CCTKARGNUM_vzl == -1) CCTKARGNUM_vzl = CCTK_VarIndex("MHD_EVOLVE::vzl"); \
if(CCTKARGNUM_vzr == -1) CCTKARGNUM_vzr = CCTK_VarIndex("MHD_EVOLVE::vzr"); \
if(CCTKARGNUM_w == -1) CCTKARGNUM_w = CCTK_VarIndex("MHD_EVOLVE::w"); \
if(CCTKARGNUM_zeta_rad == -1) CCTKARGNUM_zeta_rad = CCTK_VarIndex("MHD_EVOLVE::zeta_rad"); \
if(CCTKARGNUM_zeta_rad_nue == -1) CCTKARGNUM_zeta_rad_nue = CCTK_VarIndex("MHD_EVOLVE::zeta_rad_nue"); \
if(CCTKARGNUM_zeta_rad_nux == -1) CCTKARGNUM_zeta_rad_nux = CCTK_VarIndex("MHD_EVOLVE::zeta_rad_nux");

#define ANG_FREQ_OFBFIELD_PROTECTED_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_ANG_FREQ_OFBFIELD_PROTECTED_C2F(GH) \
PASS_GROUPSIZE(BSSN_AH, 0),\
PASS_GROUPSIZE(BSSN_aux_private, 0),\
PASS_GROUPSIZE(BSSN_aux_restrict2, 0),\
PASS_GROUPSIZE(BSSN_diag_restrict, 0),\
PASS_GROUPSIZE(BSSN_gupij, 0),\
PASS_GROUPSIZE(BSSN_matter, 0),\
PASS_GROUPSIZE(BSSN_refbd, 0),\
PASS_GROUPSIZE(BSSN_rhs, 0),\
PASS_GROUPSIZE(BSSN_vars, 0),\
PASS_GROUPSIZE(NPphi2_em, 0),\
PASS_GROUPSIZE(OmegF, 0),\
PASS_GROUPSIZE(Psi4_gw, 0),\
PASS_GROUPSIZE(Stagger_Bs, 0),\
PASS_GROUPSIZE(ah_radius, 0),\
PASS_GROUPSIZE(bh_posns, 0),\
PASS_GROUPSIZE(diag_vacuum_gf, 0),\
PASS_GROUPSIZE(disk_atmosphere, 0),\
PASS_GROUPSIZE(em_Ax, 0),\
PASS_GROUPSIZE(em_Ay, 0),\
PASS_GROUPSIZE(em_Az, 0),\
PASS_GROUPSIZE(em_Blagrangemultiplier, 0),\
PASS_GROUPSIZE(em_Blagrangemultiplier_rhs, 0),\
PASS_GROUPSIZE(em_Phi, 0),\
PASS_GROUPSIZE(em_Phi_rhs, 0),\
PASS_GROUPSIZE(em_conservativex, 0),\
PASS_GROUPSIZE(em_conservativey, 0),\
PASS_GROUPSIZE(em_conservativez, 0),\
PASS_GROUPSIZE(em_rhsx, 0),\
PASS_GROUPSIZE(em_rhsy, 0),\
PASS_GROUPSIZE(em_rhsz, 0),\
PASS_GROUPSIZE(eos_params1, 0),\
PASS_GROUPSIZE(eos_params2, 0),\
PASS_GROUPSIZE(excision_int_gfs, 0),\
PASS_GROUPSIZE(field_line_variables, 0),\
PASS_GROUPSIZE(field_line_variables_rhs, 0),\
PASS_GROUPSIZE(fisheye_vars, 0),\
PASS_GROUPSIZE(gw_moment_arrays, 0),\
PASS_GROUPSIZE(have_global_bdry, 0),\
PASS_GROUPSIZE(lapse_derivatives, 0),\
PASS_GROUPSIZE(lapse_rhs, 0),\
PASS_GROUPSIZE(lapse_vars, 0),\
PASS_GROUPSIZE(lapse_vars_aux, 0),\
PASS_GROUPSIZE(metric_spher_pol_1, 0),\
PASS_GROUPSIZE(metric_spher_pol_2, 0),\
PASS_GROUPSIZE(metric_spher_pol_3, 0),\
PASS_GROUPSIZE(mhd_conservatives, 0),\
PASS_GROUPSIZE(mhd_nosync, 0),\
PASS_GROUPSIZE(mhd_primitives, 0),\
PASS_GROUPSIZE(mhd_rhs, 0),\
PASS_GROUPSIZE(mhd_sync_lr_B_quantities, 0),\
PASS_GROUPSIZE(mhd_sync_lr_hydro_quantities, 0),\
PASS_GROUPSIZE(mhd_sync_metric_facevals, 0),\
PASS_GROUPSIZE(mhd_sync_nablas, 0),\
PASS_GROUPSIZE(mhd_sync_nablas_diag, 0),\
PASS_GROUPSIZE(mhd_sync_rho_br_rho_bl, 0),\
PASS_GROUPSIZE(mhd_temps, 0),\
PASS_GROUPSIZE(mhd_vs, 0),\
PASS_GROUPSIZE(micphys_conservatives, 0),\
PASS_GROUPSIZE(micphys_conservatives_rhs, 0),\
PASS_GROUPSIZE(micphys_sync_lr_hydro_quantities, 0),\
PASS_GROUPSIZE(micphys_sync_nablas, 0),\
PASS_GROUPSIZE(microphys_primitives, 0),\
PASS_GROUPSIZE(phi_derivs, 0),\
PASS_GROUPSIZE(rad_conservatives, 0),\
PASS_GROUPSIZE(rad_conservatives_rhs, 0),\
PASS_GROUPSIZE(rad_pressure, 0),\
PASS_GROUPSIZE(rad_primitives, 0),\
PASS_GROUPSIZE(rad_sync_lr, 0),\
PASS_GROUPSIZE(rhovecs, 0),\
PASS_GROUPSIZE(shift_rhs, 0),\
PASS_GROUPSIZE(shift_vars, 0),\
PASS_GROUPSIZE(shift_vars_temp, 0),\
PASS_GROUPSIZE(surf_params, 0),\
PASS_GROUPSIZE(BSSN_AH, 1),\
PASS_GROUPSIZE(BSSN_aux_private, 1),\
PASS_GROUPSIZE(BSSN_aux_restrict2, 1),\
PASS_GROUPSIZE(BSSN_diag_restrict, 1),\
PASS_GROUPSIZE(BSSN_gupij, 1),\
PASS_GROUPSIZE(BSSN_matter, 1),\
PASS_GROUPSIZE(BSSN_refbd, 1),\
PASS_GROUPSIZE(BSSN_rhs, 1),\
PASS_GROUPSIZE(BSSN_vars, 1),\
PASS_GROUPSIZE(NPphi2_em, 1),\
PASS_GROUPSIZE(OmegF, 1),\
PASS_GROUPSIZE(Psi4_gw, 1),\
PASS_GROUPSIZE(Stagger_Bs, 1),\
PASS_GROUPSIZE(ah_radius, 1),\
PASS_GROUPSIZE(diag_vacuum_gf, 1),\
PASS_GROUPSIZE(disk_atmosphere, 1),\
PASS_GROUPSIZE(em_Ax, 1),\
PASS_GROUPSIZE(em_Ay, 1),\
PASS_GROUPSIZE(em_Az, 1),\
PASS_GROUPSIZE(em_Blagrangemultiplier, 1),\
PASS_GROUPSIZE(em_Blagrangemultiplier_rhs, 1),\
PASS_GROUPSIZE(em_Phi, 1),\
PASS_GROUPSIZE(em_Phi_rhs, 1),\
PASS_GROUPSIZE(em_conservativex, 1),\
PASS_GROUPSIZE(em_conservativey, 1),\
PASS_GROUPSIZE(em_conservativez, 1),\
PASS_GROUPSIZE(em_rhsx, 1),\
PASS_GROUPSIZE(em_rhsy, 1),\
PASS_GROUPSIZE(em_rhsz, 1),\
PASS_GROUPSIZE(excision_int_gfs, 1),\
PASS_GROUPSIZE(field_line_variables, 1),\
PASS_GROUPSIZE(field_line_variables_rhs, 1),\
PASS_GROUPSIZE(fisheye_vars, 1),\
PASS_GROUPSIZE(have_global_bdry, 1),\
PASS_GROUPSIZE(lapse_derivatives, 1),\
PASS_GROUPSIZE(lapse_rhs, 1),\
PASS_GROUPSIZE(lapse_vars, 1),\
PASS_GROUPSIZE(lapse_vars_aux, 1),\
PASS_GROUPSIZE(mhd_conservatives, 1),\
PASS_GROUPSIZE(mhd_nosync, 1),\
PASS_GROUPSIZE(mhd_primitives, 1),\
PASS_GROUPSIZE(mhd_rhs, 1),\
PASS_GROUPSIZE(mhd_sync_lr_B_quantities, 1),\
PASS_GROUPSIZE(mhd_sync_lr_hydro_quantities, 1),\
PASS_GROUPSIZE(mhd_sync_metric_facevals, 1),\
PASS_GROUPSIZE(mhd_sync_nablas, 1),\
PASS_GROUPSIZE(mhd_sync_nablas_diag, 1),\
PASS_GROUPSIZE(mhd_sync_rho_br_rho_bl, 1),\
PASS_GROUPSIZE(mhd_temps, 1),\
PASS_GROUPSIZE(mhd_vs, 1),\
PASS_GROUPSIZE(micphys_conservatives, 1),\
PASS_GROUPSIZE(micphys_conservatives_rhs, 1),\
PASS_GROUPSIZE(micphys_sync_lr_hydro_quantities, 1),\
PASS_GROUPSIZE(micphys_sync_nablas, 1),\
PASS_GROUPSIZE(microphys_primitives, 1),\
PASS_GROUPSIZE(phi_derivs, 1),\
PASS_GROUPSIZE(rad_conservatives, 1),\
PASS_GROUPSIZE(rad_conservatives_rhs, 1),\
PASS_GROUPSIZE(rad_pressure, 1),\
PASS_GROUPSIZE(rad_primitives, 1),\
PASS_GROUPSIZE(rad_sync_lr, 1),\
PASS_GROUPSIZE(shift_rhs, 1),\
PASS_GROUPSIZE(shift_vars, 1),\
PASS_GROUPSIZE(shift_vars_temp, 1),\
PASS_GROUPSIZE(BSSN_AH, 2),\
PASS_GROUPSIZE(BSSN_aux_private, 2),\
PASS_GROUPSIZE(BSSN_aux_restrict2, 2),\
PASS_GROUPSIZE(BSSN_diag_restrict, 2),\
PASS_GROUPSIZE(BSSN_gupij, 2),\
PASS_GROUPSIZE(BSSN_matter, 2),\
PASS_GROUPSIZE(BSSN_refbd, 2),\
PASS_GROUPSIZE(BSSN_rhs, 2),\
PASS_GROUPSIZE(BSSN_vars, 2),\
PASS_GROUPSIZE(NPphi2_em, 2),\
PASS_GROUPSIZE(OmegF, 2),\
PASS_GROUPSIZE(Psi4_gw, 2),\
PASS_GROUPSIZE(Stagger_Bs, 2),\
PASS_GROUPSIZE(ah_radius, 2),\
PASS_GROUPSIZE(diag_vacuum_gf, 2),\
PASS_GROUPSIZE(disk_atmosphere, 2),\
PASS_GROUPSIZE(em_Ax, 2),\
PASS_GROUPSIZE(em_Ay, 2),\
PASS_GROUPSIZE(em_Az, 2),\
PASS_GROUPSIZE(em_Blagrangemultiplier, 2),\
PASS_GROUPSIZE(em_Blagrangemultiplier_rhs, 2),\
PASS_GROUPSIZE(em_Phi, 2),\
PASS_GROUPSIZE(em_Phi_rhs, 2),\
PASS_GROUPSIZE(em_conservativex, 2),\
PASS_GROUPSIZE(em_conservativey, 2),\
PASS_GROUPSIZE(em_conservativez, 2),\
PASS_GROUPSIZE(em_rhsx, 2),\
PASS_GROUPSIZE(em_rhsy, 2),\
PASS_GROUPSIZE(em_rhsz, 2),\
PASS_GROUPSIZE(excision_int_gfs, 2),\
PASS_GROUPSIZE(field_line_variables, 2),\
PASS_GROUPSIZE(field_line_variables_rhs, 2),\
PASS_GROUPSIZE(fisheye_vars, 2),\
PASS_GROUPSIZE(lapse_derivatives, 2),\
PASS_GROUPSIZE(lapse_rhs, 2),\
PASS_GROUPSIZE(lapse_vars, 2),\
PASS_GROUPSIZE(lapse_vars_aux, 2),\
PASS_GROUPSIZE(mhd_conservatives, 2),\
PASS_GROUPSIZE(mhd_nosync, 2),\
PASS_GROUPSIZE(mhd_primitives, 2),\
PASS_GROUPSIZE(mhd_rhs, 2),\
PASS_GROUPSIZE(mhd_sync_lr_B_quantities, 2),\
PASS_GROUPSIZE(mhd_sync_lr_hydro_quantities, 2),\
PASS_GROUPSIZE(mhd_sync_metric_facevals, 2),\
PASS_GROUPSIZE(mhd_sync_nablas, 2),\
PASS_GROUPSIZE(mhd_sync_nablas_diag, 2),\
PASS_GROUPSIZE(mhd_sync_rho_br_rho_bl, 2),\
PASS_GROUPSIZE(mhd_temps, 2),\
PASS_GROUPSIZE(mhd_vs, 2),\
PASS_GROUPSIZE(micphys_conservatives, 2),\
PASS_GROUPSIZE(micphys_conservatives_rhs, 2),\
PASS_GROUPSIZE(micphys_sync_lr_hydro_quantities, 2),\
PASS_GROUPSIZE(micphys_sync_nablas, 2),\
PASS_GROUPSIZE(microphys_primitives, 2),\
PASS_GROUPSIZE(phi_derivs, 2),\
PASS_GROUPSIZE(rad_conservatives, 2),\
PASS_GROUPSIZE(rad_conservatives_rhs, 2),\
PASS_GROUPSIZE(rad_pressure, 2),\
PASS_GROUPSIZE(rad_primitives, 2),\
PASS_GROUPSIZE(rad_sync_lr, 2),\
PASS_GROUPSIZE(shift_rhs, 2),\
PASS_GROUPSIZE(shift_vars, 2),\
PASS_GROUPSIZE(shift_vars_temp, 2),\
PASS_GROUPLEN(AHFINDERDIRECT, ah_centroid),\
PASS_GROUPLEN(AHFINDERDIRECT, ah_flags),\
PASS_GROUPLEN(AHFINDERDIRECT, ah_origin),\
PASS_GROUPLEN(AHFINDERDIRECT, ah_radius),\
(CCTK_REAL *)(PASS_REFERENCE(Aupxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Aupxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Aupxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Aupyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Aupyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Aupzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Axx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Axx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Axx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Axx_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Axy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Axy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Axy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Axy_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Axz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Axz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Axz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Axz_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ayy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ayy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ayy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ayy_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ayz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ayz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ayz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ayz_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Az, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Az, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Az, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Azz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Azz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Azz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Azz_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bfreq1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bfreq1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Bfreq1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Bfreq2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bfreq2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Bfreq2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Blagrangemultiplier, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Blagrangemultiplier, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Blagrangemultiplier, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Blagrangemultiplier_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1X_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1X_VolInt1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1X_VolInt2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1Y_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1Y_VolInt1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1Y_VolInt2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1Z_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1Z_VolInt1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1Z_VolInt2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1denom_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1denom_VolInt1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Box1denom_VolInt2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bx_stagger, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bxl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bxr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bxtilde, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bxtilde, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Bxtilde, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Bxtilde_or_Ax_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(By, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(By_stagger, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Byl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Byr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bytilde, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bytilde, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Bytilde, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Bytilde_or_Ay_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bz_stagger, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bzl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bzr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bztilde, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bztilde, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Bztilde, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Bztilde_or_Az_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(CoM_VolInt_denominator, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(CoMx_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(CoMy_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(CoMz_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_rad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_rad_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_rad_nuel, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_rad_nuer, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_rad_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_rad_nuxl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_rad_nuxr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_radl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(E_radr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ex, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ey, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ez, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rad0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rad0_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rad0_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rad_scalar, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rad_scalar_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rad_scalar_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radx_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radx_nuele, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radx_nuer, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radx_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radx_nuxle, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radx_nuxr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radxle, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radxr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rady, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rady_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rady_nuele, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rady_nuer, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rady_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rady_nuxle, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_rady_nuxr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radyle, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radyr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radz_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radz_nuele, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radz_nuer, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radz_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radz_nuxle, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radz_nuxr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radzle, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(F_radzr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(FaFal, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(FaFal_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(FaFal_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(FaFar, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(FaFar_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(FaFar_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Fontfix_tracker_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammax_drive, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammax_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaxxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaxxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaxxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaxyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaxyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaxzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammay_drive, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammay_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammayxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammayxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammayxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammayyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammayyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammayzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaz_drive, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammaz_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammazxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammazxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammazxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammazyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammazyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gammazzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gamx_const_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gamy_const_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Gamz_const_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ham_const_VolIntD, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ham_const_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ham_const_excised_VolIntD, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ham_const_excised_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ham_const_excised_innerregion_VolIntD, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ham_const_excised_innerregion_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(J_ADM_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(J_ADM_VolInt_inner, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(J_ADM_VolInt_inner2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Jz_constraint, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Jz_constraint_inner, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(KK, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_pp_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_pp_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_pp_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rp_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rp_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rp_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rr_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rr_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rr_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rth_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rth_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_rth_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_thp_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_thp_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_thp_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_thth_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_thth_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(K_thth_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_AH_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_escape100M, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_escape30M, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_escape50M, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_escape70M, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_horiz_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_r1_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_r2_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M0_r3_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(MNorm, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(MONOPOLE, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(MRsx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(MRsy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(MRsz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M_ADM_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M_constraint, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M_constraint_inner, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Minternal_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Minternal_cold_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi0im, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi0im, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi0im, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi0re, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi0re, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi0re, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi2im, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi2im, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi2im, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi2re, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi2re, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(NPphi2re, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(OS_surf_rad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_cld, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_constraint, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_constraint_inner, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_floor, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxx_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxx_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxy_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxy_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxz_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radxz_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radyy_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radyy_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radyz_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radyz_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radzz_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_radzz_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_tab, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(P_thermal, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(PhysicalRadius, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Pl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Pr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(PsiNorm, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(PsiRes, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(PsiTau, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Pvec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RadiusDerivative, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RadiusDerivative2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Rxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Rxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Rxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ryy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ryz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Rzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SPx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SPx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SPx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SPy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SPy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SPy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SPz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SPz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SPz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_nue, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_nue, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_nue_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_nux, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_nux, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_nux_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_x_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_nue, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_nue, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_nue_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_nux, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_nux, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_nux_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_y_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_nue, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_nue, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_nue_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_nux, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_nux, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_nux_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(S_rad_z_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Sx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Sxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Sxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Sxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Sy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Syy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Syz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Sz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Szz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0x, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0x, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0y, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0y, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0z, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(T_0z, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(T_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(T_fluid, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(T_fluidle, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(T_fluidr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Tem0_0_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Tem0_0_outsideBH_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Tfluid0_0_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Tfluid0_0_outsideBH_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(VolIntegrand, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(VolIntegrand2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(VolIntegrand3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(VolIntegrand4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_el, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_er, 0)),\
(CCTK_INT *)(PASS_REFERENCE(ah_centroid_iteration, 0)),\
(CCTK_INT *)(PASS_REFERENCE(ah_centroid_iteration_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_centroid_t, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_centroid_t_p, 0)),\
(CCTK_INT *)(PASS_REFERENCE(ah_centroid_valid, 0)),\
(CCTK_INT *)(PASS_REFERENCE(ah_centroid_valid_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_centroid_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_centroid_x_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_centroid_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_centroid_y_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_centroid_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_centroid_z_p, 0)),\
(CCTK_INT *)(PASS_REFERENCE(ah_found_flag, 0)),\
(CCTK_INT *)(PASS_REFERENCE(ah_initial_find_flag, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_origin_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_origin_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_origin_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ah_radius, 0)),\
(CCTK_INT *)(PASS_REFERENCE(ah_really_initial_find_flag, 0)),\
(CCTK_INT *)(PASS_REFERENCE(ah_search_flag, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(b_phi_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bh_posn_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bh_posn_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bh_posn_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bh_radius_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(brem_qee_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(brem_qei_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(chi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(chi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(chi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(chi_rad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(chi_rad_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(chi_rad_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(chi_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cmax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cmax_rad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cmax_rad_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cmax_rad_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cmin, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cmin_rad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cmin_rad_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cmin_rad_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dBx_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dBy_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dBz_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dP_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dT_fluid_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ddrbrvec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_i1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_i2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_i3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_i4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_i5, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_i6, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_r0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_r1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_r2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_r3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_r4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_r5, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(density_modes_r6, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(div_beta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drbrvec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drhoYe_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drhoYe_m_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drhoYe_m_xp1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drho_b_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drho_b_m_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drho_b_m_xp1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dvx_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dvx_m_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dvx_m_xp1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dvy_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dvz_m, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(em_J_between_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(em_energy2_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(em_energy_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(em_energy_between_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(em_energy_outsideBH_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(em_energy_outsideradius1_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(em_energy_outsideradius2_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(emission_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(emission_gf_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(emission_gf_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eps_cld, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eps_tab, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eps_thermal, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eps_tot, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eta_nue, 0)),\
(CCTK_INT *)(PASS_REFERENCE(excision_zone_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fluid_J_horiz_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fluid_J_r1_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fluid_J_r2_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fluid_J_r3_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fluid_energy_horiz_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fluid_energy_r1_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fluid_energy_r2_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fluid_energy_r3_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gamma_tab, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gconx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gcony, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gconz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupxx_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupxy_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupxz_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupyy_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupyz_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gupzz_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxyx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxzx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxzy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyyx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyzx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyzy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzzx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzzy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(h, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(h_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(half_b2_u0_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(half_b2_u0_outsideBH_VolInt, 0)),\
(CCTK_INT *)(PASS_REFERENCE(have_global_bdry_max, 0)),\
(CCTK_INT *)(PASS_REFERENCE(have_global_bdry_min, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(int_momentsi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(int_momentsr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(k_tab, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ka_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ka_gf_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ka_gf_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ks_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ks_gf_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ks_gf_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapm1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapm1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(lapm1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(lapm1_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapm1_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapm1_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapm1_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapm1_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapset, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapset, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(lapset, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(lapset_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapset_timederiv, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapsex, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapsey, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lapsez, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mass_star1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mass_star2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_chi_line, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_chi_line, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_chi_line, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_chi_line_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_psi_line, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_psi_line, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_psi_line, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_psi_line_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_x, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_x, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_x_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_y, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_y, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_y_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_z, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_z, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_st_z_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_u_chi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_u_chi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_u_chi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_u_chi_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_u_psi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_u_psi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_u_psi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(mhd_u_psi_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(minternal_cold_horiz_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(minternal_cold_r1_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(minternal_cold_r2_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(minternal_cold_r3_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(minternal_horiz_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(minternal_r1_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(minternal_r2_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(minternal_r3_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mom_const_VolIntD, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mom_const_excised_VolIntD, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momentsi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momentsi_old, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momentsr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momentsr_old, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momx_const_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momx_const_excised_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momy_const_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momy_const_excised_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momz_const_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(momz_const_excised_VolIntN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(monopole_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(monopole_outsideBH_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mu_nu, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(n_poly, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(odd_momentsi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(odd_momentsi_old, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(odd_momentsr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(odd_momentsr_old, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(optd, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(optd_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(optd_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(optd_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(pfloor_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phi_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phix, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psi0im, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psi0im, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(psi0im, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(psi0re, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psi0re, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(psi0re, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(psi6phi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psi6phi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(psi6phi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(psi6phi_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rad_const, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rad_energy_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rad_energy_nue_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rad_energy_nux_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rbrvec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(refbd, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(refbd, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(refbd, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(rho, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rhoYe, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rhoYe, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(rhoYe, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(rhoYe_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_b, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_b_atm_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_bl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_br, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_star, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_star, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_star, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_star_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho_tab, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rhob_floor, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rhovec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sbt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sbx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sby, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sbz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftp_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftp_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftp_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftr_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftr_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftr_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftth_rot1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftth_rot2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftth_rot3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftx_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftx_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftxt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftxt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftxt, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftxt_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftxt_timederiv, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shifty, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shifty, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(shifty, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(shifty_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shifty_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftyt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftyt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftyt, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftyt_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftyt_timederiv, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftz_f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftz_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftzt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftzt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftzt, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftzt_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(shiftzt_timederiv, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(smallb2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(st_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(st_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(st_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(surfvec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(synch_VolInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(tau, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_nue, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_nue, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_nue_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_nux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_nux, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_nux, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_nux_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rad_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp10, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp11, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp12, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp13, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp14, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp15, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp16, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp17, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp18, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp19, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp20, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp21, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp22, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp23, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp24, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp25, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp26, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp5, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp6, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp7, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp8, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp9, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temp_g00, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(trK, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(trK, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(trK, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(trK_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(trR, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(trRtilde, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(u0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(v02_rad_nuel, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(v02_rad_nuer, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(v02_rad_nuxl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(v02_rad_nuxr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(v02_radl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(v02_radr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(v02l, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(v02r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vvec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vxl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vxr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vyl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vyr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vzl, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vzr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(zeta_rad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(zeta_rad_nue, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(zeta_rad_nux, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_ANG_FREQ_OFBFIELD_PUBLIC_FARGUMENTS \
INTEGER X0coordinates&&\
INTEGER X1coordinates&&\
INTEGER X2coordinates&&\
CCTK_REAL coarse_dx&&\
CCTK_REAL coarse_dy&&\
CCTK_REAL coarse_dz&&\
CCTK_REAL r(X0coordinates,X1coordinates,X2coordinates)&&\
CCTK_REAL x(X0coordinates,X1coordinates,X2coordinates)&&\
CCTK_REAL y(X0coordinates,X1coordinates,X2coordinates)&&\
CCTK_REAL z(X0coordinates,X1coordinates,X2coordinates)&&\


#define ANG_FREQ_OFBFIELD_PUBLIC_FARGUMENTS \
X0coordinates,X1coordinates,X2coordinates,coarse_dx,coarse_dy,coarse_dz,r,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ANG_FREQ_OFBFIELD_PUBLIC_CARGUMENTS \
CCTK_REAL * CCTK_RESTRICT coarse_dx = (cctki_dummy_int = &coarse_dx - &coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GRID", "coarse_dx")); \
CCTK_REAL * CCTK_RESTRICT coarse_dy = (cctki_dummy_int = &coarse_dy - &coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GRID", "coarse_dy")); \
CCTK_REAL * CCTK_RESTRICT coarse_dz = (cctki_dummy_int = &coarse_dz - &coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GRID", "coarse_dz")); \
CCTK_REAL * CCTK_RESTRICT r = (cctki_dummy_int = &r - &r, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GRID", "r")); \
CCTK_REAL * CCTK_RESTRICT x = (cctki_dummy_int = &x - &x, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GRID", "x")); \
CCTK_REAL * CCTK_RESTRICT y = (cctki_dummy_int = &y - &y, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GRID", "y")); \
CCTK_REAL * CCTK_RESTRICT z = (cctki_dummy_int = &z - &z, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "GRID", "z"));

#define DECLARE_ANG_FREQ_OFBFIELD_PUBLIC_C2F \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_ANG_FREQ_OFBFIELD_PUBLIC_C2F \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z");

#define ANG_FREQ_OFBFIELD_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_ANG_FREQ_OFBFIELD_PUBLIC_C2F(GH) \
PASS_GROUPSIZE(coordinates, 0),\
PASS_GROUPSIZE(coordinates, 1),\
PASS_GROUPSIZE(coordinates, 2),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define ANG_FREQ_OFBFIELD_FARGUMENTS _CCTK_FARGUMENTS, ANG_FREQ_OFBFIELD_PROTECTED_FARGUMENTS, ANG_FREQ_OFBFIELD_PUBLIC_FARGUMENTS

#define DECLARE_ANG_FREQ_OFBFIELD_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_ANG_FREQ_OFBFIELD_PROTECTED_FARGUMENTS DECLARE_ANG_FREQ_OFBFIELD_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ANG_FREQ_OFBFIELD_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_ANG_FREQ_OFBFIELD_PROTECTED_CARGUMENTS DECLARE_ANG_FREQ_OFBFIELD_PUBLIC_CARGUMENTS

#define ANG_FREQ_OFBFIELD_C2F_PROTO _CCTK_C2F_PROTO, ANG_FREQ_OFBFIELD_PROTECTED_C2F_PROTO, ANG_FREQ_OFBFIELD_PUBLIC_C2F_PROTO

#define PASS_ANG_FREQ_OFBFIELD_C2F(GH) _PASS_CCTK_C2F(GH), PASS_ANG_FREQ_OFBFIELD_PROTECTED_C2F(GH), PASS_ANG_FREQ_OFBFIELD_PUBLIC_C2F(GH)

#define DECLARE_ANG_FREQ_OFBFIELD_C2F _DECLARE_CCTK_C2F DECLARE_ANG_FREQ_OFBFIELD_PROTECTED_C2F DECLARE_ANG_FREQ_OFBFIELD_PUBLIC_C2F

#define INITIALISE_ANG_FREQ_OFBFIELD_C2F _INITIALISE_CCTK_C2F INITIALISE_ANG_FREQ_OFBFIELD_PROTECTED_C2F INITIALISE_ANG_FREQ_OFBFIELD_PUBLIC_C2F

#define ANG_FREQ_OFBFIELD_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
