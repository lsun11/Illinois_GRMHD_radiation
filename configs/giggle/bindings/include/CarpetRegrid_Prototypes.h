/*@@
   @header  CarpetRegrid_Prototypes.h
   @author  Automatically generated by CreateFunctionBindings.pl
   @desc
            Prototypes for overloaded functions used by this thorn
   @enddesc
  @@*/


#ifndef _CARPETREGRID_PROTOTYPES_H_
#define _CARPETREGRID_PROTOTYPES_H_  1

#ifdef CCODE
#ifdef __cplusplus
extern "C" {
#endif

CCTK_INT Carpet_Regrid(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_POINTER superregss ,
 const CCTK_POINTER regsss ,
 const CCTK_INT force);
CCTK_INT CarpetRegrid_Regrid(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_POINTER superregss ,
 const CCTK_POINTER regsss ,
 const CCTK_INT force);

CCTK_INT ConvertFromPhysicalBoundary(const CCTK_INT size ,
 const CCTK_REAL* physical_min ,
 const CCTK_REAL* physical_max ,
 CCTK_REAL* interior_min ,
 CCTK_REAL* interior_max ,
 CCTK_REAL* exterior_min ,
 CCTK_REAL* exterior_max ,
 const CCTK_REAL* spacing);

CCTK_INT GetBoundarySpecification(const CCTK_INT size ,
 CCTK_INT* nboundaryzones ,
 CCTK_INT* is_internal ,
 CCTK_INT* is_staggered ,
 CCTK_INT* shiftout);

CCTK_INT GetDomainSpecification(const CCTK_INT size ,
 CCTK_REAL* physical_min ,
 CCTK_REAL* physical_max ,
 CCTK_REAL* interior_min ,
 CCTK_REAL* interior_max ,
 CCTK_REAL* exterior_min ,
 CCTK_REAL* exterior_max ,
 CCTK_REAL* spacing);

CCTK_INT RegridLevel(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT current_max_reflevel ,
 const CCTK_INT max_reflevels);

#ifdef __cplusplus
}
#endif
#endif /* CCODE */

#ifdef FCODE
#ifdef F90CODE
#define DECLARE_CARPETREGRID_FUNCTIONS _DECLARE_CCTK_FUNCTIONS \
  interface &&\
     CCTK_INT function Carpet_Regrid (cctkGH, superregss, regsss, force) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_POINTER superregss &&\
       CCTK_POINTER regsss &&\
       CCTK_INT force &&\
     end function Carpet_Regrid &&\
  end interface &&\
  interface &&\
     CCTK_INT function ConvertFromPhysicalBoundary (size, physical_min, physical_max, interior_min, interior_max, exterior_min, exterior_max, spacing) &&\
       implicit none &&\
       CCTK_INT size &&\
       CCTK_REAL physical_min(*) &&\
       CCTK_REAL physical_max(*) &&\
       CCTK_REAL interior_min(*) &&\
       CCTK_REAL interior_max(*) &&\
       CCTK_REAL exterior_min(*) &&\
       CCTK_REAL exterior_max(*) &&\
       CCTK_REAL spacing(*) &&\
     end function ConvertFromPhysicalBoundary &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetBoundarySpecification (size, nboundaryzones, is_internal, is_staggered, shiftout) &&\
       implicit none &&\
       CCTK_INT size &&\
       CCTK_INT nboundaryzones(*) &&\
       CCTK_INT is_internal(*) &&\
       CCTK_INT is_staggered(*) &&\
       CCTK_INT shiftout(*) &&\
     end function GetBoundarySpecification &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetDomainSpecification (size, physical_min, physical_max, interior_min, interior_max, exterior_min, exterior_max, spacing) &&\
       implicit none &&\
       CCTK_INT size &&\
       CCTK_REAL physical_min(*) &&\
       CCTK_REAL physical_max(*) &&\
       CCTK_REAL interior_min(*) &&\
       CCTK_REAL interior_max(*) &&\
       CCTK_REAL exterior_min(*) &&\
       CCTK_REAL exterior_max(*) &&\
       CCTK_REAL spacing(*) &&\
     end function GetDomainSpecification &&\
  end interface &&\
  interface &&\
     CCTK_INT function RegridLevel (cctkGH, current_max_reflevel, max_reflevels) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT current_max_reflevel &&\
       CCTK_INT max_reflevels &&\
     end function RegridLevel &&\
  end interface &&\

#else /* ! F90CODE */

#define DECLARE_CARPETREGRID_FUNCTIONS _DECLARE_CCTK_FUNCTIONS \
  external Carpet_Regrid &&\
  CCTK_INT Carpet_Regrid &&\
  external ConvertFromPhysicalBoundary &&\
  CCTK_INT ConvertFromPhysicalBoundary &&\
  external GetBoundarySpecification &&\
  CCTK_INT GetBoundarySpecification &&\
  external GetDomainSpecification &&\
  CCTK_INT GetDomainSpecification &&\
  external RegridLevel &&\
  CCTK_INT RegridLevel &&\

#endif /* ! F90CODE */
#endif /* FCODE */

#endif

