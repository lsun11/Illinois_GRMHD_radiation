/*@@
   @header  diagnostics_mhd_CParameters.h
   @author  Automatically generated by CreateParameterBindings.pl
   @desc
            Declares parameters of thorn diagnostics_mhd
   @enddesc
 @@*/


#ifndef _DIAGNOSTICS_MHD_PARAMETERS_H_
#define _DIAGNOSTICS_MHD_PARAMETERS_H_ 1

#include "ParameterCGlobal.h"
#include "ParameterCRestrictedDIAGNOSTICS_MHD.h"
#include "ParameterCRestrictedBSSN.h"
#include "ParameterCRestrictedDIAGNOSTICS_VACUUM.h"
#include "ParameterCRestrictedGRID.h"
#include "ParameterCRestrictedLAPSE.h"
#include "ParameterCRestrictedMHD_EVOLVE.h"
#include "ParameterCRestrictedSHIFT.h"

#define DECLARE_CCTK_PARAMETERS \
  DECLARE_GLOBAL_PARAMETER_STRUCT_PARAMS \
  DECLARE_RESTRICTED_DIAGNOSTICS_MHD_STRUCT_PARAMS \
  CCTK_REAL const xbh1_initial = RESTRICTED_BSSN_STRUCT.xbh1_initial; \
  CCTK_REAL const xbh2_initial = RESTRICTED_BSSN_STRUCT.xbh2_initial; \
  CCTK_REAL const rah1_initial = RESTRICTED_BSSN_STRUCT.rah1_initial; \
  CCTK_REAL const rah2_initial = RESTRICTED_BSSN_STRUCT.rah2_initial; \
  CCTK_REAL const binary_orb_freq = RESTRICTED_BSSN_STRUCT.binary_orb_freq; \
  CCTK_INT const num_BHs = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.num_BHs; \
  CCTK_INT const Compute_VolIntegrands_Every = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.Compute_VolIntegrands_Every; \
  CCTK_INT const WhichIntegral = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.WhichIntegral; \
  CCTK_REAL const surf_radius = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.surf_radius; \
  CCTK_REAL const rbr = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.rbr; \
  CCTK_REAL const drbdr = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.drbdr; \
  CCTK_REAL const ddrbddr = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.ddrbddr; \
  CCTK_INT const N_theta = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.N_theta; \
  CCTK_INT const N_phi = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.N_phi; \
  CCTK_INT const ntot = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.ntot; \
  CCTK_INT const sym_factor = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.sym_factor; \
  CCTK_REAL const dphi = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.dphi; \
  CCTK_REAL const dcostheta = RESTRICTED_DIAGNOSTICS_VACUUM_STRUCT.dcostheta; \
  const char * const domain = RESTRICTED_GRID_STRUCT.domain; \
  const char * const bitant_plane = RESTRICTED_GRID_STRUCT.bitant_plane; \
  const char * const slicing_type = RESTRICTED_LAPSE_STRUCT.slicing_type; \
  CCTK_REAL const rho_b_atm = RESTRICTED_MHD_EVOLVE_STRUCT.rho_b_atm; \
  CCTK_REAL const rho_fact = RESTRICTED_MHD_EVOLVE_STRUCT.rho_fact; \
  CCTK_REAL const rho_b_max = RESTRICTED_MHD_EVOLVE_STRUCT.rho_b_max; \
  CCTK_REAL const tau_atm = RESTRICTED_MHD_EVOLVE_STRUCT.tau_atm; \
  CCTK_REAL const tau_fact = RESTRICTED_MHD_EVOLVE_STRUCT.tau_fact; \
  CCTK_REAL const pfloor = RESTRICTED_MHD_EVOLVE_STRUCT.pfloor; \
  CCTK_REAL const P_fact = RESTRICTED_MHD_EVOLVE_STRUCT.P_fact; \
  CCTK_INT const neos = RESTRICTED_MHD_EVOLVE_STRUCT.neos; \
  CCTK_INT const ergo_star = RESTRICTED_MHD_EVOLVE_STRUCT.ergo_star; \
  CCTK_REAL const ergo_sigma = RESTRICTED_MHD_EVOLVE_STRUCT.ergo_sigma; \
  CCTK_REAL const gamma_th = RESTRICTED_MHD_EVOLVE_STRUCT.gamma_th; \
  CCTK_INT const eps_flag = RESTRICTED_MHD_EVOLVE_STRUCT.eps_flag; \
  CCTK_REAL const Sym_Bz = RESTRICTED_MHD_EVOLVE_STRUCT.Sym_Bz; \
  CCTK_REAL const K_poly = RESTRICTED_MHD_EVOLVE_STRUCT.K_poly; \
  CCTK_INT const em_evolve_enable = RESTRICTED_MHD_EVOLVE_STRUCT.em_evolve_enable; \
  CCTK_INT const rad_evolve_enable = RESTRICTED_MHD_EVOLVE_STRUCT.rad_evolve_enable; \
  CCTK_INT const hyperbolic_divergence_cleaning_enable = RESTRICTED_MHD_EVOLVE_STRUCT.hyperbolic_divergence_cleaning_enable; \
  CCTK_INT const hyperbolic_divergence_cleaning_centered_differencing = RESTRICTED_MHD_EVOLVE_STRUCT.hyperbolic_divergence_cleaning_centered_differencing; \
  CCTK_INT const constrained_transport_scheme = RESTRICTED_MHD_EVOLVE_STRUCT.constrained_transport_scheme; \
  CCTK_INT const enable_OS_collapse = RESTRICTED_MHD_EVOLVE_STRUCT.enable_OS_collapse; \
  CCTK_INT const Spatial_Gauge = RESTRICTED_SHIFT_STRUCT.Spatial_Gauge; \
  enum { \
      dummy_BSSN_xbh1_initial = sizeof( xbh1_initial ) \
    , dummy_BSSN_xbh2_initial = sizeof( xbh2_initial ) \
    , dummy_BSSN_rah1_initial = sizeof( rah1_initial ) \
    , dummy_BSSN_rah2_initial = sizeof( rah2_initial ) \
    , dummy_BSSN_binary_orb_freq = sizeof( binary_orb_freq ) \
    , dummy_DIAGNOSTICS_VACUUM_num_BHs = sizeof( num_BHs ) \
    , dummy_DIAGNOSTICS_VACUUM_Compute_VolIntegrands_Every = sizeof( Compute_VolIntegrands_Every ) \
    , dummy_DIAGNOSTICS_VACUUM_WhichIntegral = sizeof( WhichIntegral ) \
    , dummy_DIAGNOSTICS_VACUUM_surf_radius = sizeof( surf_radius ) \
    , dummy_DIAGNOSTICS_VACUUM_rbr = sizeof( rbr ) \
    , dummy_DIAGNOSTICS_VACUUM_drbdr = sizeof( drbdr ) \
    , dummy_DIAGNOSTICS_VACUUM_ddrbddr = sizeof( ddrbddr ) \
    , dummy_DIAGNOSTICS_VACUUM_N_theta = sizeof( N_theta ) \
    , dummy_DIAGNOSTICS_VACUUM_N_phi = sizeof( N_phi ) \
    , dummy_DIAGNOSTICS_VACUUM_ntot = sizeof( ntot ) \
    , dummy_DIAGNOSTICS_VACUUM_sym_factor = sizeof( sym_factor ) \
    , dummy_DIAGNOSTICS_VACUUM_dphi = sizeof( dphi ) \
    , dummy_DIAGNOSTICS_VACUUM_dcostheta = sizeof( dcostheta ) \
    , dummy_GRID_domain = sizeof( domain ) \
    , dummy_GRID_bitant_plane = sizeof( bitant_plane ) \
    , dummy_LAPSE_slicing_type = sizeof( slicing_type ) \
    , dummy_MHD_EVOLVE_rho_b_atm = sizeof( rho_b_atm ) \
    , dummy_MHD_EVOLVE_rho_fact = sizeof( rho_fact ) \
    , dummy_MHD_EVOLVE_rho_b_max = sizeof( rho_b_max ) \
    , dummy_MHD_EVOLVE_tau_atm = sizeof( tau_atm ) \
    , dummy_MHD_EVOLVE_tau_fact = sizeof( tau_fact ) \
    , dummy_MHD_EVOLVE_pfloor = sizeof( pfloor ) \
    , dummy_MHD_EVOLVE_P_fact = sizeof( P_fact ) \
    , dummy_MHD_EVOLVE_neos = sizeof( neos ) \
    , dummy_MHD_EVOLVE_ergo_star = sizeof( ergo_star ) \
    , dummy_MHD_EVOLVE_ergo_sigma = sizeof( ergo_sigma ) \
    , dummy_MHD_EVOLVE_gamma_th = sizeof( gamma_th ) \
    , dummy_MHD_EVOLVE_eps_flag = sizeof( eps_flag ) \
    , dummy_MHD_EVOLVE_Sym_Bz = sizeof( Sym_Bz ) \
    , dummy_MHD_EVOLVE_K_poly = sizeof( K_poly ) \
    , dummy_MHD_EVOLVE_em_evolve_enable = sizeof( em_evolve_enable ) \
    , dummy_MHD_EVOLVE_rad_evolve_enable = sizeof( rad_evolve_enable ) \
    , dummy_MHD_EVOLVE_hyperbolic_divergence_cleaning_enable = sizeof( hyperbolic_divergence_cleaning_enable ) \
    , dummy_MHD_EVOLVE_hyperbolic_divergence_cleaning_centered_differencing = sizeof( hyperbolic_divergence_cleaning_centered_differencing ) \
    , dummy_MHD_EVOLVE_constrained_transport_scheme = sizeof( constrained_transport_scheme ) \
    , dummy_MHD_EVOLVE_enable_OS_collapse = sizeof( enable_OS_collapse ) \
    , dummy_SHIFT_Spatial_Gauge = sizeof( Spatial_Gauge ) \
  };

#endif  /* _DIAGNOSTICS_MHD_PARAMETERS_H_ */

