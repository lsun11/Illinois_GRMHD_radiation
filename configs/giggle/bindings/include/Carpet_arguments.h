/*@@
   @header  Carpet_arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn Carpet
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_CARPET_PRIVATE_FARGUMENTS \
INTEGER X0timing2&&\
CCTK_REAL comm_bytes_count&&\
CCTK_REAL comm_bytes_per_second&&\
CCTK_REAL comm_count&&\
CCTK_REAL comm_per_second&&\
CCTK_REAL grid_point_updates_count(X0timing2)&&\
CCTK_REAL grid_points_per_second(X0timing2)&&\
CCTK_REAL io_bytes_ascii_count&&\
CCTK_REAL io_bytes_ascii_per_second&&\
CCTK_REAL io_bytes_binary_count&&\
CCTK_REAL io_bytes_binary_per_second&&\
CCTK_REAL io_bytes_count&&\
CCTK_REAL io_bytes_per_second&&\
CCTK_REAL io_count&&\
CCTK_REAL io_per_second&&\
CCTK_REAL local_grid_point_updates_count&&\
CCTK_REAL local_grid_points_per_second&&\
CCTK_REAL physical_time_per_hour&&\
CCTK_REAL time_communicating&&\
CCTK_REAL time_computing&&\
CCTK_REAL time_io&&\
CCTK_REAL time_total&&\
CCTK_REAL total_grid_point_updates_count&&\
CCTK_REAL total_grid_points_per_second&&\


#define CARPET_PRIVATE_FARGUMENTS \
X0timing2,comm_bytes_count,comm_bytes_per_second,comm_count,comm_per_second,grid_point_updates_count,grid_points_per_second,io_bytes_ascii_count,io_bytes_ascii_per_second,io_bytes_binary_count,io_bytes_binary_per_second,io_bytes_count,io_bytes_per_second,io_count,io_per_second,local_grid_point_updates_count,local_grid_points_per_second,physical_time_per_hour,time_communicating,time_computing,time_io,time_total,total_grid_point_updates_count,total_grid_points_per_second

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CARPET_PRIVATE_CARGUMENTS \
CCTK_REAL * CCTK_RESTRICT comm_bytes_count = (cctki_dummy_int = &comm_bytes_count - &comm_bytes_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "comm_bytes_count")); \
CCTK_REAL * CCTK_RESTRICT comm_bytes_per_second = (cctki_dummy_int = &comm_bytes_per_second - &comm_bytes_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "comm_bytes_per_second")); \
CCTK_REAL * CCTK_RESTRICT comm_count = (cctki_dummy_int = &comm_count - &comm_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "comm_count")); \
CCTK_REAL * CCTK_RESTRICT comm_per_second = (cctki_dummy_int = &comm_per_second - &comm_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "comm_per_second")); \
CCTK_REAL * CCTK_RESTRICT grid_point_updates_count = (cctki_dummy_int = &grid_point_updates_count - &grid_point_updates_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "grid_point_updates_count")); \
CCTK_REAL * CCTK_RESTRICT grid_points_per_second = (cctki_dummy_int = &grid_points_per_second - &grid_points_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "grid_points_per_second")); \
CCTK_REAL * CCTK_RESTRICT io_bytes_ascii_count = (cctki_dummy_int = &io_bytes_ascii_count - &io_bytes_ascii_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "io_bytes_ascii_count")); \
CCTK_REAL * CCTK_RESTRICT io_bytes_ascii_per_second = (cctki_dummy_int = &io_bytes_ascii_per_second - &io_bytes_ascii_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "io_bytes_ascii_per_second")); \
CCTK_REAL * CCTK_RESTRICT io_bytes_binary_count = (cctki_dummy_int = &io_bytes_binary_count - &io_bytes_binary_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "io_bytes_binary_count")); \
CCTK_REAL * CCTK_RESTRICT io_bytes_binary_per_second = (cctki_dummy_int = &io_bytes_binary_per_second - &io_bytes_binary_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "io_bytes_binary_per_second")); \
CCTK_REAL * CCTK_RESTRICT io_bytes_count = (cctki_dummy_int = &io_bytes_count - &io_bytes_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "io_bytes_count")); \
CCTK_REAL * CCTK_RESTRICT io_bytes_per_second = (cctki_dummy_int = &io_bytes_per_second - &io_bytes_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "io_bytes_per_second")); \
CCTK_REAL * CCTK_RESTRICT io_count = (cctki_dummy_int = &io_count - &io_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "io_count")); \
CCTK_REAL * CCTK_RESTRICT io_per_second = (cctki_dummy_int = &io_per_second - &io_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "io_per_second")); \
CCTK_REAL * CCTK_RESTRICT local_grid_point_updates_count = (cctki_dummy_int = &local_grid_point_updates_count - &local_grid_point_updates_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "local_grid_point_updates_count")); \
CCTK_REAL * CCTK_RESTRICT local_grid_points_per_second = (cctki_dummy_int = &local_grid_points_per_second - &local_grid_points_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "local_grid_points_per_second")); \
CCTK_REAL * CCTK_RESTRICT physical_time_per_hour = (cctki_dummy_int = &physical_time_per_hour - &physical_time_per_hour, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "physical_time_per_hour")); \
CCTK_REAL * CCTK_RESTRICT time_communicating = (cctki_dummy_int = &time_communicating - &time_communicating, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "time_communicating")); \
CCTK_REAL * CCTK_RESTRICT time_computing = (cctki_dummy_int = &time_computing - &time_computing, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "time_computing")); \
CCTK_REAL * CCTK_RESTRICT time_io = (cctki_dummy_int = &time_io - &time_io, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "time_io")); \
CCTK_REAL * CCTK_RESTRICT time_total = (cctki_dummy_int = &time_total - &time_total, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "time_total")); \
CCTK_REAL * CCTK_RESTRICT total_grid_point_updates_count = (cctki_dummy_int = &total_grid_point_updates_count - &total_grid_point_updates_count, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "total_grid_point_updates_count")); \
CCTK_REAL * CCTK_RESTRICT total_grid_points_per_second = (cctki_dummy_int = &total_grid_points_per_second - &total_grid_points_per_second, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "CARPET", "total_grid_points_per_second"));

#define DECLARE_CARPET_PRIVATE_C2F \
static int CCTKARGNUM_comm_bytes_count = -1; \
static int CCTKGROUPNUM_timing = -1; \
static int CCTKARGNUM_comm_bytes_per_second = -1; \
static int CCTKARGNUM_comm_count = -1; \
static int CCTKARGNUM_comm_per_second = -1; \
static int CCTKARGNUM_grid_point_updates_count = -1; \
static int CCTKGROUPNUM_timing2 = -1; \
static int CCTKARGNUM_grid_points_per_second = -1; \
static int CCTKARGNUM_io_bytes_ascii_count = -1; \
static int CCTKARGNUM_io_bytes_ascii_per_second = -1; \
static int CCTKARGNUM_io_bytes_binary_count = -1; \
static int CCTKARGNUM_io_bytes_binary_per_second = -1; \
static int CCTKARGNUM_io_bytes_count = -1; \
static int CCTKARGNUM_io_bytes_per_second = -1; \
static int CCTKARGNUM_io_count = -1; \
static int CCTKARGNUM_io_per_second = -1; \
static int CCTKARGNUM_local_grid_point_updates_count = -1; \
static int CCTKARGNUM_local_grid_points_per_second = -1; \
static int CCTKARGNUM_physical_time_per_hour = -1; \
static int CCTKARGNUM_time_communicating = -1; \
static int CCTKARGNUM_time_computing = -1; \
static int CCTKARGNUM_time_io = -1; \
static int CCTKARGNUM_time_total = -1; \
static int CCTKARGNUM_total_grid_point_updates_count = -1; \
static int CCTKARGNUM_total_grid_points_per_second = -1;

#define INITIALISE_CARPET_PRIVATE_C2F \
if(CCTKARGNUM_comm_bytes_count == -1) CCTKARGNUM_comm_bytes_count = CCTK_VarIndex("Carpet::comm_bytes_count"); \
if(CCTKGROUPNUM_timing == -1) CCTKGROUPNUM_timing = CCTK_GroupIndex("Carpet::timing"); \
if(CCTKARGNUM_comm_bytes_per_second == -1) CCTKARGNUM_comm_bytes_per_second = CCTK_VarIndex("Carpet::comm_bytes_per_second"); \
if(CCTKARGNUM_comm_count == -1) CCTKARGNUM_comm_count = CCTK_VarIndex("Carpet::comm_count"); \
if(CCTKARGNUM_comm_per_second == -1) CCTKARGNUM_comm_per_second = CCTK_VarIndex("Carpet::comm_per_second"); \
if(CCTKARGNUM_grid_point_updates_count == -1) CCTKARGNUM_grid_point_updates_count = CCTK_VarIndex("Carpet::grid_point_updates_count"); \
if(CCTKGROUPNUM_timing2 == -1) CCTKGROUPNUM_timing2 = CCTK_GroupIndex("Carpet::timing2"); \
if(CCTKARGNUM_grid_points_per_second == -1) CCTKARGNUM_grid_points_per_second = CCTK_VarIndex("Carpet::grid_points_per_second"); \
if(CCTKARGNUM_io_bytes_ascii_count == -1) CCTKARGNUM_io_bytes_ascii_count = CCTK_VarIndex("Carpet::io_bytes_ascii_count"); \
if(CCTKARGNUM_io_bytes_ascii_per_second == -1) CCTKARGNUM_io_bytes_ascii_per_second = CCTK_VarIndex("Carpet::io_bytes_ascii_per_second"); \
if(CCTKARGNUM_io_bytes_binary_count == -1) CCTKARGNUM_io_bytes_binary_count = CCTK_VarIndex("Carpet::io_bytes_binary_count"); \
if(CCTKARGNUM_io_bytes_binary_per_second == -1) CCTKARGNUM_io_bytes_binary_per_second = CCTK_VarIndex("Carpet::io_bytes_binary_per_second"); \
if(CCTKARGNUM_io_bytes_count == -1) CCTKARGNUM_io_bytes_count = CCTK_VarIndex("Carpet::io_bytes_count"); \
if(CCTKARGNUM_io_bytes_per_second == -1) CCTKARGNUM_io_bytes_per_second = CCTK_VarIndex("Carpet::io_bytes_per_second"); \
if(CCTKARGNUM_io_count == -1) CCTKARGNUM_io_count = CCTK_VarIndex("Carpet::io_count"); \
if(CCTKARGNUM_io_per_second == -1) CCTKARGNUM_io_per_second = CCTK_VarIndex("Carpet::io_per_second"); \
if(CCTKARGNUM_local_grid_point_updates_count == -1) CCTKARGNUM_local_grid_point_updates_count = CCTK_VarIndex("Carpet::local_grid_point_updates_count"); \
if(CCTKARGNUM_local_grid_points_per_second == -1) CCTKARGNUM_local_grid_points_per_second = CCTK_VarIndex("Carpet::local_grid_points_per_second"); \
if(CCTKARGNUM_physical_time_per_hour == -1) CCTKARGNUM_physical_time_per_hour = CCTK_VarIndex("Carpet::physical_time_per_hour"); \
if(CCTKARGNUM_time_communicating == -1) CCTKARGNUM_time_communicating = CCTK_VarIndex("Carpet::time_communicating"); \
if(CCTKARGNUM_time_computing == -1) CCTKARGNUM_time_computing = CCTK_VarIndex("Carpet::time_computing"); \
if(CCTKARGNUM_time_io == -1) CCTKARGNUM_time_io = CCTK_VarIndex("Carpet::time_io"); \
if(CCTKARGNUM_time_total == -1) CCTKARGNUM_time_total = CCTK_VarIndex("Carpet::time_total"); \
if(CCTKARGNUM_total_grid_point_updates_count == -1) CCTKARGNUM_total_grid_point_updates_count = CCTK_VarIndex("Carpet::total_grid_point_updates_count"); \
if(CCTKARGNUM_total_grid_points_per_second == -1) CCTKARGNUM_total_grid_points_per_second = CCTK_VarIndex("Carpet::total_grid_points_per_second");

#define CARPET_PRIVATE_C2F_PROTO \
const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_CARPET_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(timing2, 0),\
(CCTK_REAL *)(PASS_REFERENCE(comm_bytes_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(comm_bytes_per_second, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(comm_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(comm_per_second, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(grid_point_updates_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(grid_points_per_second, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(io_bytes_ascii_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(io_bytes_ascii_per_second, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(io_bytes_binary_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(io_bytes_binary_per_second, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(io_bytes_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(io_bytes_per_second, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(io_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(io_per_second, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(local_grid_point_updates_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(local_grid_points_per_second, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(physical_time_per_hour, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(time_communicating, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(time_computing, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(time_io, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(time_total, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(total_grid_point_updates_count, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(total_grid_points_per_second, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_CARPET_PROTECTED_FARGUMENTS \


#define CARPET_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CARPET_PROTECTED_CARGUMENTS \


#define DECLARE_CARPET_PROTECTED_C2F \


#define INITIALISE_CARPET_PROTECTED_C2F \


#define CARPET_PROTECTED_C2F_PROTO \


#define PASS_CARPET_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_CARPET_PUBLIC_FARGUMENTS \


#define CARPET_PUBLIC_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CARPET_PUBLIC_CARGUMENTS \


#define DECLARE_CARPET_PUBLIC_C2F \


#define INITIALISE_CARPET_PUBLIC_C2F \


#define CARPET_PUBLIC_C2F_PROTO \


#define PASS_CARPET_PUBLIC_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define CARPET_FARGUMENTS _CCTK_FARGUMENTS, CARPET_PRIVATE_FARGUMENTS

#define DECLARE_CARPET_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_CARPET_PRIVATE_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CARPET_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_CARPET_PRIVATE_CARGUMENTS

#define CARPET_C2F_PROTO _CCTK_C2F_PROTO, CARPET_PRIVATE_C2F_PROTO

#define PASS_CARPET_C2F(GH) _PASS_CCTK_C2F(GH), PASS_CARPET_PRIVATE_C2F(GH)

#define DECLARE_CARPET_C2F _DECLARE_CCTK_C2F DECLARE_CARPET_PRIVATE_C2F

#define INITIALISE_CARPET_C2F _INITIALISE_CCTK_C2F INITIALISE_CARPET_PRIVATE_C2F

#define CARPET_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
