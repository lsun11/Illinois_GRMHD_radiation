/*@@
   @header  WaveMoL_arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn WaveMoL
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_WAVEMOL_PRIVATE_FARGUMENTS \


#define WAVEMOL_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WAVEMOL_PRIVATE_CARGUMENTS \


#define DECLARE_WAVEMOL_PRIVATE_C2F \


#define INITIALISE_WAVEMOL_PRIVATE_C2F \


#define WAVEMOL_PRIVATE_C2F_PROTO \


#define PASS_WAVEMOL_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_WAVEMOL_PROTECTED_FARGUMENTS \


#define WAVEMOL_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WAVEMOL_PROTECTED_CARGUMENTS \


#define DECLARE_WAVEMOL_PROTECTED_C2F \


#define INITIALISE_WAVEMOL_PROTECTED_C2F \


#define WAVEMOL_PROTECTED_C2F_PROTO \


#define PASS_WAVEMOL_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_WAVEMOL_PUBLIC_FARGUMENTS \
INTEGER X0energy&&\
INTEGER X0scalarevolvemol_scalar&&\
INTEGER X0scalarevolvemol_vector&&\
INTEGER X0scalarrhsmol_scalar&&\
INTEGER X0scalarrhsmol_vector&&\
INTEGER X1energy&&\
INTEGER X1scalarevolvemol_scalar&&\
INTEGER X1scalarevolvemol_vector&&\
INTEGER X1scalarrhsmol_scalar&&\
INTEGER X1scalarrhsmol_vector&&\
INTEGER X2energy&&\
INTEGER X2scalarevolvemol_scalar&&\
INTEGER X2scalarevolvemol_vector&&\
INTEGER X2scalarrhsmol_scalar&&\
INTEGER X2scalarrhsmol_vector&&\
CCTK_REAL energy(X0energy,X1energy,X2energy)&&\
CCTK_REAL phi(X0scalarevolvemol_scalar,X1scalarevolvemol_scalar,X2scalarevolvemol_scalar)&&\
CCTK_REAL phi_p(X0scalarevolvemol_scalar,X1scalarevolvemol_scalar,X2scalarevolvemol_scalar)&&\
CCTK_REAL phi_p_p(X0scalarevolvemol_scalar,X1scalarevolvemol_scalar,X2scalarevolvemol_scalar)&&\
CCTK_REAL phirhs(X0scalarrhsmol_scalar,X1scalarrhsmol_scalar,X2scalarrhsmol_scalar)&&\
CCTK_REAL phit(X0scalarevolvemol_scalar,X1scalarevolvemol_scalar,X2scalarevolvemol_scalar)&&\
CCTK_REAL phit_p(X0scalarevolvemol_scalar,X1scalarevolvemol_scalar,X2scalarevolvemol_scalar)&&\
CCTK_REAL phit_p_p(X0scalarevolvemol_scalar,X1scalarevolvemol_scalar,X2scalarevolvemol_scalar)&&\
CCTK_REAL phitrhs(X0scalarrhsmol_scalar,X1scalarrhsmol_scalar,X2scalarrhsmol_scalar)&&\
CCTK_REAL phix(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phix_p(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phix_p_p(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phixrhs(X0scalarrhsmol_vector,X1scalarrhsmol_vector,X2scalarrhsmol_vector)&&\
CCTK_REAL phiy(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phiy_p(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phiy_p_p(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phiyrhs(X0scalarrhsmol_vector,X1scalarrhsmol_vector,X2scalarrhsmol_vector)&&\
CCTK_REAL phiz(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phiz_p(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phiz_p_p(X0scalarevolvemol_vector,X1scalarevolvemol_vector,X2scalarevolvemol_vector)&&\
CCTK_REAL phizrhs(X0scalarrhsmol_vector,X1scalarrhsmol_vector,X2scalarrhsmol_vector)&&\


#define WAVEMOL_PUBLIC_FARGUMENTS \
X0energy,X0scalarevolvemol_scalar,X0scalarevolvemol_vector,X0scalarrhsmol_scalar,X0scalarrhsmol_vector,X1energy,X1scalarevolvemol_scalar,X1scalarevolvemol_vector,X1scalarrhsmol_scalar,X1scalarrhsmol_vector,X2energy,X2scalarevolvemol_scalar,X2scalarevolvemol_vector,X2scalarrhsmol_scalar,X2scalarrhsmol_vector,energy,phi,phi_p,phi_p_p,phirhs,phit,phit_p,phit_p_p,phitrhs,phix,phix_p,phix_p_p,phixrhs,phiy,phiy_p,phiy_p_p,phiyrhs,phiz,phiz_p,phiz_p_p,phizrhs

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WAVEMOL_PUBLIC_CARGUMENTS \
CCTK_REAL * CCTK_RESTRICT energy = (cctki_dummy_int = &energy - &energy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "energy")); \
CCTK_REAL * CCTK_RESTRICT phi = (cctki_dummy_int = &phi - &phi, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phi")); \
CCTK_REAL * CCTK_RESTRICT phi_p = (cctki_dummy_int = &phi_p - &phi_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "WAVEMOL", "phi")); \
CCTK_REAL * CCTK_RESTRICT phi_p_p = (cctki_dummy_int = &phi_p_p - &phi_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "WAVEMOL", "phi")); \
CCTK_REAL * CCTK_RESTRICT phirhs = (cctki_dummy_int = &phirhs - &phirhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phirhs")); \
CCTK_REAL * CCTK_RESTRICT phit = (cctki_dummy_int = &phit - &phit, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phit")); \
CCTK_REAL * CCTK_RESTRICT phit_p = (cctki_dummy_int = &phit_p - &phit_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "WAVEMOL", "phit")); \
CCTK_REAL * CCTK_RESTRICT phit_p_p = (cctki_dummy_int = &phit_p_p - &phit_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "WAVEMOL", "phit")); \
CCTK_REAL * CCTK_RESTRICT phitrhs = (cctki_dummy_int = &phitrhs - &phitrhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phitrhs")); \
CCTK_REAL * CCTK_RESTRICT phix = (cctki_dummy_int = &phix - &phix, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phix")); \
CCTK_REAL * CCTK_RESTRICT phix_p = (cctki_dummy_int = &phix_p - &phix_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "WAVEMOL", "phix")); \
CCTK_REAL * CCTK_RESTRICT phix_p_p = (cctki_dummy_int = &phix_p_p - &phix_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "WAVEMOL", "phix")); \
CCTK_REAL * CCTK_RESTRICT phixrhs = (cctki_dummy_int = &phixrhs - &phixrhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phixrhs")); \
CCTK_REAL * CCTK_RESTRICT phiy = (cctki_dummy_int = &phiy - &phiy, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phiy")); \
CCTK_REAL * CCTK_RESTRICT phiy_p = (cctki_dummy_int = &phiy_p - &phiy_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "WAVEMOL", "phiy")); \
CCTK_REAL * CCTK_RESTRICT phiy_p_p = (cctki_dummy_int = &phiy_p_p - &phiy_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "WAVEMOL", "phiy")); \
CCTK_REAL * CCTK_RESTRICT phiyrhs = (cctki_dummy_int = &phiyrhs - &phiyrhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phiyrhs")); \
CCTK_REAL * CCTK_RESTRICT phiz = (cctki_dummy_int = &phiz - &phiz, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phiz")); \
CCTK_REAL * CCTK_RESTRICT phiz_p = (cctki_dummy_int = &phiz_p - &phiz_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 1, "WAVEMOL", "phiz")); \
CCTK_REAL * CCTK_RESTRICT phiz_p_p = (cctki_dummy_int = &phiz_p_p - &phiz_p_p, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 2, "WAVEMOL", "phiz")); \
CCTK_REAL * CCTK_RESTRICT phizrhs = (cctki_dummy_int = &phizrhs - &phizrhs, (CCTK_REAL *) CCTKi_VarDataPtr(cctkGH, 0, "WAVEMOL", "phizrhs"));

#define DECLARE_WAVEMOL_PUBLIC_C2F \
static int CCTKARGNUM_energy = -1; \
static int CCTKGROUPNUM_energy = -1; \
static int CCTKARGNUM_phi = -1; \
static int CCTKGROUPNUM_scalarevolvemol_scalar = -1; \
static int CCTKARGNUM_phirhs = -1; \
static int CCTKGROUPNUM_scalarrhsmol_scalar = -1; \
static int CCTKARGNUM_phit = -1; \
static int CCTKARGNUM_phitrhs = -1; \
static int CCTKARGNUM_phix = -1; \
static int CCTKGROUPNUM_scalarevolvemol_vector = -1; \
static int CCTKARGNUM_phixrhs = -1; \
static int CCTKGROUPNUM_scalarrhsmol_vector = -1; \
static int CCTKARGNUM_phiy = -1; \
static int CCTKARGNUM_phiyrhs = -1; \
static int CCTKARGNUM_phiz = -1; \
static int CCTKARGNUM_phizrhs = -1;

#define INITIALISE_WAVEMOL_PUBLIC_C2F \
if(CCTKARGNUM_energy == -1) CCTKARGNUM_energy = CCTK_VarIndex("wavemol::energy"); \
if(CCTKGROUPNUM_energy == -1) CCTKGROUPNUM_energy = CCTK_GroupIndex("wavemol::energy"); \
if(CCTKARGNUM_phi == -1) CCTKARGNUM_phi = CCTK_VarIndex("wavemol::phi"); \
if(CCTKGROUPNUM_scalarevolvemol_scalar == -1) CCTKGROUPNUM_scalarevolvemol_scalar = CCTK_GroupIndex("wavemol::scalarevolvemol_scalar"); \
if(CCTKARGNUM_phirhs == -1) CCTKARGNUM_phirhs = CCTK_VarIndex("wavemol::phirhs"); \
if(CCTKGROUPNUM_scalarrhsmol_scalar == -1) CCTKGROUPNUM_scalarrhsmol_scalar = CCTK_GroupIndex("wavemol::scalarrhsmol_scalar"); \
if(CCTKARGNUM_phit == -1) CCTKARGNUM_phit = CCTK_VarIndex("wavemol::phit"); \
if(CCTKARGNUM_phitrhs == -1) CCTKARGNUM_phitrhs = CCTK_VarIndex("wavemol::phitrhs"); \
if(CCTKARGNUM_phix == -1) CCTKARGNUM_phix = CCTK_VarIndex("wavemol::phix"); \
if(CCTKGROUPNUM_scalarevolvemol_vector == -1) CCTKGROUPNUM_scalarevolvemol_vector = CCTK_GroupIndex("wavemol::scalarevolvemol_vector"); \
if(CCTKARGNUM_phixrhs == -1) CCTKARGNUM_phixrhs = CCTK_VarIndex("wavemol::phixrhs"); \
if(CCTKGROUPNUM_scalarrhsmol_vector == -1) CCTKGROUPNUM_scalarrhsmol_vector = CCTK_GroupIndex("wavemol::scalarrhsmol_vector"); \
if(CCTKARGNUM_phiy == -1) CCTKARGNUM_phiy = CCTK_VarIndex("wavemol::phiy"); \
if(CCTKARGNUM_phiyrhs == -1) CCTKARGNUM_phiyrhs = CCTK_VarIndex("wavemol::phiyrhs"); \
if(CCTKARGNUM_phiz == -1) CCTKARGNUM_phiz = CCTK_VarIndex("wavemol::phiz"); \
if(CCTKARGNUM_phizrhs == -1) CCTKARGNUM_phizrhs = CCTK_VarIndex("wavemol::phizrhs");

#define WAVEMOL_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_WAVEMOL_PUBLIC_C2F(GH) \
PASS_GROUPSIZE(energy, 0),\
PASS_GROUPSIZE(scalarevolvemol_scalar, 0),\
PASS_GROUPSIZE(scalarevolvemol_vector, 0),\
PASS_GROUPSIZE(scalarrhsmol_scalar, 0),\
PASS_GROUPSIZE(scalarrhsmol_vector, 0),\
PASS_GROUPSIZE(energy, 1),\
PASS_GROUPSIZE(scalarevolvemol_scalar, 1),\
PASS_GROUPSIZE(scalarevolvemol_vector, 1),\
PASS_GROUPSIZE(scalarrhsmol_scalar, 1),\
PASS_GROUPSIZE(scalarrhsmol_vector, 1),\
PASS_GROUPSIZE(energy, 2),\
PASS_GROUPSIZE(scalarevolvemol_scalar, 2),\
PASS_GROUPSIZE(scalarevolvemol_vector, 2),\
PASS_GROUPSIZE(scalarrhsmol_scalar, 2),\
PASS_GROUPSIZE(scalarrhsmol_vector, 2),\
(CCTK_REAL *)(PASS_REFERENCE(energy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phirhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phit, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phit, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phit, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phitrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phix, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phix, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phix, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phixrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phiy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phiyrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phiz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phizrhs, 0))

#endif /* CCODE */

#ifdef FCODE
#define WAVEMOL_FARGUMENTS _CCTK_FARGUMENTS, WAVEMOL_PUBLIC_FARGUMENTS

#define DECLARE_WAVEMOL_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_WAVEMOL_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WAVEMOL_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_WAVEMOL_PUBLIC_CARGUMENTS

#define WAVEMOL_C2F_PROTO _CCTK_C2F_PROTO, WAVEMOL_PUBLIC_C2F_PROTO

#define PASS_WAVEMOL_C2F(GH) _PASS_CCTK_C2F(GH), PASS_WAVEMOL_PUBLIC_C2F(GH)

#define DECLARE_WAVEMOL_C2F _DECLARE_CCTK_C2F DECLARE_WAVEMOL_PUBLIC_C2F

#define INITIALISE_WAVEMOL_C2F _INITIALISE_CCTK_C2F INITIALISE_WAVEMOL_PUBLIC_C2F

#define WAVEMOL_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
