# /*@@
#   @file    make.config.defn.in
#   @date    Sun Jan 17 22:33:51 1999
#   @author  Tom Goodale
#   @desc
#            Make definition file for a configuration
#            Defines the compilers, etc.
#
#            Should be run through autoconf to produce make.config.defn
#   @enddesc
#   @version $Header: /cactusdevcvs/Cactus/lib/make/make.config.defn.in,v 1.45 2006/06/23 03:31:47 schnetter Exp $
# @@*/

# Include stuff defined by optional extra arrangements
include $(TOP)/config-data/make.extra.defn

# Include all required external libraries from configuration
-include $(TOP)/bindings/Configuration/make.link


# Compiler/executable info
SHELL       = /bin/sh
MKDIR       = mkdir
CC          = cc
CXX         = CC -DMPICH_IGNORE_CXX_SEEK
F90         = ftn
F77         = ftn
CPP         = /lib/cpp
FPP         = /lib/cpp
LD          = echo -L/sw/xe/gsl/1.16-2014-12/cnl4.0_intel15.0.0/lib -lgsl -lgslcblas -Wl,--allow-multiple-definition
AR          = ar
RANLIB      = ranlib
PERL        = perl

CFLAGS      = -std\=gnu99
CXXFLAGS    = -fpermissive
F90FLAGS    = 
F77FLAGS    = 
CPPFLAGS    = 
FPPFLAGS    = -traditional

C_LINE_DIRECTIVES = no
F_LINE_DIRECTIVES = no

# Compiler versions as detected at configure time
# CPP: 
# CC:  icc version 18.0.3 (gcc version 4.9.3 compatibility)
# CXX: 
# FPP: 
# F77: Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.3.222 Build 20180410
# F90: Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.3.222 Build 20180410

MKDIRFLAGS  = -p

LDFLAGS     =  

ARFLAGS     = rucs
RANLIBFLAGS = -cs

# Debug flags
C_DEBUG_FLAGS   = -g
CXX_DEBUG_FLAGS = -g
F90_DEBUG_FLAGS = -g
F77_DEBUG_FLAGS = -g

# Optimisation flags
C_OPTIMISE_FLAGS   = -I/sw/xe/gsl/1.16-2014-12/cnl4.0_intel15.0.0/include/ -fast -diag-enable\=vec -no-ipo -O2 -qopenmp
CXX_OPTIMISE_FLAGS = -I/sw/xe/gsl/1.16-2014-12/cnl4.0_intel15.0.0/include/ -fast -diag-enable\=vec -no-ipo -O2 -qopenmp
F90_OPTIMISE_FLAGS = -fast -diag-enable\=vec -no-ipo -O2 -qopenmp
F77_OPTIMISE_FLAGS = -fast -diag-enable\=vec -no-ipo -O2 -qopenmp

# Profiling flags
C_PROFILE_FLAGS   = -pg
CXX_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg
F77_PROFILE_FLAGS = -pg

# Warning flags
C_WARN_FLAGS   = 
CXX_WARN_FLAGS = 
F90_WARN_FLAGS = 
F77_WARN_FLAGS = 

# Most compilers use -c -o to compile only, some do something different
CCOMPILEONLY = -c -o
FCOMPILEONLY = -c -o

# Most compilers use -o for naming the executable, alas some don't
CREATEEXE = -o

# On Unix a /
DIRSEP = /

EMPTY_VAR = # Nothing.  Leading space is removed.

# Mostly a single space, sometimes nothing at all
OPTIONSEP = $(EMPTY_VAR) # a single space

# Some architectures need to do something special for linking in libraries
LIBNAME_PREFIX = lib# Make sure there is no space at end.
LIBNAME_SUFFIX = .a

CACTUSLIBLINKLINE = -L$(CCTK_LIBDIR) $(addprefix -l, $(ALLCACTUSLIBS))

# Dependency file generation
C_DEPEND             = $(CC) -E -M $(CPPFLAGS)
CXX_DEPEND           = $(CXX) -E -M $(CPPFLAGS)
F77_DEPEND           = $(FPP) -M $(FPPFLAGS)
F_DEPEND             = $(FPP) -M $(FPPFLAGS)
F_DEPEND_MODULES     = $(CCTK_HOME)/lib/sbin/f_depend_modules.pl

C_DEPEND_OUT         =  > $@
CXX_DEPEND_OUT       =  > $@
F77_DEPEND_OUT       =  > $@
F_DEPEND_OUT         =  > $@
F_DEPEND_MODULES_OUT =  >> $@

# Some compilers are very picky about the names of C++ files
CXX_WORKING_NAME = $(notdir $<)

# Some compilers are very picky about the suffix for fortran files
F90_SUFFIX = f90

# How to postprocess object files
C_POSTPROCESSING   = 
CXX_POSTPROCESSING = 
F77_POSTPROCESSING = 
F_POSTPROCESSING   = 
F90_POSTPROCESSING = 

# Do we need to use ranlib ?
USE_RANLIB = no

# Exclude some files from the dependency lists
DEP_EXCLUDE_FILES = cctk_Functions\.h|CParameterStructNames\.h|cctk_Arguments\.h|definethisthorn\.h|FParameters.h|CParameters\.h

# Command used to get the working directory
GET_WD = pwd

# Way for Make to transofrm things like include directories
# into a form suitable for the compiler.

TRANSFORM_DIRS = $(1)

# Library info
LIBS    += crypt  ifcore imf svml m
LIBDIRS += /opt/cray/craype/2.5.16/lib

# Command to generate the link line for libraries
GENERAL_LIBRARIES = $(patsubst -L-%,-%,$(LIBDIRS:%=-L%)) $(patsubst -l-%,-%,$(LIBS:%=-l%))

# System include directories
SYS_INC_DIRS +=  

# Annoying stuff for some file systems.
PERL_BACKUP_NECESSARY = 

# Stuff for the architecture
OS     = linux-gnu
CPU    = x86_64
VENDOR = unknown

# X stuff
X_LIB_DIR  = NONE
X_INC_DIR  = NONE

# GNU stuff
BUILD_GETOPT = no
BUILD_REGEX  = no

# Where the CCTK puts things
PACKAGE_DIR = $(CCTK_HOME)/arrangements
BUILD_DIR   = $(TOP)/build
CCTK_LIBDIR = $(TOP)/lib

# The perl scripts run by the make system
BUILD_ACTIVETHORNS = $(CCTK_HOME)/lib/sbin/BuildActiveThorns.pl
CST = $(CCTK_HOME)/lib/sbin/CST

C_FILE_PROCESSOR = $(CCTK_HOME)/lib/sbin/c_file_processor.pl
F_FILE_PROCESSOR = $(CCTK_HOME)/lib/sbin/f_file_processor.pl

# The directory in which to place the executable
EXEDIR = $(CCTK_HOME)/exe

# The name of the executable
EXE    = cactus_giggle


# Is this a debug configuration ?
CCTK_DEBUG_MODE = no

ifeq ($(strip $(CCTK_DEBUG_MODE)),yes)
  CFLAGS   += $(C_DEBUG_FLAGS)
  CXXFLAGS += $(CXX_DEBUG_FLAGS)
  F77FLAGS += $(F77_DEBUG_FLAGS)
  F90FLAGS += $(F90_DEBUG_FLAGS)
endif

# Is this an optimising configuration ?
CCTK_OPTIMISE_MODE = yes

ifeq ($(strip $(CCTK_OPTIMISE_MODE)),yes)
  CFLAGS   += $(C_OPTIMISE_FLAGS)
  CXXFLAGS += $(CXX_OPTIMISE_FLAGS)
  F77FLAGS += $(F77_OPTIMISE_FLAGS)
  F90FLAGS += $(F90_OPTIMISE_FLAGS)
endif

# Is this a profiling configuration ?
CCTK_PROFILE_MODE = no

ifeq ($(strip $(CCTK_PROFILE_MODE)),yes)
  CFLAGS   += $(C_PROFILE_FLAGS)
  CXXFLAGS += $(CXX_PROFILE_FLAGS)
  F77FLAGS += $(F77_PROFILE_FLAGS)
  F90FLAGS += $(F90_PROFILE_FLAGS)
endif

# Are we building with all warnings switched on ?
# This option may be overwritten at compile time.
ifeq ($(WARN),)
  CCTK_WARN_MODE = no
else
  CCTK_WARN_MODE = $(WARN)
endif

ifeq ($(strip $(CCTK_WARN_MODE)),yes)
  CFLAGS   += $(C_WARN_FLAGS)
  CXXFLAGS += $(CXX_WARN_FLAGS)
  F77FLAGS += $(F77_WARN_FLAGS)
  F90FLAGS += $(F90_WARN_FLAGS)
endif

# Stuff specific to an architecture.
include $(TOP)/config-data/make.arch.defn
